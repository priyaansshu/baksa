[{"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/index.js":"1","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/App.js":"2","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/reportWebVitals.js":"3","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Room.js":"4","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Game.js":"5","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Header.js":"6","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/About.js":"7","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Grid.js":"8","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/GameOver.js":"9","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Chat.js":"10","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Dot.js":"11","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Container.js":"12"},{"size":532,"mtime":1659608098926,"results":"13","hashOfConfig":"14"},{"size":2763,"mtime":1659608098774,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1659608098927,"results":"16","hashOfConfig":"14"},{"size":12563,"mtime":1659612537012,"results":"17","hashOfConfig":"14"},{"size":25566,"mtime":1659612528690,"results":"18","hashOfConfig":"14"},{"size":724,"mtime":1659608098792,"results":"19","hashOfConfig":"14"},{"size":1059,"mtime":1659608098774,"results":"20","hashOfConfig":"14"},{"size":1503,"mtime":1659608098792,"results":"21","hashOfConfig":"14"},{"size":5195,"mtime":1659608098791,"results":"22","hashOfConfig":"14"},{"size":6668,"mtime":1659612542953,"results":"23","hashOfConfig":"14"},{"size":2881,"mtime":1659608098791,"results":"24","hashOfConfig":"14"},{"size":2751,"mtime":1659608098790,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"2y9g6a",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":71,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"29"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"29"},"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/index.js",[],[],["73","74"],"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/App.js",["75","76","77","78","79"],[],"\nimport './App.css';\nimport react, {useState} from 'react';\nimport \"./style.css\";\nimport Game from './Game';\nimport Room from './Room';\nimport {Route, Link, Routes} from \"react-router-dom\";\nimport About from '../src/Components/About';\nimport Header from \"../src/Components/Header\";\n\nfunction App() {\n  const [gridSize, setGridSize] = useState(4);\n  const [chosenMode, setChosenMode] = useState(1);\n  const [vsComp, setVsComp] = useState(false);\n  const [about, setAbout] = useState(false);\n  const [aboutButtonClass, setAboutButtonClass] = useState(\"\")\n\n  return(\n    <>\n      <div className={\"about-button\"+aboutButtonClass} onClick={()=>{\n        if(about){\n          setAboutButtonClass(\"\");\n          setAbout(false);\n        }\n        else{\n          setAboutButtonClass(\"-clicked\");\n          setAbout(true);\n        }\n      }}>\n      </div>  \n      <Routes>\n        <Route exact path=\"\" className=\"home-container\" element={about? <About/> :\n          <div className=\"home-container\">\n            <div className=\"logo-container\"></div>\n            <p className=\"rule\">Own the most boxes at the end of the game to win</p>\n            <div className=\"grid-buttons-container\">\n                <button className=\"grid-button\" id={chosenMode==1?\"four-button-chosen\":\"four-button\"} onClick={()=>{\n                  setGridSize(4);\n                  setChosenMode(1);\n                  }}>\n                    4X4\n                </button>\n                <button className=\"grid-button\" id={chosenMode==2?\"eight-button-chosen\":\"eight-button\"} onClick={()=>{\n                  setGridSize(8);\n                  setChosenMode(2);\n                  }}>\n                    8X8\n                </button>\n            </div>\n            <p className=\"select-mode-statement\">\n              Select a mode to start a {gridSize==4?\"4X4\":\"8X8\"} game\n            </p>\n            <div className=\"mode-buttons-container\">\n              <Link to={\"/room\"} style={{textDecoration: \"none\"}}>\n                <button \n                  className=\"mode-button\" \n                  id=\"custom-room-button\">\n                    Room\n                </button>\n              </Link>\n              <Link to={\"/offline\"} style={{textDecoration: \"none\"}}>\n                <button\n                  className=\"mode-button\"\n                  id=\"vs-comp-button\" \n                  onClick={()=>{setVsComp(true)}}> \n                    Offline\n                </button>\n              </Link>\n            </div>\n          </div>\n        }/>   \n        <Route exact path={\"/offline\"} element={<Game gridSize={gridSize} vsComp={vsComp} setVsComp={setVsComp}/>}/>\n        <Route exact path={\"/room/*\"} element={<Room gridSize={gridSize}/>}/>\n      </Routes>\n    </>\n  )\n}\n\nexport default App;\n\n\n\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/reportWebVitals.js",[],[],"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Room.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],[],"import React, {useEffect, useState, useRef} from 'react';\nimport \"./style.css\"\nimport {io} from \"socket.io-client\"\nimport Game from \"./Game\"\nimport Header from './Components/Header';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {Route, Link, Routes, Navigate, useNavigate} from \"react-router-dom\";\n\nconst socket = io('http://localhost:4000');\n\nexport default function (props) {\n    const [roomId, setRoomId] = useState(\"\");\n    const [shared, setShared] = useState(false);\n    const [joined, setJoined] = useState(false)\n    const [roomFull, setRoomFull] = useState(false);\n    const [playerRole, setPlayerRole] = useState(); // playerRole=1 if he created the room, else 2 if he joined one\n    const [roomCode, setRoomCode] = useState();\n    const [roomDoesNotExist, setRoomDoesNotExist] = useState(false);\n    const [hostGridSize, setHostGridSize] = useState(\"\");\n    const history = useNavigate();\n    const [urlRoomId, setUrlRoomId] = useState(\"\");\n    // var urlRoomId;\n\n    socket.on(\"start-game\", (tempUrlRoomId)=>{\n        if(playerRole==2){\n            if(roomId[6]=='8'){\n                setHostGridSize(8);\n            }\n            else{\n                setHostGridSize(4);\n            }\n        }\n        if(playerRole==1)toast.dismiss(roomCopiedToastId.current);\n        setJoined(true);\n        setUrlRoomId(tempUrlRoomId);\n    })\n    socket.off(\"room-full\").on(\"room-full\", ()=>{\n        toast(\"Room is full\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });\n        console.log(\"room is full\")\n    })\n    socket.off('room-does-not-exist').on(\"room-does-not-exist\", ()=>{\n        setRoomDoesNotExist(true);\n    })\n\n    useEffect(()=>{ \n        if(roomDoesNotExist){\n            console.log(\"here\");\n            toast(\"Room does not exist\", {\n                position: \"top-right\",\n                autoClose: 1000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: true,\n                progress: undefined,\n            });\n            console.log(\"Room does not exist\");\n            setRoomDoesNotExist(false);\n        }\n    }, [roomDoesNotExist])\n\n    const roomCopiedToastId = useRef(null);\n    function idCopied (){\n        if(roomCopiedToastId!=null){\n            toast.dismiss(roomCopiedToastId.current);\n        }\n        roomCopiedToastId.current = toast(\"Room ID copied to clipboard\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n            // transition: \"zoom\"\n        });  \n    } \n\n    const generateRandomString = (myLength) => {\n        const chars =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        const randomArray = Array.from(\n          { length: myLength },\n          (v, k) => chars[Math.floor(Math.random() * chars.length)]\n        );\n      \n        const randomString = randomArray.join(\"\");\n        return randomString;\n      };\n\n    useEffect(()=>{\n        if(urlRoomId!=\"\"){\n            history(\"/room/\"+urlRoomId);\n        }\n    }, [urlRoomId])\n\n    useEffect(()=>{\n        var curUrl = JSON.stringify(window.location.href)\n        console.log(performance.getEntriesByType(\"navigation\")[0].type, curUrl.substring(curUrl.length-6, curUrl.length-1));\n        if(curUrl.substring(curUrl.length-6, curUrl.length-1)!=\"room/\" && curUrl.substring(curUrl.length-5, curUrl.length-1)!=\"room\"){\n            history(\"/\");\n        }\n    }, [])\n\n    return (\n        <>\n            <Routes>\n                <Route path = \"/\" element = {\n                    <div>\n                        <Header gridSize={props.gridSize}/>\n                        {!shared?\n                        <div className=\"rooms-main-container\">\n                            {/* <Link to={\"/\"+roomCode} style={{textDecoration: \"none\"}}> */}\n                                <div className=\"create-room-container\">\n                                    <button \n                                        className=\"create-room\" \n                                        onClick={()=>{\n                                            setHostGridSize(props.gridSize);\n                                            idCopied();\n                                            setShared(true);\n                                            if(props.gridSize==8){\n                                                var tempRoomCode = generateRandomString(6)+\"8\";\n                                            }\n                                            else{\n                                                var tempRoomCode = generateRandomString(6);\n                                            }\n                                            setRoomCode(tempRoomCode);\n                                            socket.emit(\"room-created\", tempRoomCode);\n                                            setPlayerRole(1)\n                                            navigator.clipboard.writeText(tempRoomCode)\n                                            }\n                                        }>    \n                                    </button>\n                                </div>\n                            {/* </Link> */}\n                            {/* <Link to={\"/\"+roomId} style={{textDecoration: \"none\"}}> */}\n                                <div className=\"join-room-container\">\n                                    <input \n                                        className=\"room-input\" \n                                        type=\"text\" \n                                        style={roomId!==\"\"?{marginRight: \"10px\"}:{marginRight:\"0px\"}}\n                                        onChange={(e)=>{\n                                            setRoomId(e.target.value);\n                                        }} \n                                        onKeyPress={(e)=>{\n                                            if(e.key===\"Enter\"){\n                                                setPlayerRole(2)\n                                                socket.emit(\"joined-room\", roomId);\n                                            }\n                                        }}\n                                    />\n                                    {roomId!==\"\"?\n                                        <button className=\"join-room\"   \n                                            onClick={()=>{\n                                                setPlayerRole(2);\n                                                socket.emit(\"joined-room\", roomId)\n                                            }}>\n                                        Join\n                                        </button>\n                                    :null\n                                    }\n                                </div>\n                            {/* </Link> */}\n                            {!roomFull?\n                                <p className=\"room-id-statement\">Share Room ID with a friend or enter a Room ID to start the game</p>\n                            :\n                                <p className=\"room-full-statement\">Room is already full</p>\n                            }\n                        </div>:\n                        <div className=\"rooms-main-container waiting-room-container\">\n                            <div className=\"waiting-icon-container\">\n                            </div>\n                            <div className=\"room-id-container\" onClick={()=>{\n                                idCopied();\n                                navigator.clipboard.writeText(roomCode);\n                                }\n                            }>\n                                <span>{roomCode}</span>\n                            </div>\n                            <p className=\"room-id-statement\">Waiting for the other player to join the room</p>\n                        </div>}\n                        <ToastContainer/>\n                    </div>}\n                />\n                {console.log(\"roomCode: \"+urlRoomId)}\n                <Route path = {\"/\"+urlRoomId} element = {<Game gridSize={hostGridSize} roomId={playerRole==1?roomCode:roomId} socketId={socket.id} playerRole={playerRole}/>} />\n            </Routes>\n        </>\n  )\n}\n\n\n\n\n        // {joined?\n        //     <Route exact path={\"/\"+playerRole==1?roomCode:roomId} element={\n        //         <Game gridSize={hostGridSize} roomId={playerRole==1?roomCode:roomId} socketId={socket.id} playerRole={playerRole}/>\n        //     }/>\n        //     :\n        //     <Route exact path={\"/\"} element={\n        //     <div>\n        //         <Header gridSize={props.gridSize} fromMidGame={false}/>\n        //         {!shared?\n        //         <div className=\"rooms-main-container\">\n        //             <div className=\"create-room-container\">\n        //                 <button \n        //                     className=\"create-room\" \n        //                     onClick={()=>{\n        //                         setHostGridSize(props.gridSize);\n        //                         idCopied();\n        //                         setShared(true);\n        //                         if(props.gridSize==8){\n        //                             var tempRoomCode = generateRandomString(6)+\"8\";\n        //                         }\n        //                         else{\n        //                             var tempRoomCode = generateRandomString(6);\n        //                         }\n        //                         setRoomCode(tempRoomCode);\n        //                         // console.log(tempRoomCode);\n        //                         socket.emit(\"room-created\", tempRoomCode);\n        //                         setPlayerRole(1)\n        //                         navigator.clipboard.writeText(tempRoomCode)\n        //                         }\n        //                     }>    \n        //                 </button>\n        //             </div>\n        //             <div className=\"join-room-container\">\n        //                 <input \n        //                     className=\"room-input\" \n        //                     type=\"text\" \n        //                     style={roomId!==\"\"?{marginRight: \"10px\"}:{marginRight:\"0px\"}}\n        //                     onChange={(e)=>{\n        //                         setRoomId(e.target.value);\n        //                     }} \n        //                     onKeyPress={(e)=>{\n        //                         if(e.key===\"Enter\"){\n        //                             setPlayerRole(2)\n        //                             socket.emit(\"joined-room\", roomId);\n        //                         }\n        //                     }}\n        //                 />\n        //                 {roomId!==\"\"?\n        //                     <button className=\"join-room\"   \n        //                         onClick={()=>{\n        //                             setPlayerRole(2);\n        //                             socket.emit(\"joined-room\", roomId)\n        //                         }}>\n        //                     Join\n        //                     </button>\n        //                 :console.log(\"Enter Room Id\")\n        //                 }\n        //             </div>\n        //             {!roomFull?\n        //                 <p className=\"room-id-statement\">Share Room ID with a friend or enter a Room ID to start the game</p>\n        //             :\n        //                 <p className=\"room-full-statement\">Room is already full</p>\n        //             }\n        //         </div>:\n        //         <div className=\"rooms-main-container waiting-room-container\">\n        //             <div className=\"waiting-icon-container\">\n        //             </div>\n        //             <div className=\"room-id-container\" onClick={()=>{\n        //                 idCopied();\n        //                 navigator.clipboard.writeText(roomCode);\n        //                 }\n        //             }>\n        //                 <span>{roomCode}</span>\n        //             </div>\n        //             <p className=\"room-id-statement\">Waiting for the other player to join the room</p>\n        //         </div>}\n        //         <ToastContainer/>\n        //     </div> }/>}","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Game.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],[],"import logo from './logo.svg';\nimport './App.css';\nimport react, {useState, useEffect, useRef} from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport GameOver from './Components/GameOver';\nimport Header from './Components/Header';\nimport {io} from \"socket.io-client\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { css } from \"glamor\";\nimport Chat from './Components/Chat';\nimport { useNavigate } from 'react-router-dom';\nimport { useBeforeunload } from 'react-beforeunload';\n\nconst socket = io('http://localhost:4000');\n\nexport default function Game(props) {\n  var i, j;\n  var tempBoxCount = 0;\n  var compTempPos;\n  var compBoxFlag = false;\n  var comp2line = false;\n  const [elMap, setMap] = useState(new Map());\n  const [boxMap, setBoxMap] = useState(new Map());\n  \n  const [mapFlag, setMapFlag] = useState(true); //used to make sure the map is initialised only once\n  const [boxFlag, setBoxFlag] = useState(true); //used to make sure the box map is initialised only once\n  \n  var red=\"#c5183b\";\n  var blue=\"#3b919b\";\n  const assignedColor = props.playerRole==1?red:blue;\n\n  const [turn, setTurn] = useState(red);\n  const [redScore, setRedScore] = useState(0);\n  const [blueScore, setBlueScore] = useState(0);\n\n  const [gameOver, setGameOver] = useState(false);\n  var position;\n  const [tempId, setTempId] = useState(\"\");\n  const [tempColor, setTempColor] = useState(\"\");\n\n  const [finalRoomId, setFinalRoomId] = useState(\"\");\n  \n  const [messageArr, setMessageArr] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [lastSeen, setLastSeen] = useState(0);\n\n  const chatRef = useRef();\n  const gridRef = useRef();\n  const chatButtonRef = useRef();\n\n  const [gameLeaveWinner, setGameLeaveWinner] = useState(\"none\");\n  const [playerLeft, setPlayerLeft] = useState(false);\n  const [ locationKeys, setLocationKeys ] = useState([])\n  const history = useNavigate()\n\n  var t; // variable for temporarily handling id\n  var tempTurn; // variable for temporarily handling turn\n  var tempBoxColor=\"\";\n\n\n  useEffect(()=>{\n    var curUrl = JSON.stringify(window.location.href);\n    if(curUrl.substring(curUrl.length-8, curUrl.length-1)==\"offline\"){\n      props.setVsComp(true);\n    }\n  }, [])\n\n  useEffect(()=>{\n    var tempRoomId = props.roomId+\"1\";\n    socket.emit(\"rejoin\", {roomId: tempRoomId});\n  }, [])\n\n  useEffect(()=>{\n    socket.on(\"final-room\", ({roomId})=>{\n      // console.log(roomId);\n      setFinalRoomId(roomId);\n    })\n  }, [socket]);\n\n  function updateMapWithServer(){\n    // console.log(\"received\");\n    // socket.emit(\"test\", {roomId: finalRoomId, socketId: props.socketId});\n    socket.emit(\"update\", {turn: tempTurn, roomId: finalRoomId, socketId: props.socketId, position: position, tempId: t, tempBoxColor: tempBoxColor});\n  }\n  \n  useEffect(()=>{\n    // console.log(socket);\n    socket.on(\"updated\", (data)=>{\n      position = data.position;\n      tempBoxColor = data.tempBoxColor;\n      updateLocalVariablesWithServerValues(data.tempId, data.turn);\n      elementCheckUtilityFunction(position, data.tempId);\n    });\n  }, [socket]);\n\n  function updateLocalVariablesWithServerValues(tempId, tempColor){\n    setTempId(tempId);\n    setTempColor(tempColor);\n  }\n\n  (function initMap(){\n    if(mapFlag){\n      var tempSize = props.gridSize==4?65:225;\n      for(i=0; i<tempSize; ++i){\n      // for(i=0; i<props.gridSize==4?65:225; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n      setMapFlag(false);\n    }\n  })();\n\n  (function initBoxMap(){\n    if(boxFlag){\n      for(i=1; i<=props.gridSize; ++i){\n      // for(i=1; i<=4; ++i){\n        for(j=1; j<=props.gridSize; ++j)\n        // for(j=1; j<=4; ++j)\n          boxMap.set(\"b-\"+i+\"-\"+j, \"transparent\");\n      }\n      setBoxFlag(false);\n    }\n  })();\n\n  function updateMap(position){\n    if(elMap.get(position)!==\"clicked\"){\n      setMap(elMap.set(position, \"clicked\"));\n      // console.log(elMap);\n    }\n  }\n\n  function elementCheckUtilityFunction(position, id){\n    // console.log(\"here\");\n    updateMap(position);\n    setTurnFunc();\n    if(id.charAt(0) == \"h\"){\n      checkVerticalBoxes(id);\n    }\n    else{\n      checkHorizontalBoxes(id);\n    }\n  }\n\n  function elementCheck(id){\n    console.log(elMap);\n    t=id;\n    tempBoxColor=\"\"\n    position = calcPosition(id);\n    console.log(position);\n    elementCheckUtilityFunction(position, id);\n    tempTurn = turn;\n    if(!props.vsComp)\n      updateMapWithServer();\n  }\n  \n  function calcPosition(id){\n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    position = part1 + part2;\n    // console.log(position);\n    return position;\n  }\n\n  function setTurnFunc(){\n    setTurn(turn=>turn===red?blue:red);\n    // console.log(\"In the setTurn function: \"+turn);\n  }\n\n  function stayTurn(boxColor){\n    setTurn(boxColor);\n  }\n\n  function checkVerticalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n-1)+\"-\"+m;\n    id2=\"h-\"+(n+1)+\"-\"+m;\n    id3=\"v-\"+(n-1)+\"-\"+m;\n    id4=\"v-\"+(n-1)+\"-\"+(m+1);\n    id5=\"v-\"+(n)+\"-\"+m;\n    id6=\"v-\"+(n)+\"-\"+(m+1);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n    \n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        console.log(\"upper and lower boxes filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n        console.log(\"upper box filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        console.log(\"lower box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n  \n  function checkHorizontalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n)+\"-\"+(m-1);\n    id2=\"v-\"+(n)+\"-\"+(m-1);\n    id3=\"h-\"+(n+1)+\"-\"+(m-1);\n    id4=\"h-\"+(n)+\"-\"+(m);\n    id5=\"v-\"+(n)+\"-\"+(m+1);\n    id6=\"h-\"+(n+1)+\"-\"+(m);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n\n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      console.log(\"left and right boxes filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n      console.log(\"left box filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateTotal();\n    }\n    else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      console.log(\"right box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n\n  function updateScore(tempBoxId){\n    if(boxMap.get(tempBoxId)==red){\n      setRedScore(redScore=>redScore+1);\n    }\n    else if(boxMap.get(tempBoxId)==blue){\n      setBlueScore(blueScore=>blueScore+1);\n    }\n  }\n\n  function updateTotal(){\n    tempBoxCount=0;\n    for (const [key, value] of boxMap.entries()) {\n      if(value!=\"transparent\"){\n        // console.log(key+\": \"+value);\n        tempBoxCount++;\n      }\n    }\n    console.log(\"tempBoxCount: \"+tempBoxCount);\n    if(props.gridSize == 4){\n      if(tempBoxCount == 16){\n        setGameOver(true);\n      }\n    }\n    else if(props.gridSize == 8){\n      if(tempBoxCount == 64){\n        setGameOver(true);\n      }\n    }    \n    // console.log(\"totalScore: \"+(redScore+blueScore));\n    // if(props.gridSize == 4 && redScore+blueScore == 15){\n    //   setGameOver(true);\n    // }\n    // else if(props.gridSize == 8 && redScore+blueScore == 63){\n    //   setGameOver(true);\n    // }\n  }\n  \n  // function compCheckVerticalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n    \n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheckHorizontalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheck1lineHorizontal(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compCheck1lineVertical(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos2)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compFunc(elRef){\n  //   console.log(\"computer's turn\");\n  //   console.log(elMap);\n  //   compBoxFlag = false;\n  //   var comp1line = false;\n  //   var comp0line = false;\n\n  //   if(compBoxFlag == false){\n  //     // check box completion\n  //     console.log(\"check box completion\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(compBoxFlag == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             compCheckVerticalBoxes(compTempId1, elRef);\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             compCheckHorizontalBoxes(compTempId2, elRef);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if(compBoxFlag == false && comp1line == false && comp0line == false){\n  //     // check 0 line clicked\n  //     console.log(\"check 0 line clicked\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(comp0line == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId1);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId2);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //         }  \n  //       }\n  //     }\n  //   }\n  // }\n  \n  const playerColorToastId = useRef(null);\n  useEffect(() => {\n    var curUrl = JSON.stringify(window.location.href);\n    var tempVsComp;\n    if(curUrl.substring(curUrl.length-8, curUrl.length-1)==\"offline\"){\n      tempVsComp = true;\n    }\n    if(!tempVsComp && !gameOver){\n      var playerColor = assignedColor==\"#c5183b\"?\"Red\":\"Blue\";\n      playerColorToastId.current = toast(\"You are \"+playerColor, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });  \n    }\n  }, [gameOver, props.vsComp, ]);\n\n  function notTurnFunc(){\n    toast(\"It's not your turn\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined,\n    }); \n  }\n\n  function sendMessage(tempMessage, playerRole){\n    if(tempMessage==\"\"){\n        return;\n    }\n    socket.emit(\"send-message\", {roomId: finalRoomId, tempMessage: tempMessage, playerRole: playerRole});\n  }\n\n  socket.off(\"receive-message\");\n  socket.on(\"receive-message\", (tempMessage, playerRole)=>{\n      console.log(\"message received\");\n\n      const tempMessageArr = [...messageArr];\n      tempMessageArr.push({sender: playerRole, message: tempMessage});\n      console.log(tempMessageArr);\n      setMessageArr(tempMessageArr);\n    })\n\n    useEffect(()=>{\n      // if(playerColorToastId.current!=null && showChat){\n      //   toast.dismiss(playerColorToastId.current);\n      // }\n      if(showChat){\n        setLastSeen(messageArr.length);\n        setUnreadCount(0);\n      }\n      var tempUnreadCount = messageArr.length-lastSeen;\n      setUnreadCount(tempUnreadCount);\n    }, [showChat])\n\n    useEffect(()=>{\n      if(showChat){\n        setUnreadCount(0);\n        setLastSeen(messageArr.length);\n      }\n      else{\n        var tempUnreadCount = messageArr.length-lastSeen;\n        setUnreadCount(tempUnreadCount);\n      }\n    }, [messageArr.length])\n\n    useEffect(() => {\n      if(showChat){\n        function handleClickOutside(event) {\n          if (chatRef.current && !chatRef.current.contains(event.target) && gridRef.current && !gridRef.current.contains(event.target) && chatButtonRef.current && !chatButtonRef.current.contains(event.target)) {\n            setShowChat(false);\n          }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }\n    }, [showChat]);\n\n    // socket.off(\"game-left\");\n    useEffect(()=>{\n      if(!props.vsComp){\n        !gameOver && socket.on(\"game-left\", ({winner})=>{\n          console.log(\"The other player left the game\");\n          setPlayerLeft(true);\n          setGameOver(true);\n          setGameLeaveWinner(winner);\n        })\n      }\n    }, [socket])\n\n    useEffect(()=>{\n      if(!props.vsComp){\n        var tempRoomId = finalRoomId;\n        if(!playerLeft){\n          const intervalId = setInterval(() => {\n            socket.emit(\"game-leave-check\", ({playerRole: props.playerRole, roomId: tempRoomId}))\n          }, 2000);\n        }\n      }\n    }, [finalRoomId])\n\n    window.addEventListener('popstate', (event) => {\n      if (event.state) {\n        window.location.reload();\n      }\n     }, false)\n\n    useEffect(()=>{\n      window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n      window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n    }, []);\n\n  return (\n    <>\n      <Header gridSize={props.gridSize} gameOver={gameOver} fromMidGame={true} vsComp={props.vsComp}/>\n      <div className=\"center-container\">\n        <div className={!gameOver?\"show-grid\":\"hide-grid\"} ref={gridRef}>\n          <Grid \n            gridSize={props.gridSize}\n            func={elementCheck}  \n            turn={turn} \n            map={elMap} \n            boxMap={boxMap} \n            vsComp={props.vsComp} \n            tempColor={tempColor}\n            tempId={tempId}\n            assignedColor={assignedColor}\n            notTurnFunc = {notTurnFunc}\n          />\n        </div>\n\n        <div className={!gameOver?\"hide-game-over\":\"show-game-over\"}>\n          <GameOver gameLeaveWinner={gameLeaveWinner} redScore={redScore} blueScore={blueScore} gridSize={props.gridSize} boxMap={boxMap} vsComp={props.vsComp} gameOver={gameOver}/>\n        </div>\n        {/* {console.log(turn)} */}\n        <div className={!gameOver?\"score-container\":\"hide-score-container\"}>\n          <h2 className=\"score\" id={turn==red?\"turn-score-red\":\"score-red\"}>Red: {redScore}</h2>\n          <h2 className=\"score\" id={turn==blue?\"turn-score-blue\":\"score-blue\"}>Blue: {blueScore}</h2>\n        </div>\n      </div>\n    {!props.vsComp&&<div className={assignedColor==red?\"chat-button-container-red\":\"chat-button-container-blue\"}>\n      <div ref={chatButtonRef} className=\"chat-button\" onClick={()=>{\n        setShowChat(!showChat);\n      }\n      }>\n        <div className=\"unread-count-container\" style={{visibility: unreadCount==0?\"hidden\":\"visible\"}}>\n          {unreadCount}\n        </div>\n      </div>\n    </div>}\n    {!props.vsComp&&\n      <div ref={chatRef}>\n        <Chat sendMessage={sendMessage} messageArr={messageArr} chatColor={assignedColor} roomId={finalRoomId} playerRole={props.playerRole} showChat={showChat}/>\n      </div>\n    }\n    <ToastContainer />\n    </>\n  );\n}","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Header.js",["167","168","169","170","171"],[],"import React, {useEffect} from 'react'\nimport \"../style.css\";\nimport {Route, Link, Routes, useNavigate} from \"react-router-dom\";\n\nexport default function Header(props) {\n  const history = useNavigate();\n\n  return (\n    <Link to=\"/\" style={{textDecoration: \"none\"}}>\n        <div \n          className=\"header-container\" \n          id={props.gridSize==4?\"header-container-four\":\"header-container-eight\"}\n          onClick={()=>{\n            if(!props.gameOver && props.fromMidGame && !props.vsComp){\n              window.location.reload();\n            }\n            // else{\n            //   console.log(\"clicked home\")\n            //   history.goBack;\n            // }\n          }}\n        >\n        </div>\n    </Link>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/About.js",["172","173"],[],"import react, {useState} from 'react';\nimport \"../../src/style.css\";\n\nexport default function About() {\n  return (\n    <div className=\"about-container\">\n          <p className=\"about-text\">\n            Miss playing the classic dots and boxes game with your friends?\n            <br/>\n            <div className=\"about-container-baksa-title\">baksa</div>\n            brings all that fun online.\n          </p>\n        <div className=\"horizontal-rule\"></div>\n          <p className=\"rule-text\">\n            <p className=\"rule-heading\">📌 RULES</p>\n            <br/>\n            Join two horizontally or vertically adjacent dots by a line, and connect the last side of the square to score a point.\n          </p>\n        <div className=\"horizontal-rule\"></div>\n          <p className=\"credits-text\">\n            Created by <span className=\"priyanshu-modi-text\">Priyanshu Modi</span>\n          </p>\n        <div className=\"avatar-container\">\n        </div>\n    </div>\n  )\n}\n\n// onClick={window.open(\"https://priyanshumodi.live\", '_blank', 'noopener,noreferrer')}","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Grid.js",["174","175","176","177"],[],"import React from 'react'\nimport Dot from \"./Dot\"\nimport Container from \"./Container\"\nimport \"../style.css\";\n\nexport default function Grid(props) {\n    var containers = []\n    let i;\n    var numContainers = props.gridSize==4?9:17;\n    (function createContainer(){\n        for(i=0; i<numContainers; ++i){\n            containers.push(<Container \n                                    key={i} \n                                    row={i}\n                                    containerName={i%2==0?\"horizontal-bar-container\":\"vertical-bar-container\"}\n                                    containerId={i%2==0?\"horizontal-bar-container-\"+Math.ceil(i/2):\"vertical-bar-container-\"+Math.ceil(i/2)}\n                                    func={props.func}\n                                    turn={props.turn}\n                                    map={props.map}\n                                    boxMap={props.boxMap}\n                                    gridSize={props.gridSize}\n                                    vsComp={props.vsComp}\n                                    compFunc={props.compFunc}\n                                    tempColor={props.tempColor}\n                                    tempId={props.tempId}\n                                    assignedColor={props.assignedColor}\n                                    notTurnFunc = {props.notTurnFunc}\n                            />)\n        }\n    })()\n    return (\n        <>\n            <div className=\"containers\">{containers}</div>\n        </>\n    )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/GameOver.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],[],"import React, {useState, useEffect} from 'react'\nimport \"../style.css\"\nimport {Route, Link, Routes, useNavigate} from \"react-router-dom\";\nimport Game from \"../Game.js\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Confetti from 'react-confetti'\n\nexport default function GameOver(props) {\n    var result;\n    const [gridSize, setGridSize] = useState(4);\n    const [hideWinner, setHideWinner] = useState(\"flex\");\n    const [showShare, setShowShare] = useState(\"none\");\n    const [showConfetti, setShowConfetti] = useState(true);\n    const [recycleConfetti, setRecycleConfetti] = useState(true);\n    const history = useNavigate();\n\n    const generateRandomString = (myLength) => {\n        const chars =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        const randomArray = Array.from(\n          { length: myLength },\n          (v, k) => chars[Math.floor(Math.random() * chars.length)]\n        );\n      \n        const randomString = randomArray.join(\"\");\n        return randomString;\n    };\n    \n    const newRoomId = generateRandomString(6);\n\n    (function calcResult(){\n        if(props.gameLeaveWinner==\"none\"){\n            if(props.redScore>props.blueScore){\n                result = \"red\";\n            }\n            else if(props.redScore<props.blueScore){\n                result = \"blue\";\n            }\n            else{\n                result = \"draw\";\n            }\n        }\n        else{\n            result = props.gameLeaveWinner\n        }\n    })();\n    \n    function createEmoji(){\n        var i=0;\n        if(result == \"draw\"){\n            var message = \"It's a draw\\n\\n\";\n        }\n        else if(result==\"red\"){\n            message = \"👑 Red\\n\\n\";\n        }\n        else{\n            message = \"👑 Blue\\n\\n\";\n        }\n        for (const [key, value] of props.boxMap.entries()) {\n            if(props.gridSize==4){\n                if(i==4){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            else{\n                if(i==8){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            if(value==\"#c5183b\"){\n                message+=\"🟥\";\n            }\n            else if(value==\"#3b919b\"){\n                message+=\"🟦\";\n            }\n            else{\n                message+=\"⬜️\";\n            }\n            i++;\n        }   \n        console.log(message);\n        navigator.clipboard.writeText(message);\n    }\n\n    function resultCopied (){\n        toast(\"Result copied to clipboard\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });  \n    } \n\n    // useEffect(()=>{\n    //     if(props.gameOver){\n    //         console.log(\"here\");\n    //         setTimeout(()=>{\n    //             setShowConfetti(true);\n    //         }\n    //         ,2000);\n    //         setTimeout(()=>{\n    //             setRecycleConfetti(false);\n    //         }\n    //         ,5000);\n    //     }\n    // }, [props.gameOver])\n\n    return (\n    <>\n        {/* {showConfetti && \n            <Confetti \n                colors = {result==\"blue\"?[\"#3b919b\"]:[\"#c5183b\"]}\n                numberOfPieces = {80}\n                recycle = {recycleConfetti}\n            />\n        }  */}\n        <div className=\"logo-container\"></div>\n        {props.gameLeaveWinner!=\"none\"?\n            <div className=\"game-leave-message\">\n                The other player left the room.\n            </div>\n            :\n            null\n        }\n        <div className=\"winner-outer-container\">\n            <div \n                className=\"winner-container\" \n                id={result+\"-winner-container\"} \n                // onMouseEnter={()=>{setHideWinner(\"none\"); setShowShare(\"flex\")}} \n                // onMouseLeave={()=>{setHideWinner(\"flex\"); setShowShare(\"none\")}}\n                onClick={()=>{\n                    resultCopied();\n                    createEmoji();\n                }}\n                data-hover={\"share\"}\n            >\n                <div \n                    className=\"winner-text-container\" \n                    style={{display: hideWinner}}\n                >\n                        <h2 \n                            className=\"winner-text\">\n                                {result==\"draw\"?\"Draw\":result+\" wins\"}\n                                <div className = \"share-image-container\"/>\n                        </h2>\n                </div>\n            </div>\n        </div>\n        <ToastContainer/>\n        {/* <Link to={\"/game\"}> */}\n            <button \n                className=\"grid-button\" \n                id={props.gridSize==4?\"four-button\":\"eight-button\"} \n                onClick={()=>{history(\"/\")}}\n                >\n                Go Again\n            </button>\n        {/* </Link> */}\n        {/* {console.log(props.gridSize, props.vsComp)} */}\n        {/* <Routes>\n            <Route exact path={\"/game\"} element={<Game gridSize={props.gridSize} vsComp={props.vsComp}/>}/>\n        </Routes> */}\n    </>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Chat.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],[],"import React, {useState, useEffect, useRef} from 'react'\nimport \"../style.css\";\nimport {io} from \"socket.io-client\";\nimport {useSpring, animated} from \"react-spring\";\n\nconst socket = io('http://localhost:4000');\n\nexport default function Chat(props) {\n    const [message, setMessage]= useState(\"\");\n    var bgColor = props.chatColor==\"#c5183b\"?\"rgba(195, 24, 58, 0.5)\":\"rgba(59, 146, 155, 0.5)\";\n    var chatColor = props.chatColor==\"#c5183b\"?\"#c5183b\":\"#3b919b\";\n    const anchorDiv = useRef();\n    const inputRef = useRef();\n    const styleProps = useSpring({\n        visibility: props.showChat===true?\"visible\":\"hidden\",\n        height: props.showChat===true?\"65%\":\"0\",\n        width: window.innerWidth>768?(props.showChat===true?\"22%\":\"0\"):(props.showChat===true?\"90%\":\"0\"),\n        opacity: props.showChat===true?1:0,\n        config: {\n            duration:150,\n        }\n    })\n    useEffect(()=>{\n        anchorDiv.current.scrollIntoView({behaviour: 'smooth'});\n    }, [props.messageArr])\n\n    return (\n    <>\n        <animated.div className={\"chat-outer-container\"} style={styleProps}>\n            <div className=\"chat-role-container\" style={{backgroundColor: props.chatColor}}>\n                Chat as {chatColor==\"#c5183b\"?\"Red\":\"Blue\"}\n            </div>\n            <div className=\"chat-main-container\" >\n                {props.messageArr.map((msg, index)=>{\n                    return(\n                        <div \n                            className=\"chat-message-container\" \n                            key={index}\n                        >\n                                <p \n                                    className=\"chat-message-text\"\n                                    style={{color: msg.sender==1?\"#c5183b\":\"#3b919b\"}}\n                                >\n                                        {msg.message}\n                                </p>\n                        </div>\n                    )\n                })}\n                <div ref={anchorDiv}></div>\n            </div>\n            <div className=\"chat-bottom-container\">\n                <div className=\"pretyped-messages-container\">\n                    <div className=\"pretyped-message\" id=\"emoji-1\" \n                        onClick={()=>{\n                            props.sendMessage(props.playerRole==1?\"Red: 😂\":\"Blue: 😂\", props.playerRole);\n                        }}\n                    >\n                        <span role=\"img\" aria-label=\"emoji\">😂</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"emoji-2\"\n                        onClick={()=>{\n                            props.sendMessage(props.playerRole==1?\"Red: ❤️\":\"Blue: ❤️\", props.playerRole);\n                        }}\n                    >\n                        <span role=\"img\" aria-label=\"emoji\">❤️</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"emoji-3\"\n                        onClick={()=>{\n                            props.sendMessage(props.playerRole==1?\"Red: 😎\":\"Blue: 😎\", props.playerRole);\n                        }}\n                    >\n                        <span role=\"img\" aria-label=\"emoji\">😎</span>\n                    </div>    \n                    <div className=\"pretyped-message\" id=\"pretyped-message-1\"\n                        onClick={()=>{\n                            props.sendMessage(\"Hello\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Hello</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-2\"\n                        onClick={()=>{\n                            props.sendMessage(\"GG\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">GG</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-3\"\n                        onClick={()=>{\n                            props.sendMessage(\"LOL\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">LOL</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-4\"\n                        onClick={()=>{\n                            props.sendMessage(\"Thanks\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Thanks</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-5\"\n                        onClick={()=>{\n                            props.sendMessage(\"Another Round?\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Another Round?</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-6\"\n                        onClick={()=>{\n                            props.sendMessage(\"Okay\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Okay</span>\n                    </div>\n                </div>\n                <div className=\"chat-input-container\">\n                    <input \n                        type=\"text\" \n                        className=\"chat-input\"\n                        placeholder=\"Type a message...\"\n                        values={message}\n                        ref={inputRef}\n                        onKeyPress={(e)=>{\n                            if(e.key===\"Enter\"){\n                                props.sendMessage(e.target.value, props.playerRole);\n                                e.target.value=\"\";\n                            }\n                        }}\n                        onChange={(e)=>{\n                            setMessage(e.target.value);\n                        }}\n                        autoFocus\n                    />\n                    <button\n                        className=\"chat-send-button\"\n                        onClick={()=>{\n                            if(inputRef.current.value!=\"\"){\n                                props.sendMessage(message, props.playerRole);\n                            }\n                            setMessage(\"\");\n                            inputRef.current.value=\"\";\n                        }\n                        }\n                    >\n                        Send\n                    </button>\n                </div>\n            </div>\n        </animated.div>\n    </>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Dot.js",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],[],"import React, {useState, useRef} from 'react'\nimport ReactDOM from 'react-dom';\nimport \"../style.css\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport { useEffect } from 'react';\n\nexport default function Dot(props) {\n  var canInteract = \"i\";\n  var compFlag = false;\n  var elRef = useRef(null);\n  const [turn, setTurn] = useState();\n\n  (()=>{\n    if(!props.vsComp){\n      if(props.assignedColor==props.turn){\n        canInteract = \"i\";\n      }\n      else{\n        canInteract = \"ui\";\n      }\n    }\n  })();\n\n  function tempPos(id){    \n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    return position = part1 + part2;\n  }\n\n  (()=>{\n    //if props.tempId is equal to props.elementId, then set backgroundColor of elRef to props.tempColor\n    if(!props.vsComp){\n      if(props.tempId == props.elementId){\n        elRef.current.style.backgroundColor = props.tempColor;\n      }\n    }\n  })();\n\n  // (()=>{\n  //   setTurn(props.turn==\"#c5183b\"?\"red\":\"blue\");\n  // })();\n\n  useEffect(()=>{\n    setTurn(props.turn==\"#c5183b\"?\"red\":\"blue\");\n  }, [props.turn])\n\n  return(\n      <>\n        <div \n            ref = {elRef}\n            className={props.gridSize==4?(props.elementName+\"-\"+canInteract+\"-\"+turn):\"big-grid-\"+(props.elementName+\"-\"+canInteract+\"-\"+turn)}\n            id={props.elementId} \n            style={\n              props.elementId.charAt(0)===\"b\"?{backgroundColor: props.boxMap.get(props.elementId), opacity: \"0.5\"}:\n              null\n            }\n            onClick={(e)=>{\n              if(!props.vsComp){\n                if(props.assignedColor==props.turn){\n                  if(e.target.id.charAt(0)!==\"d\" && e.target.id.charAt(0)!==\"b\"){\n                    // console.log(\"clicked\")\n                    var tempPosition = tempPos(e.target.id);\n                    if(props.map.get(tempPosition)==\"unclicked\"){\n                      e.target.style.backgroundColor = props.turn;\n                      props.func(e.target.id);\n                    }\n                  }\n                }\n                else{\n                  props.notTurnFunc();\n                }\n              }\n              else{\n                if(e.target.id.charAt(0)!==\"d\" && e.target.id.charAt(0)!==\"b\"){\n                  var tempPosition = tempPos(e.target.id);\n                  if(props.map.get(tempPosition)==\"unclicked\"){\n                    e.target.style.backgroundColor = props.turn;\n                    props.func(e.target.id);\n                  }\n                }\n              }\n            }}\n        ></div>\n      </>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Container.js",["237","238","239","240","241","242","243"],[],"import React, {useState} from 'react'\nimport Dot from \"./Dot\";\nimport \"../style.css\";\n\nexport default function Container(props) {\n    var grid = [];\n    var dotCount, horizontalCount, verticalCount;\n    var keyCountHorizontal = 0, keyCountVertical = 0, boxCount = 1;\n    let i;\n    let rowCount = Math.floor(props.row/2)+1;\n    var elPerRow = props.gridSize==4?9:17;\n    (function createBoard(){\n        if(props.row%2==0){\n            for(i=0; i<elPerRow; ++i){\n                dotCount = (keyCountHorizontal/2 + 1);\n                horizontalCount = Math.ceil((keyCountHorizontal+1)/2);\n                grid.push(<Dot \n                                key={keyCountHorizontal++} \n                                elementName={i%2==0?\"dot\":\"horizontal-bar\"}\n                                elementId={i%2==0?\"d-\"+rowCount+\"-\"+dotCount:\"h-\"+rowCount+\"-\"+horizontalCount}\n                                func={props.func}\n                                turn={props.turn}\n                                map={props.map}\n                                boxMap={props.boxMap}\n                                gridSize={props.gridSize}\n                                vsComp={props.vsComp}\n                                compFunc={props.compFunc}\n                                tempColor={props.tempColor}\n                                tempId={props.tempId}\n                                assignedColor={props.assignedColor}\n                                notTurnFunc = {props.notTurnFunc}\n                            />)\n            }   \n        }\n        else{\n            for(i=0; i<elPerRow; ++i){\n                verticalCount = (keyCountVertical/2 + 1);\n                grid.push(<Dot\n                                key={keyCountVertical++}\n                                elementName={i%2==0?\"vertical-bar\":\"box\"}\n                                elementId={i%2==0?\"v-\"+rowCount+\"-\"+verticalCount:\"b-\"+rowCount+\"-\"+boxCount++}\n                                func={props.func}\n                                turn={props.turn}\n                                map={props.map}\n                                boxMap={props.boxMap}\n                                gridSize={props.gridSize}\n                                vsComp={props.vsComp}\n                                compFunc={props.compFunc}\n                                tempColor={props.tempColor}\n                                tempId={props.tempId}\n                                assignedColor={props.assignedColor}\n                                notTurnFunc = {props.notTurnFunc}\n                            />)\n            }\n        }\n    })()\n    \n    return (\n        <>\n            <div className={props.containerName} id={props.containerId}>{grid}</div>\n        </>\n    )\n}",{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":13},{"ruleId":"248","severity":1,"message":"252","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":14},{"ruleId":"253","severity":1,"message":"254","line":37,"column":63,"nodeType":"255","messageId":"256","endLine":37,"endColumn":65},{"ruleId":"253","severity":1,"message":"254","line":43,"column":63,"nodeType":"255","messageId":"256","endLine":43,"endColumn":65},{"ruleId":"253","severity":1,"message":"254","line":51,"column":49,"nodeType":"255","messageId":"256","endLine":51,"endColumn":51},{"ruleId":"248","severity":1,"message":"257","line":8,"column":16,"nodeType":"250","messageId":"251","endLine":8,"endColumn":20},{"ruleId":"248","severity":1,"message":"258","line":8,"column":30,"nodeType":"250","messageId":"251","endLine":8,"endColumn":38},{"ruleId":"259","severity":1,"message":"260","line":12,"column":1,"nodeType":"261","endLine":199,"endColumn":2},{"ruleId":"248","severity":1,"message":"262","line":15,"column":12,"nodeType":"250","messageId":"251","endLine":15,"endColumn":18},{"ruleId":"248","severity":1,"message":"263","line":16,"column":22,"nodeType":"250","messageId":"251","endLine":16,"endColumn":33},{"ruleId":"253","severity":1,"message":"254","line":26,"column":22,"nodeType":"255","messageId":"256","endLine":26,"endColumn":24},{"ruleId":"253","severity":1,"message":"254","line":27,"column":25,"nodeType":"255","messageId":"256","endLine":27,"endColumn":27},{"ruleId":"253","severity":1,"message":"254","line":34,"column":22,"nodeType":"255","messageId":"256","endLine":34,"endColumn":24},{"ruleId":"253","severity":1,"message":"264","line":101,"column":21,"nodeType":"255","messageId":"256","endLine":101,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":104,"column":8,"nodeType":"267","endLine":104,"endColumn":19,"suggestions":"268"},{"ruleId":"253","severity":1,"message":"264","line":109,"column":62,"nodeType":"255","messageId":"256","endLine":109,"endColumn":64},{"ruleId":"253","severity":1,"message":"264","line":109,"column":125,"nodeType":"255","messageId":"256","endLine":109,"endColumn":127},{"ruleId":"265","severity":1,"message":"266","line":112,"column":8,"nodeType":"267","endLine":112,"endColumn":10,"suggestions":"269"},{"ruleId":"253","severity":1,"message":"254","line":130,"column":62,"nodeType":"255","messageId":"256","endLine":130,"endColumn":64},{"ruleId":"270","severity":1,"message":"271","line":134,"column":53,"nodeType":"250","messageId":"272","endLine":134,"endColumn":65},{"ruleId":"253","severity":1,"message":"254","line":195,"column":106,"nodeType":"255","messageId":"256","endLine":195,"endColumn":108},{"ruleId":"248","severity":1,"message":"273","line":1,"column":8,"nodeType":"250","messageId":"251","endLine":1,"endColumn":12},{"ruleId":"248","severity":1,"message":"249","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":13},{"ruleId":"248","severity":1,"message":"274","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":11},{"ruleId":"248","severity":1,"message":"275","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":13},{"ruleId":"248","severity":1,"message":"276","line":14,"column":10,"nodeType":"250","messageId":"251","endLine":14,"endColumn":25},{"ruleId":"248","severity":1,"message":"277","line":21,"column":7,"nodeType":"250","messageId":"251","endLine":21,"endColumn":18},{"ruleId":"248","severity":1,"message":"278","line":22,"column":7,"nodeType":"250","messageId":"251","endLine":22,"endColumn":18},{"ruleId":"248","severity":1,"message":"279","line":23,"column":7,"nodeType":"250","messageId":"251","endLine":23,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":32,"column":41,"nodeType":"255","messageId":"256","endLine":32,"endColumn":43},{"ruleId":"248","severity":1,"message":"280","line":56,"column":11,"nodeType":"250","messageId":"251","endLine":56,"endColumn":23},{"ruleId":"248","severity":1,"message":"281","line":56,"column":25,"nodeType":"250","messageId":"251","endLine":56,"endColumn":40},{"ruleId":"248","severity":1,"message":"282","line":57,"column":9,"nodeType":"250","messageId":"251","endLine":57,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":66,"column":58,"nodeType":"255","messageId":"256","endLine":66,"endColumn":60},{"ruleId":"265","severity":1,"message":"283","line":69,"column":6,"nodeType":"267","endLine":69,"endColumn":8,"suggestions":"284"},{"ruleId":"265","severity":1,"message":"285","line":74,"column":6,"nodeType":"267","endLine":74,"endColumn":8,"suggestions":"286"},{"ruleId":"265","severity":1,"message":"287","line":81,"column":6,"nodeType":"267","endLine":81,"endColumn":14,"suggestions":"288"},{"ruleId":"265","severity":1,"message":"289","line":92,"column":18,"nodeType":"290","endLine":92,"endColumn":31},{"ruleId":"265","severity":1,"message":"291","line":93,"column":22,"nodeType":"290","endLine":93,"endColumn":39},{"ruleId":"253","severity":1,"message":"254","line":106,"column":36,"nodeType":"255","messageId":"256","endLine":106,"endColumn":38},{"ruleId":"253","severity":1,"message":"254","line":138,"column":21,"nodeType":"255","messageId":"256","endLine":138,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":160,"column":20,"nodeType":"255","messageId":"256","endLine":160,"endColumn":22},{"ruleId":"253","severity":1,"message":"254","line":164,"column":25,"nodeType":"255","messageId":"256","endLine":164,"endColumn":27},{"ruleId":"253","severity":1,"message":"254","line":204,"column":20,"nodeType":"255","messageId":"256","endLine":204,"endColumn":22},{"ruleId":"270","severity":1,"message":"292","line":208,"column":11,"nodeType":"250","messageId":"272","endLine":208,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":211,"column":23,"nodeType":"255","messageId":"256","endLine":211,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":211,"column":53,"nodeType":"255","messageId":"256","endLine":211,"endColumn":55},{"ruleId":"253","severity":1,"message":"254","line":211,"column":84,"nodeType":"255","messageId":"256","endLine":211,"endColumn":86},{"ruleId":"253","severity":1,"message":"254","line":211,"column":114,"nodeType":"255","messageId":"256","endLine":211,"endColumn":116},{"ruleId":"253","severity":1,"message":"254","line":211,"column":145,"nodeType":"255","messageId":"256","endLine":211,"endColumn":147},{"ruleId":"253","severity":1,"message":"254","line":211,"column":175,"nodeType":"255","messageId":"256","endLine":211,"endColumn":177},{"ruleId":"253","severity":1,"message":"254","line":220,"column":28,"nodeType":"255","messageId":"256","endLine":220,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":220,"column":58,"nodeType":"255","messageId":"256","endLine":220,"endColumn":60},{"ruleId":"253","severity":1,"message":"254","line":220,"column":89,"nodeType":"255","messageId":"256","endLine":220,"endColumn":91},{"ruleId":"253","severity":1,"message":"254","line":227,"column":28,"nodeType":"255","messageId":"256","endLine":227,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":227,"column":59,"nodeType":"255","messageId":"256","endLine":227,"endColumn":61},{"ruleId":"253","severity":1,"message":"254","line":227,"column":89,"nodeType":"255","messageId":"256","endLine":227,"endColumn":91},{"ruleId":"253","severity":1,"message":"254","line":257,"column":20,"nodeType":"255","messageId":"256","endLine":257,"endColumn":22},{"ruleId":"270","severity":1,"message":"292","line":261,"column":11,"nodeType":"250","messageId":"272","endLine":261,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":264,"column":23,"nodeType":"255","messageId":"256","endLine":264,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":264,"column":53,"nodeType":"255","messageId":"256","endLine":264,"endColumn":55},{"ruleId":"253","severity":1,"message":"254","line":264,"column":84,"nodeType":"255","messageId":"256","endLine":264,"endColumn":86},{"ruleId":"253","severity":1,"message":"254","line":264,"column":114,"nodeType":"255","messageId":"256","endLine":264,"endColumn":116},{"ruleId":"253","severity":1,"message":"254","line":264,"column":145,"nodeType":"255","messageId":"256","endLine":264,"endColumn":147},{"ruleId":"253","severity":1,"message":"254","line":264,"column":175,"nodeType":"255","messageId":"256","endLine":264,"endColumn":177},{"ruleId":"253","severity":1,"message":"254","line":273,"column":28,"nodeType":"255","messageId":"256","endLine":273,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":273,"column":58,"nodeType":"255","messageId":"256","endLine":273,"endColumn":60},{"ruleId":"253","severity":1,"message":"254","line":273,"column":89,"nodeType":"255","messageId":"256","endLine":273,"endColumn":91},{"ruleId":"253","severity":1,"message":"254","line":280,"column":28,"nodeType":"255","messageId":"256","endLine":280,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":280,"column":59,"nodeType":"255","messageId":"256","endLine":280,"endColumn":61},{"ruleId":"253","severity":1,"message":"254","line":280,"column":89,"nodeType":"255","messageId":"256","endLine":280,"endColumn":91},{"ruleId":"253","severity":1,"message":"254","line":292,"column":29,"nodeType":"255","messageId":"256","endLine":292,"endColumn":31},{"ruleId":"253","severity":1,"message":"254","line":295,"column":34,"nodeType":"255","messageId":"256","endLine":295,"endColumn":36},{"ruleId":"248","severity":1,"message":"293","line":302,"column":17,"nodeType":"250","messageId":"251","endLine":302,"endColumn":20},{"ruleId":"253","severity":1,"message":"264","line":303,"column":15,"nodeType":"255","messageId":"256","endLine":303,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":309,"column":23,"nodeType":"255","messageId":"256","endLine":309,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":310,"column":23,"nodeType":"255","messageId":"256","endLine":310,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":314,"column":28,"nodeType":"255","messageId":"256","endLine":314,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":315,"column":23,"nodeType":"255","messageId":"256","endLine":315,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":604,"column":58,"nodeType":"255","messageId":"256","endLine":604,"endColumn":60},{"ruleId":"253","severity":1,"message":"254","line":608,"column":38,"nodeType":"255","messageId":"256","endLine":608,"endColumn":40},{"ruleId":"265","severity":1,"message":"294","line":619,"column":6,"nodeType":"267","endLine":619,"endColumn":32,"suggestions":"295"},{"ruleId":"253","severity":1,"message":"254","line":634,"column":19,"nodeType":"255","messageId":"256","endLine":634,"endColumn":21},{"ruleId":"265","severity":1,"message":"296","line":660,"column":8,"nodeType":"267","endLine":660,"endColumn":18,"suggestions":"297"},{"ruleId":"265","severity":1,"message":"298","line":671,"column":8,"nodeType":"267","endLine":671,"endColumn":27,"suggestions":"299"},{"ruleId":"265","severity":1,"message":"300","line":697,"column":8,"nodeType":"267","endLine":697,"endColumn":16,"suggestions":"301"},{"ruleId":"248","severity":1,"message":"302","line":703,"column":17,"nodeType":"250","messageId":"251","endLine":703,"endColumn":27},{"ruleId":"265","severity":1,"message":"303","line":708,"column":8,"nodeType":"267","endLine":708,"endColumn":21,"suggestions":"304"},{"ruleId":"253","severity":1,"message":"254","line":745,"column":41,"nodeType":"255","messageId":"256","endLine":745,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":746,"column":41,"nodeType":"255","messageId":"256","endLine":746,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":749,"column":50,"nodeType":"255","messageId":"256","endLine":749,"endColumn":52},{"ruleId":"253","severity":1,"message":"254","line":754,"column":80,"nodeType":"255","messageId":"256","endLine":754,"endColumn":82},{"ruleId":"248","severity":1,"message":"305","line":1,"column":16,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"306","line":3,"column":9,"nodeType":"250","messageId":"251","endLine":3,"endColumn":14},{"ruleId":"248","severity":1,"message":"307","line":3,"column":22,"nodeType":"250","messageId":"251","endLine":3,"endColumn":28},{"ruleId":"248","severity":1,"message":"282","line":6,"column":9,"nodeType":"250","messageId":"251","endLine":6,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":12,"column":29,"nodeType":"255","messageId":"256","endLine":12,"endColumn":31},{"ruleId":"248","severity":1,"message":"249","line":1,"column":8,"nodeType":"250","messageId":"251","endLine":1,"endColumn":13},{"ruleId":"248","severity":1,"message":"308","line":1,"column":16,"nodeType":"250","messageId":"251","endLine":1,"endColumn":24},{"ruleId":"248","severity":1,"message":"274","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":11},{"ruleId":"253","severity":1,"message":"254","line":9,"column":39,"nodeType":"255","messageId":"256","endLine":9,"endColumn":41},{"ruleId":"253","severity":1,"message":"254","line":15,"column":55,"nodeType":"255","messageId":"256","endLine":15,"endColumn":57},{"ruleId":"253","severity":1,"message":"254","line":16,"column":53,"nodeType":"255","messageId":"256","endLine":16,"endColumn":55},{"ruleId":"248","severity":1,"message":"305","line":1,"column":26,"nodeType":"250","messageId":"251","endLine":1,"endColumn":35},{"ruleId":"248","severity":1,"message":"306","line":3,"column":9,"nodeType":"250","messageId":"251","endLine":3,"endColumn":14},{"ruleId":"248","severity":1,"message":"257","line":3,"column":16,"nodeType":"250","messageId":"251","endLine":3,"endColumn":20},{"ruleId":"248","severity":1,"message":"307","line":3,"column":22,"nodeType":"250","messageId":"251","endLine":3,"endColumn":28},{"ruleId":"248","severity":1,"message":"309","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":12},{"ruleId":"248","severity":1,"message":"310","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":16},{"ruleId":"248","severity":1,"message":"311","line":11,"column":12,"nodeType":"250","messageId":"251","endLine":11,"endColumn":20},{"ruleId":"248","severity":1,"message":"312","line":11,"column":22,"nodeType":"250","messageId":"251","endLine":11,"endColumn":33},{"ruleId":"248","severity":1,"message":"313","line":12,"column":24,"nodeType":"250","messageId":"251","endLine":12,"endColumn":37},{"ruleId":"248","severity":1,"message":"314","line":13,"column":12,"nodeType":"250","messageId":"251","endLine":13,"endColumn":21},{"ruleId":"248","severity":1,"message":"315","line":13,"column":23,"nodeType":"250","messageId":"251","endLine":13,"endColumn":35},{"ruleId":"248","severity":1,"message":"316","line":14,"column":12,"nodeType":"250","messageId":"251","endLine":14,"endColumn":24},{"ruleId":"248","severity":1,"message":"317","line":14,"column":26,"nodeType":"250","messageId":"251","endLine":14,"endColumn":41},{"ruleId":"248","severity":1,"message":"318","line":15,"column":12,"nodeType":"250","messageId":"251","endLine":15,"endColumn":27},{"ruleId":"248","severity":1,"message":"319","line":15,"column":29,"nodeType":"250","messageId":"251","endLine":15,"endColumn":47},{"ruleId":"248","severity":1,"message":"320","line":30,"column":11,"nodeType":"250","messageId":"251","endLine":30,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":33,"column":33,"nodeType":"255","messageId":"256","endLine":33,"endColumn":35},{"ruleId":"253","severity":1,"message":"254","line":51,"column":19,"nodeType":"255","messageId":"256","endLine":51,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":54,"column":23,"nodeType":"255","messageId":"256","endLine":54,"endColumn":25},{"ruleId":"248","severity":1,"message":"293","line":60,"column":21,"nodeType":"250","messageId":"251","endLine":60,"endColumn":24},{"ruleId":"253","severity":1,"message":"254","line":61,"column":30,"nodeType":"255","messageId":"256","endLine":61,"endColumn":32},{"ruleId":"253","severity":1,"message":"254","line":62,"column":21,"nodeType":"255","messageId":"256","endLine":62,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":68,"column":21,"nodeType":"255","messageId":"256","endLine":68,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":73,"column":21,"nodeType":"255","messageId":"256","endLine":73,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":76,"column":26,"nodeType":"255","messageId":"256","endLine":76,"endColumn":28},{"ruleId":"253","severity":1,"message":"264","line":124,"column":31,"nodeType":"255","messageId":"256","endLine":124,"endColumn":33},{"ruleId":"253","severity":1,"message":"254","line":149,"column":40,"nodeType":"255","messageId":"256","endLine":149,"endColumn":42},{"ruleId":"253","severity":1,"message":"254","line":159,"column":35,"nodeType":"255","messageId":"256","endLine":159,"endColumn":37},{"ruleId":"248","severity":1,"message":"321","line":6,"column":7,"nodeType":"250","messageId":"251","endLine":6,"endColumn":13},{"ruleId":"248","severity":1,"message":"322","line":10,"column":9,"nodeType":"250","messageId":"251","endLine":10,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":10,"column":34,"nodeType":"255","messageId":"256","endLine":10,"endColumn":36},{"ruleId":"253","severity":1,"message":"254","line":11,"column":36,"nodeType":"255","messageId":"256","endLine":11,"endColumn":38},{"ruleId":"253","severity":1,"message":"254","line":31,"column":35,"nodeType":"255","messageId":"256","endLine":31,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":42,"column":62,"nodeType":"255","messageId":"256","endLine":42,"endColumn":64},{"ruleId":"253","severity":1,"message":"254","line":55,"column":63,"nodeType":"255","messageId":"256","endLine":55,"endColumn":65},{"ruleId":"253","severity":1,"message":"254","line":62,"column":63,"nodeType":"255","messageId":"256","endLine":62,"endColumn":65},{"ruleId":"253","severity":1,"message":"254","line":69,"column":63,"nodeType":"255","messageId":"256","endLine":69,"endColumn":65},{"ruleId":"323","severity":1,"message":"324","line":79,"column":31,"nodeType":"325","endLine":79,"endColumn":42},{"ruleId":"323","severity":1,"message":"324","line":86,"column":31,"nodeType":"325","endLine":86,"endColumn":42},{"ruleId":"323","severity":1,"message":"324","line":93,"column":31,"nodeType":"325","endLine":93,"endColumn":42},{"ruleId":"323","severity":1,"message":"324","line":100,"column":31,"nodeType":"325","endLine":100,"endColumn":42},{"ruleId":"323","severity":1,"message":"324","line":107,"column":31,"nodeType":"325","endLine":107,"endColumn":42},{"ruleId":"323","severity":1,"message":"324","line":114,"column":31,"nodeType":"325","endLine":114,"endColumn":42},{"ruleId":"253","severity":1,"message":"264","line":138,"column":54,"nodeType":"255","messageId":"256","endLine":138,"endColumn":56},{"ruleId":"248","severity":1,"message":"326","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":16},{"ruleId":"248","severity":1,"message":"327","line":4,"column":9,"nodeType":"250","messageId":"251","endLine":4,"endColumn":23},{"ruleId":"248","severity":1,"message":"328","line":4,"column":25,"nodeType":"250","messageId":"251","endLine":4,"endColumn":30},{"ruleId":"248","severity":1,"message":"329","line":9,"column":7,"nodeType":"250","messageId":"251","endLine":9,"endColumn":15},{"ruleId":"253","severity":1,"message":"254","line":15,"column":29,"nodeType":"255","messageId":"256","endLine":15,"endColumn":31},{"ruleId":"253","severity":1,"message":"254","line":26,"column":20,"nodeType":"255","messageId":"256","endLine":26,"endColumn":22},{"ruleId":"253","severity":1,"message":"254","line":30,"column":25,"nodeType":"255","messageId":"256","endLine":30,"endColumn":27},{"ruleId":"248","severity":1,"message":"330","line":38,"column":12,"nodeType":"250","messageId":"251","endLine":38,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":44,"column":23,"nodeType":"255","messageId":"256","endLine":44,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":55,"column":23,"nodeType":"255","messageId":"256","endLine":55,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":62,"column":38,"nodeType":"255","messageId":"256","endLine":62,"endColumn":40},{"ruleId":"253","severity":1,"message":"254","line":70,"column":39,"nodeType":"255","messageId":"256","endLine":70,"endColumn":41},{"ruleId":"253","severity":1,"message":"254","line":74,"column":51,"nodeType":"255","messageId":"256","endLine":74,"endColumn":53},{"ruleId":"270","severity":1,"message":"331","line":86,"column":23,"nodeType":"250","messageId":"272","endLine":86,"endColumn":35},{"ruleId":"253","severity":1,"message":"254","line":87,"column":49,"nodeType":"255","messageId":"256","endLine":87,"endColumn":51},{"ruleId":"248","severity":1,"message":"308","line":1,"column":16,"nodeType":"250","messageId":"251","endLine":1,"endColumn":24},{"ruleId":"253","severity":1,"message":"254","line":11,"column":34,"nodeType":"255","messageId":"256","endLine":11,"endColumn":36},{"ruleId":"253","severity":1,"message":"254","line":13,"column":23,"nodeType":"255","messageId":"256","endLine":13,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":19,"column":49,"nodeType":"255","messageId":"256","endLine":19,"endColumn":51},{"ruleId":"253","severity":1,"message":"254","line":20,"column":47,"nodeType":"255","messageId":"256","endLine":20,"endColumn":49},{"ruleId":"253","severity":1,"message":"254","line":40,"column":49,"nodeType":"255","messageId":"256","endLine":40,"endColumn":51},{"ruleId":"253","severity":1,"message":"254","line":41,"column":47,"nodeType":"255","messageId":"256","endLine":41,"endColumn":49},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Navigate' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'joined' is assigned a value but never used.","'setRoomFull' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["334"],["335"],"no-redeclare","'tempRoomCode' is already defined.","redeclared","'logo' is defined but never used.","'Dot' is defined but never used.","'css' is defined but never used.","'useBeforeunload' is defined but never used.","'compTempPos' is defined but never used.","'compBoxFlag' is assigned a value but never used.","'comp2line' is assigned a value but never used.","'locationKeys' is assigned a value but never used.","'setLocationKeys' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["336"],"React Hook useEffect has a missing dependency: 'props.roomId'. Either include it or remove the dependency array.",["337"],"React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["338"],"Assignments to the 'position' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'tempBoxColor' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'boxColor' is already defined.","'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'assignedColor'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has missing dependencies: 'lastSeen' and 'messageArr.length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLastSeen' needs the current value of 'messageArr.length'.",["340"],"React Hook useEffect has missing dependencies: 'lastSeen' and 'showChat'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has missing dependencies: 'gameOver' and 'props.vsComp'. Either include them or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["342"],"'intervalId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'playerLeft', 'props.playerRole', and 'props.vsComp'. Either include them or remove the dependency array.",["343"],"'useEffect' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'useState' is defined but never used.","'Game' is defined but never used.","'Confetti' is defined but never used.","'gridSize' is assigned a value but never used.","'setGridSize' is assigned a value but never used.","'setHideWinner' is assigned a value but never used.","'showShare' is assigned a value but never used.","'setShowShare' is assigned a value but never used.","'showConfetti' is assigned a value but never used.","'setShowConfetti' is assigned a value but never used.","'recycleConfetti' is assigned a value but never used.","'setRecycleConfetti' is assigned a value but never used.","'newRoomId' is assigned a value but never used.","'socket' is assigned a value but never used.","'bgColor' is assigned a value but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'ReactDOM' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'compFlag' is assigned a value but never used.","'position' is assigned a value but never used.","'tempPosition' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"356","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [history, urlRoomId]",{"range":"363","text":"364"},"Update the dependencies array to be: [history]",{"range":"365","text":"366"},"Update the dependencies array to be: [props]",{"range":"367","text":"368"},"Update the dependencies array to be: [props.roomId]",{"range":"369","text":"370"},"Update the dependencies array to be: []",{"range":"371","text":"372"},"Update the dependencies array to be: [assignedColor, gameOver, props.vsComp]",{"range":"373","text":"374"},"Update the dependencies array to be: [lastSeen, messageArr.length, showChat]",{"range":"375","text":"376"},{"range":"377","text":"376"},"Update the dependencies array to be: [gameOver, props.vsComp]",{"range":"378","text":"379"},"Update the dependencies array to be: [finalRoomId, playerLeft, props.playerRole, props.vsComp]",{"range":"380","text":"381"},[3402,3413],"[history, urlRoomId]",[3797,3799],"[history]",[2334,2336],"[props]",[2450,2452],"[props.roomId]",[2587,2595],"[]",[20664,20690],"[assignedColor, gameOver, props.vsComp]",[21830,21840],"[lastSeen, messageArr.length, showChat]",[22084,22103],[22979,22987],"[gameOver, props.vsComp]",[23290,23303],"[finalRoomId, playerLeft, props.playerRole, props.vsComp]"]