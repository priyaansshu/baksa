[{"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/index.js":"1","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/App.js":"2","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/reportWebVitals.js":"3","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Room.js":"4","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Game.js":"5","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Header.js":"6","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/About.js":"7","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Grid.js":"8","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/GameOver.js":"9","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Chat.js":"10","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Dot.js":"11","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Container.js":"12"},{"size":532,"mtime":1659722895710,"results":"13","hashOfConfig":"14"},{"size":2763,"mtime":1659722895428,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1659722895710,"results":"16","hashOfConfig":"14"},{"size":9139,"mtime":1659954681095,"results":"17","hashOfConfig":"14"},{"size":29106,"mtime":1660057637421,"results":"18","hashOfConfig":"14"},{"size":724,"mtime":1659722895464,"results":"19","hashOfConfig":"14"},{"size":1059,"mtime":1659722895441,"results":"20","hashOfConfig":"14"},{"size":1717,"mtime":1659889901317,"results":"21","hashOfConfig":"14"},{"size":5195,"mtime":1659722895464,"results":"22","hashOfConfig":"14"},{"size":6756,"mtime":1659952927531,"results":"23","hashOfConfig":"14"},{"size":4798,"mtime":1659893921548,"results":"24","hashOfConfig":"14"},{"size":3155,"mtime":1659889933557,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"2y9g6a",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":84,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"29"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"29"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"29"},"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/index.js",[],[],["73","74"],"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/App.js",["75","76","77","78","79"],[],"\nimport './App.css';\nimport react, {useState} from 'react';\nimport \"./style.css\";\nimport Game from './Game';\nimport Room from './Room';\nimport {Route, Link, Routes} from \"react-router-dom\";\nimport About from '../src/Components/About';\nimport Header from \"../src/Components/Header\";\n\nfunction App() {\n  const [gridSize, setGridSize] = useState(4);\n  const [chosenMode, setChosenMode] = useState(1);\n  const [vsComp, setVsComp] = useState(false);\n  const [about, setAbout] = useState(false);\n  const [aboutButtonClass, setAboutButtonClass] = useState(\"\")\n\n  return(\n    <>\n      <div className={\"about-button\"+aboutButtonClass} onClick={()=>{\n        if(about){\n          setAboutButtonClass(\"\");\n          setAbout(false);\n        }\n        else{\n          setAboutButtonClass(\"-clicked\");\n          setAbout(true);\n        }\n      }}>\n      </div>  \n      <Routes>\n        <Route exact path=\"\" className=\"home-container\" element={about? <About/> :\n          <div className=\"home-container\">\n            <div className=\"logo-container\"></div>\n            <p className=\"rule\">Own the most boxes at the end of the game to win</p>\n            <div className=\"grid-buttons-container\">\n                <button className=\"grid-button\" id={chosenMode==1?\"four-button-chosen\":\"four-button\"} onClick={()=>{\n                  setGridSize(4);\n                  setChosenMode(1);\n                  }}>\n                    4X4\n                </button>\n                <button className=\"grid-button\" id={chosenMode==2?\"eight-button-chosen\":\"eight-button\"} onClick={()=>{\n                  setGridSize(8);\n                  setChosenMode(2);\n                  }}>\n                    8X8\n                </button>\n            </div>\n            <p className=\"select-mode-statement\">\n              Select a mode to start a {gridSize==4?\"4X4\":\"8X8\"} game\n            </p>\n            <div className=\"mode-buttons-container\">\n              <Link to={\"/room\"} style={{textDecoration: \"none\"}}>\n                <button \n                  className=\"mode-button\" \n                  id=\"custom-room-button\">\n                    Room\n                </button>\n              </Link>\n              <Link to={\"/offline\"} style={{textDecoration: \"none\"}}>\n                <button\n                  className=\"mode-button\"\n                  id=\"vs-comp-button\" \n                  onClick={()=>{setVsComp(true)}}> \n                    Offline\n                </button>\n              </Link>\n            </div>\n          </div>\n        }/>   \n        <Route exact path={\"/offline\"} element={<Game gridSize={gridSize} vsComp={vsComp} setVsComp={setVsComp}/>}/>\n        <Route exact path={\"/room/*\"} element={<Room gridSize={gridSize}/>}/>\n      </Routes>\n    </>\n  )\n}\n\nexport default App;\n\n\n\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/reportWebVitals.js",[],[],"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Room.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],[],"import React, {useEffect, useState, useRef} from 'react';\nimport \"./style.css\"\nimport {io} from \"socket.io-client\"\nimport Game from \"./Game\"\nimport Header from './Components/Header';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {Route, Link, Routes, Navigate, useNavigate} from \"react-router-dom\";\nimport useScreenType from 'react-screentype-hook';\n\nconst socket = io('https://baksa19.herokuapp.com/', { transports : ['websocket'] });\n// const socket = io('http://localhost:4000');\n\nexport default function (props) {\n    const [roomId, setRoomId] = useState(\"\");\n    const [shared, setShared] = useState(false);\n    const [joined, setJoined] = useState(false)\n    const [roomFull, setRoomFull] = useState(false);\n    const [playerRole, setPlayerRole] = useState(); // playerRole=1 if he created the room, else 2 if he joined one\n    const [roomCode, setRoomCode] = useState();\n    const [roomDoesNotExist, setRoomDoesNotExist] = useState(false);\n    const [hostGridSize, setHostGridSize] = useState(\"\");\n    const history = useNavigate();\n    const [urlRoomId, setUrlRoomId] = useState(\"\");\n    const screenType = useScreenType();\n    // var urlRoomId;\n\n    socket.on(\"start-game\", (tempUrlRoomId)=>{\n        if(playerRole==2){\n            if(roomId[6]=='8'){\n                setHostGridSize(8);\n            }\n            else{\n                setHostGridSize(4);\n            }\n        }\n        if(playerRole==1)toast.dismiss(roomCopiedToastId.current);\n        setJoined(true);\n        setUrlRoomId(tempUrlRoomId);\n    })\n    socket.off(\"room-full\").on(\"room-full\", ()=>{\n        toast(\"Room is full\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });\n        console.log(\"room is full\")\n    })\n    socket.off('room-does-not-exist').on(\"room-does-not-exist\", ()=>{\n        setRoomDoesNotExist(true);\n    })\n\n    useEffect(()=>{ \n        if(roomDoesNotExist){\n            console.log(\"here\");\n            toast(\"Room does not exist\", {\n                position: \"top-right\",\n                autoClose: 1000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: true,\n                progress: undefined,\n            });\n            console.log(\"Room does not exist\");\n            setRoomDoesNotExist(false);\n        }\n    }, [roomDoesNotExist])\n\n    const roomCopiedToastId = useRef(null);\n    function idCopied (){\n        if(roomCopiedToastId!=null){\n            toast.dismiss(roomCopiedToastId.current);\n        }\n        roomCopiedToastId.current = toast(\"Room ID copied to clipboard\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n            // transition: \"zoom\"\n        });  \n    } \n\n    const generateRandomString = (myLength) => {\n        const chars =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        const randomArray = Array.from(\n          { length: myLength },\n          (v, k) => chars[Math.floor(Math.random() * chars.length)]\n        );\n      \n        const randomString = randomArray.join(\"\");\n        return randomString;\n      };\n\n    useEffect(()=>{\n        if(urlRoomId!=\"\"){\n            history(\"/room/\"+urlRoomId);\n        }\n    }, [urlRoomId])\n\n    useEffect(()=>{\n        var curUrl = JSON.stringify(window.location.href)\n        console.log(performance.getEntriesByType(\"navigation\")[0].type, curUrl.substring(curUrl.length-6, curUrl.length-1));\n        if(curUrl.substring(curUrl.length-6, curUrl.length-1)!=\"room/\" && curUrl.substring(curUrl.length-5, curUrl.length-1)!=\"room\"){\n            history(\"/\");\n        }\n    }, [])\n\n    return (\n        <>\n            <Routes>\n                <Route path = \"/\" element = {\n                    <div>\n                        {screenType.isMobile && \n                            <div className=\"dont-leave-page-container\">\n                                <div className=\"dont-leave-page-text\">\n                                    Don't leave this page or switch the app\n                                </div>\n                            </div>\n                        }\n                        <Header gridSize={props.gridSize}/>\n                        {!shared?\n                        <div className=\"rooms-main-container\">\n                            {/* <Link to={\"/\"+roomCode} style={{textDecoration: \"none\"}}> */}\n                                <div className=\"create-room-container\">\n                                    <button \n                                        className=\"create-room\" \n                                        onClick={()=>{\n                                            setHostGridSize(props.gridSize);\n                                            idCopied();\n                                            setShared(true);\n                                            if(props.gridSize==8){\n                                                var tempRoomCode = generateRandomString(6)+\"8\";\n                                            }\n                                            else{\n                                                var tempRoomCode = generateRandomString(6);\n                                            }\n                                            setRoomCode(tempRoomCode);\n                                            socket.emit(\"room-created\", tempRoomCode);\n                                            setPlayerRole(1)\n                                            navigator.clipboard.writeText(tempRoomCode)\n                                            }\n                                        }>    \n                                    </button>\n                                </div>\n                            {/* </Link> */}\n                            {/* <Link to={\"/\"+roomId} style={{textDecoration: \"none\"}}> */}\n                                <div className=\"join-room-container\">\n                                    <input \n                                        className=\"room-input\" \n                                        type=\"text\" \n                                        style={roomId!==\"\"?{marginRight: \"10px\"}:{marginRight:\"0px\"}}\n                                        onChange={(e)=>{\n                                            setRoomId(e.target.value);\n                                        }} \n                                        onKeyPress={(e)=>{\n                                            if(e.key===\"Enter\"){\n                                                setPlayerRole(2)\n                                                socket.emit(\"joined-room\", roomId);\n                                            }\n                                        }}\n                                    />\n                                    {roomId!==\"\"?\n                                        <button className=\"join-room\"   \n                                            onClick={()=>{\n                                                setPlayerRole(2);\n                                                socket.emit(\"joined-room\", roomId)\n                                            }}>\n                                        Join\n                                        </button>\n                                    :null\n                                    }\n                                </div>\n                            {/* </Link> */}\n                            {!roomFull?\n                                <p className=\"room-id-statement\">Share Room ID with a friend or enter a Room ID to start the game</p>\n                            :\n                                <p className=\"room-full-statement\">Room is already full</p>\n                            }\n                        </div>:\n                        <div className=\"rooms-main-container waiting-room-container\">\n                            <div className=\"waiting-icon-container\">\n                            </div>\n                            <div className=\"room-id-container\" onClick={()=>{\n                                idCopied();\n                                navigator.clipboard.writeText(roomCode);\n                                }\n                            }>\n                                <span>{roomCode}</span>\n                            </div>\n                            <p className=\"room-id-statement\">Waiting for the other player to join the room</p>\n                        </div>}\n                        <ToastContainer/>\n                    </div>\n                    }\n                />\n                {/* {console.log(\"roomCode: \"+urlRoomId)} */}\n                <Route path = {\"/\"+urlRoomId} element = {<Game gridSize={hostGridSize} roomId={playerRole==1?roomCode:roomId} socketId={socket.id} playerRole={playerRole}/>} />\n            </Routes>\n        </>\n  )\n}","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Game.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],[],"import logo from './logo.svg';\nimport './App.css';\nimport react, {useState, useEffect, useRef} from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport GameOver from './Components/GameOver';\nimport Header from './Components/Header';\nimport {io} from \"socket.io-client\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { css } from \"glamor\";\nimport Chat from './Components/Chat';\nimport {Route, Link, Routes, Navigate, useNavigate} from \"react-router-dom\";\nimport { useBeforeunload } from 'react-beforeunload';\nimport useScreenType from \"react-screentype-hook\";\n\nconst socket = io('https://baksa19.herokuapp.com/', { transports : ['websocket'] });\n// const socket = io('http://localhost:4000');\n\nexport default function Game(props) {\n  var i, j;\n  var tempBoxCount = 0;\n  var compTempPos;\n  var compBoxFlag = false;\n  var comp2line = false;\n  const [elMap, setMap] = useState(new Map());\n  const [boxMap, setBoxMap] = useState(new Map());\n  \n  const [mapFlag, setMapFlag] = useState(true); //used to make sure the map is initialised only once\n  const [boxFlag, setBoxFlag] = useState(true); //used to make sure the box map is initialised only once\n  \n  var red=\"#c5183b\";\n  var blue=\"#3b919b\";\n  const assignedColor = props.playerRole==1?red:blue;\n\n  const [turn, setTurn] = useState(red);\n  const [redScore, setRedScore] = useState(0);\n  const [blueScore, setBlueScore] = useState(0);\n\n  const [gameOver, setGameOver] = useState(false);\n  var position;\n  const [tempId, setTempId] = useState(\"\");\n  const [tempColor, setTempColor] = useState(\"\");\n\n  const [finalRoomId, setFinalRoomId] = useState(\"\");\n  \n  const [messageArr, setMessageArr] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [lastSeen, setLastSeen] = useState(0);\n\n  const chatRef = useRef();\n  const gridRef = useRef();\n  const chatButtonRef = useRef();\n  const yourTurnRef = useRef();\n\n  const [gameLeaveWinner, setGameLeaveWinner] = useState(\"none\");\n  const [playerLeft, setPlayerLeft] = useState(false);\n  const [playerOnMobile, setPlayerOnMobile] = useState();\n  const [opponentOnMobile, setOpponentOnMobile] = useState();\n  const [ locationKeys, setLocationKeys ] = useState([])\n  const screenType = useScreenType();\n  const history = useNavigate()\n  var localTurn;\n\n  const [movesArr, setMovesArr] = useState([]);\n  const [showLastMove, setShowLastMove] = useState(false);\n\n  var t; // variable for temporarily handling id\n  var tempTurn; // variable for temporarily handling turn\n  var tempBoxColor=\"\";\n  // var tempTimeoutId;\n\n  useEffect(()=>{\n    var curUrl = JSON.stringify(window.location.href);\n    if(curUrl.substring(curUrl.length-8, curUrl.length-1)==\"offline\"){\n      props.setVsComp(true);\n    }\n  }, [])\n\n  useEffect(()=>{\n    console.log(props.socketId)\n    var tempRoomId = props.roomId+\"1\";\n    socket.emit(\"rejoin\", {roomId: tempRoomId});\n  }, [])\n\n  useEffect(()=>{\n    socket.on(\"final-room\", ({roomId})=>{\n      setFinalRoomId(roomId);\n    })\n  }, [socket]);\n\n  function updateMapWithServer(){\n    // console.log(\"received\");\n    // socket.emit(\"test\", {roomId: finalRoomId, socketId: props.socketId});\n    socket.emit(\"update\", {turn: tempTurn, roomId: finalRoomId, socketId: props.socketId, position: position, tempId: t, tempBoxColor: tempBoxColor});\n  }\n  \n  useEffect(()=>{\n    // console.log(socket);\n    socket.on(\"updated\", (data)=>{\n      position = data.position;\n      tempBoxColor = data.tempBoxColor;\n\n      var tempMovesArr = [...movesArr];\n      tempMovesArr.push(data.tempId);\n      setMovesArr(tempMovesArr);\n\n      updateLocalVariablesWithServerValues(data.tempId, data.turn);\n      elementCheckUtilityFunction(position, data.tempId);\n    });\n  }, [socket]);\n\n  function updateLocalVariablesWithServerValues(tempId, tempColor){\n    setTempId(tempId);\n    setTempColor(tempColor);\n    localTurn = tempColor;\n  }\n\n  (function initMap(){\n    if(mapFlag){\n      var tempSize = props.gridSize==4?65:225;\n      for(i=0; i<tempSize; ++i){\n      // for(i=0; i<props.gridSize==4?65:225; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n      setMapFlag(false);\n    }\n  })();\n\n  (function initBoxMap(){\n    if(boxFlag){\n      for(i=1; i<=props.gridSize; ++i){\n      // for(i=1; i<=4; ++i){\n        for(j=1; j<=props.gridSize; ++j)\n        // for(j=1; j<=4; ++j)\n          boxMap.set(\"b-\"+i+\"-\"+j, \"transparent\");\n      }\n      setBoxFlag(false);\n    }\n  })();\n\n  function updateMap(position){\n    if(elMap.get(position)!==\"clicked\"){\n      setMap(elMap.set(position, \"clicked\"));\n      // console.log(elMap);\n    }\n  }\n\n  function elementCheckUtilityFunction(position, id){\n    // console.log(\"here\");\n    updateMap(position);\n    setTurnFunc();\n    if(id.charAt(0) == \"h\"){\n      checkVerticalBoxes(id);\n    }\n    else{\n      checkHorizontalBoxes(id);\n    }\n  }\n\n  function elementCheck(id){\n    // console.log(tempTimeoutId)\n    // if(yourTurnRef.current.style.display===\"flex\"){\n    //   yourTurnRef.current.style.display = \"none\"\n    // }\n    // if(tempTimeoutId){\n    //   clearTimeout(tempTimeoutId);\n    // }\n    if(props.vsComp){\n      var tempMovesArr = [...movesArr];\n      tempMovesArr.push(id);\n      setMovesArr(tempMovesArr);\n    }\n    // console.log(elMap);\n    t=id;\n    tempBoxColor=\"\"\n    position = calcPosition(id);\n    // console.log(position);\n    elementCheckUtilityFunction(position, id);\n    tempTurn = turn;\n    if(!props.vsComp)\n      updateMapWithServer();\n  }\n  \n  function calcPosition(id){\n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    position = part1 + part2;\n    // console.log(position);\n    return position;\n  }\n\n  function setTurnFunc(){\n    setTurn(turn=>turn===red?blue:red);\n    // console.log(\"In the setTurn function: \"+turn);\n  }\n\n  function stayTurn(boxColor){\n    setTurn(boxColor);\n  }\n\n  function checkVerticalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n-1)+\"-\"+m;\n    id2=\"h-\"+(n+1)+\"-\"+m;\n    id3=\"v-\"+(n-1)+\"-\"+m;\n    id4=\"v-\"+(n-1)+\"-\"+(m+1);\n    id5=\"v-\"+(n)+\"-\"+m;\n    id6=\"v-\"+(n)+\"-\"+(m+1);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n    \n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        // console.log(\"upper and lower boxes filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n        // console.log(\"upper box filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        // console.log(\"lower box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n  \n  function checkHorizontalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n)+\"-\"+(m-1);\n    id2=\"v-\"+(n)+\"-\"+(m-1);\n    id3=\"h-\"+(n+1)+\"-\"+(m-1);\n    id4=\"h-\"+(n)+\"-\"+(m);\n    id5=\"v-\"+(n)+\"-\"+(m+1);\n    id6=\"h-\"+(n+1)+\"-\"+(m);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n\n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      // console.log(\"left and right boxes filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n      // console.log(\"left box filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateTotal();\n    }\n    else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      // console.log(\"right box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n\n  function updateScore(tempBoxId){\n    if(boxMap.get(tempBoxId)==red){\n      setRedScore(redScore=>redScore+1);\n    }\n    else if(boxMap.get(tempBoxId)==blue){\n      setBlueScore(blueScore=>blueScore+1);\n    }\n  }\n\n  function updateTotal(){\n    tempBoxCount=0;\n    for (const [key, value] of boxMap.entries()) {\n      if(value!=\"transparent\"){\n        // console.log(key+\": \"+value);\n        tempBoxCount++;\n      }\n    }\n    // console.log(\"tempBoxCount: \"+tempBoxCount);\n    if(props.gridSize == 4){\n      if(tempBoxCount == 16){\n        setGameOver(true);\n        // history(\"/gameover\")\n        // props.setTempGameOverVariable(true);\n      }\n    }\n    else if(props.gridSize == 8){\n      if(tempBoxCount == 64){\n        setGameOver(true);\n        // history(\"/gameover\")\n        // props.setTempGameOverVariable(true);\n      }\n    }    \n    // console.log(\"totalScore: \"+(redScore+blueScore));\n    // if(props.gridSize == 4 && redScore+blueScore == 15){\n    //   setGameOver(true);\n    // }\n    // else if(props.gridSize == 8 && redScore+blueScore == 63){\n    //   setGameOver(true);\n    // }\n  }\n  \n  // function compCheckVerticalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n    \n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheckHorizontalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheck1lineHorizontal(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compCheck1lineVertical(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos2)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compFunc(elRef){\n  //   console.log(\"computer's turn\");\n  //   console.log(elMap);\n  //   compBoxFlag = false;\n  //   var comp1line = false;\n  //   var comp0line = false;\n\n  //   if(compBoxFlag == false){\n  //     // check box completion\n  //     console.log(\"check box completion\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(compBoxFlag == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             compCheckVerticalBoxes(compTempId1, elRef);\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             compCheckHorizontalBoxes(compTempId2, elRef);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if(compBoxFlag == false && comp1line == false && comp0line == false){\n  //     // check 0 line clicked\n  //     console.log(\"check 0 line clicked\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(comp0line == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId1);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId2);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //         }  \n  //       }\n  //     }\n  //   }\n  // }\n  \n  const playerColorToastId = useRef(null);\n  useEffect(() => {\n    var curUrl = JSON.stringify(window.location.href);\n    var tempVsComp;\n    if(curUrl.substring(curUrl.length-8, curUrl.length-1)==\"offline\"){\n      tempVsComp = true;\n    }\n    if(!tempVsComp && gridRef.current.className === \"show-grid\"){\n      var playerColor = assignedColor==\"#c5183b\"?\"Red\":\"Blue\";\n      playerColorToastId.current = toast(\"You are \"+playerColor, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });  \n    }\n  }, []);\n\n  function notTurnFunc(){\n    toast(\"It's not your turn\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined,\n    }); \n  }\n\n  // const yourTurnToastId = useRef(null);\n  // useEffect(()=>{\n  //   setTimeout(()=>{\n  //     console.log(gridRef.current.className)\n  //     if(assignedColor == turn && !props.vsComp && gridRef.current.className === \"show-grid\"){\n  //       if(yourTurnToastId.current!=null){\n  //         toast.dismiss(yourTurnToastId.current)\n  //       }\n  //       setTimeout(()=>{\n  //         yourTurnToastId.current = toast(\"It's your turn\", {\n  //           position: \"top-right\",\n  //           autoClose: 5000,\n  //           hideProgressBar: true,\n  //           closeOnClick: true,\n  //           pauseOnHover: false,\n  //           draggable: true,\n  //           progress: undefined,\n  //         }); \n  //       }, 5000)\n  //     }\n  //   } , 1000)\n  // }, [turn])\n\n  function sendMessage(tempMessage, playerRole){\n    if(tempMessage==\"\"){\n        return;\n    }\n    socket.emit(\"send-message\", {roomId: finalRoomId, tempMessage: tempMessage, playerRole: playerRole});\n  }\n\n  socket.off(\"receive-message\");\n  socket.on(\"receive-message\", (tempMessage, playerRole)=>{\n      // console.log(\"message received\");\n\n      const tempMessageArr = [...messageArr];\n      tempMessageArr.push({sender: playerRole, message: tempMessage});\n      // console.log(tempMessageArr);\n      setMessageArr(tempMessageArr);\n    })\n\n    useEffect(()=>{\n      if(showChat){\n        setLastSeen(messageArr.length);\n        setUnreadCount(0);\n      }\n      var tempUnreadCount = messageArr.length-lastSeen;\n      setUnreadCount(tempUnreadCount);\n    }, [showChat])\n\n    useEffect(()=>{\n      if(showChat){\n        setUnreadCount(0);\n        setLastSeen(messageArr.length);\n      }\n      else{\n        var tempUnreadCount = messageArr.length-lastSeen;\n        setUnreadCount(tempUnreadCount);\n      }\n    }, [messageArr.length])\n\n    useEffect(() => {\n      if(showChat){\n        function handleClickOutside(event) {\n          if (chatRef.current && !chatRef.current.contains(event.target) && gridRef.current && !gridRef.current.contains(event.target) && chatButtonRef.current && !chatButtonRef.current.contains(event.target)) {\n            setShowChat(false);\n          }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }\n    }, [showChat]);\n\n    // socket.off(\"game-left\");\n    useEffect(()=>{\n      // console.log(gridRef.current.className);\n      if(!props.vsComp && gridRef.current.className === \"show-grid\"){\n        socket.on(\"game-left\", ({winner})=>{\n          console.log(\"The other player left the game\");\n          setPlayerLeft(true);\n          setGameOver(true);\n          setGameLeaveWinner(winner);\n        })\n      }\n    }, [socket])\n\n    // useEffect(()=>{\n      // console.log(\"playerLeft: \"+playerLeft);\n      // if(playerLeft){\n      //   clearInterval(intervalId);\n      // }\n    // }, [playerLeft])\n\n    useEffect(()=>{\n      if(!props.vsComp && !playerLeft && gridRef.current.className===\"show-grid\"){\n        var tempRoomId = finalRoomId;\n        if(!playerLeft){\n          const tempId = setInterval(() => {\n            // console.log(gridRef.current.className)\n            if(gridRef.current.className === \"show-grid\"){\n              socket.emit(\"game-leave-check\", ({playerRole: props.playerRole, roomId: tempRoomId}))\n            }\n          }, 10000);\n        }\n      }\n    }, [finalRoomId, playerLeft])\n\n    window.addEventListener('popstate', (event) => {\n      if (event.state) {\n        window.location.reload();\n      }\n     }, false)\n\n    useEffect(()=>{\n      window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n      window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n    }, []);\n\n    useEffect(()=>{\n      if(showLastMove){\n        setTimeout(()=>{\n          setShowLastMove(false);\n        })\n      }\n    }, [showLastMove])\n\n    // useEffect(()=>{\n    //   if(gridRef.current.className===\"show-grid\" && assignedColor===turn && !props.vsComp){\n    //     tempTimeoutId = setTimeout(()=>{\n    //       yourTurnRef.current.style.display = \"flex\";\n\n    //       console.log(yourTurnRef.current.style.display)\n    //     }, 5000)\n    //   }\n    // }, [turn])\n\n  return (\n    <>\n      {/* <div className=\"dont-leave-page-container\" ref={yourTurnRef} style={{display: \"none\"}}>\n          <div className=\"dont-leave-page-text\">\n              It's your turn \n          </div>\n      </div> */}\n      <Header gridSize={props.gridSize} gameOver={gameOver} fromMidGame={true} vsComp={props.vsComp}/>\n      {!gameOver?  \n        <div className=\"last-move-button\" onClick={()=>{\n          setShowLastMove(true);\n        }}>\n        </div>\n        :null\n      }\n      <div className=\"center-container\">\n        <div className={!gameOver?\"show-grid\":\"hide-grid\"} ref={gridRef}>\n          <Grid \n            gridSize={props.gridSize}\n            func={elementCheck}  \n            turn={turn} \n            map={elMap} \n            boxMap={boxMap} \n            vsComp={props.vsComp} \n            tempColor={tempColor}\n            tempId={tempId}\n            assignedColor={assignedColor}\n            notTurnFunc = {notTurnFunc}\n            showLastMove = {showLastMove}\n            setShowLastMove = {setShowLastMove}\n            movesArr = {movesArr}\n          />\n        </div>\n\n        <div className={!gameOver?\"hide-game-over\":\"show-game-over\"}>\n          <GameOver gameLeaveWinner={gameLeaveWinner} redScore={redScore} blueScore={blueScore} gridSize={props.gridSize} boxMap={boxMap} vsComp={props.vsComp} gameOver={gameOver}/>\n        </div>\n        {/* {console.log(turn)} */}\n        <div className={!gameOver?\"score-container\":\"hide-score-container\"}>\n          <h2 className=\"score\" id={turn==red?\"turn-score-red\":\"score-red\"}>Red: {redScore}</h2>\n          <h2 className=\"score\" id={turn==blue?\"turn-score-blue\":\"score-blue\"}>Blue: {blueScore}</h2>\n        </div>\n        {assignedColor==turn&& !gameOver? \n          <div className={assignedColor==\"#c5183b\"?\"yourTurnText-red\":\"yourTurnText-blue\"}>\n            <div className=\"baksa-image-container\">\n            </div>\n            It's your turn\n          </div>\n          :null\n        }\n      </div>\n    {!props.vsComp&&<div className={assignedColor==red?\"chat-button-container-red\":\"chat-button-container-blue\"}>\n      <div ref={chatButtonRef} className=\"chat-button\" onClick={()=>{\n        setShowChat(!showChat);\n      }\n      }>\n        <div className=\"unread-count-container\" style={{visibility: unreadCount==0?\"hidden\":\"visible\"}}>\n          {unreadCount}\n        </div>\n      </div>\n    </div>}\n    {!props.vsComp&&\n      <div ref={chatRef}>\n        <Chat sendMessage={sendMessage} messageArr={messageArr} chatColor={assignedColor} roomId={finalRoomId} playerRole={props.playerRole} showChat={showChat}/>\n      </div>\n    }\n    <ToastContainer />\n    </>\n  );\n}","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Header.js",["180","181","182","183","184"],[],"import React, {useEffect} from 'react'\nimport \"../style.css\";\nimport {Route, Link, Routes, useNavigate} from \"react-router-dom\";\n\nexport default function Header(props) {\n  const history = useNavigate();\n\n  return (\n    <Link to=\"/\" style={{textDecoration: \"none\"}}>\n        <div \n          className=\"header-container\" \n          id={props.gridSize==4?\"header-container-four\":\"header-container-eight\"}\n          onClick={()=>{\n            if(!props.gameOver && props.fromMidGame && !props.vsComp){\n              window.location.reload();\n            }\n            // else{\n            //   console.log(\"clicked home\")\n            //   history.goBack;\n            // }\n          }}\n        >\n        </div>\n    </Link>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/About.js",["185","186"],[],"import react, {useState} from 'react';\nimport \"../../src/style.css\";\n\nexport default function About() {\n  return (\n    <div className=\"about-container\">\n          <p className=\"about-text\">\n            Miss playing the classic dots and boxes game with your friends?\n            <br/>\n            <div className=\"about-container-baksa-title\">baksa</div>\n            brings all that fun online.\n          </p>\n        <div className=\"horizontal-rule\"></div>\n          <p className=\"rule-text\">\n            <p className=\"rule-heading\">📌 RULES</p>\n            <br/>\n            Join two horizontally or vertically adjacent dots by a line, and connect the last side of the square to score a point.\n          </p>\n        <div className=\"horizontal-rule\"></div>\n          <p className=\"credits-text\">\n            Created by <span className=\"priyanshu-modi-text\">Priyanshu Modi</span>\n          </p>\n        <div className=\"avatar-container\">\n        </div>\n    </div>\n  )\n}\n\n// onClick={window.open(\"https://priyanshumodi.live\", '_blank', 'noopener,noreferrer')}","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Grid.js",["187","188","189","190"],[],"import React from 'react'\nimport Dot from \"./Dot\"\nimport Container from \"./Container\"\nimport \"../style.css\";\n\nexport default function Grid(props) {\n    var containers = []\n    let i;\n    var numContainers = props.gridSize==4?9:17;\n    (function createContainer(){\n        for(i=0; i<numContainers; ++i){\n            containers.push(<Container \n                                    key={i} \n                                    row={i}\n                                    containerName={i%2==0?\"horizontal-bar-container\":\"vertical-bar-container\"}\n                                    containerId={i%2==0?\"horizontal-bar-container-\"+Math.ceil(i/2):\"vertical-bar-container-\"+Math.ceil(i/2)}\n                                    func={props.func}\n                                    turn={props.turn}\n                                    map={props.map}\n                                    boxMap={props.boxMap}\n                                    gridSize={props.gridSize}\n                                    vsComp={props.vsComp}\n                                    compFunc={props.compFunc}\n                                    tempColor={props.tempColor}\n                                    tempId={props.tempId}\n                                    assignedColor={props.assignedColor}\n                                    notTurnFunc = {props.notTurnFunc}\n                                    showLastMove = {props.showLastMove}\n                                    setShowLastMove = {props.setShowLastMove}\n                                    movesArr = {props.movesArr}\n                            />)\n        }\n    })()\n    return (\n        <>\n            <div className=\"containers\">{containers}</div>\n        </>\n    )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/GameOver.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218"],[],"import React, {useState, useEffect} from 'react'\nimport \"../style.css\"\nimport {Route, Link, Routes, useNavigate} from \"react-router-dom\";\nimport Game from \"../Game.js\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Confetti from 'react-confetti'\n\nexport default function GameOver(props) {\n    var result;\n    const [gridSize, setGridSize] = useState(4);\n    const [hideWinner, setHideWinner] = useState(\"flex\");\n    const [showShare, setShowShare] = useState(\"none\");\n    const [showConfetti, setShowConfetti] = useState(true);\n    const [recycleConfetti, setRecycleConfetti] = useState(true);\n    const history = useNavigate();\n\n    const generateRandomString = (myLength) => {\n        const chars =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        const randomArray = Array.from(\n          { length: myLength },\n          (v, k) => chars[Math.floor(Math.random() * chars.length)]\n        );\n      \n        const randomString = randomArray.join(\"\");\n        return randomString;\n    };\n    \n    const newRoomId = generateRandomString(6);\n\n    (function calcResult(){\n        if(props.gameLeaveWinner==\"none\"){\n            if(props.redScore>props.blueScore){\n                result = \"red\";\n            }\n            else if(props.redScore<props.blueScore){\n                result = \"blue\";\n            }\n            else{\n                result = \"draw\";\n            }\n        }\n        else{\n            result = props.gameLeaveWinner\n        }\n    })();\n    \n    function createEmoji(){\n        var i=0;\n        if(result == \"draw\"){\n            var message = \"It's a draw\\n\\n\";\n        }\n        else if(result==\"red\"){\n            message = \"👑 Red\\n\\n\";\n        }\n        else{\n            message = \"👑 Blue\\n\\n\";\n        }\n        for (const [key, value] of props.boxMap.entries()) {\n            if(props.gridSize==4){\n                if(i==4){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            else{\n                if(i==8){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            if(value==\"#c5183b\"){\n                message+=\"🟥\";\n            }\n            else if(value==\"#3b919b\"){\n                message+=\"🟦\";\n            }\n            else{\n                message+=\"⬜️\";\n            }\n            i++;\n        }   \n        console.log(message);\n        navigator.clipboard.writeText(message);\n    }\n\n    function resultCopied (){\n        toast(\"Result copied to clipboard\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });  \n    } \n\n    // useEffect(()=>{\n    //     if(props.gameOver){\n    //         console.log(\"here\");\n    //         setTimeout(()=>{\n    //             setShowConfetti(true);\n    //         }\n    //         ,2000);\n    //         setTimeout(()=>{\n    //             setRecycleConfetti(false);\n    //         }\n    //         ,5000);\n    //     }\n    // }, [props.gameOver])\n\n    return (\n    <>\n        {/* {showConfetti && \n            <Confetti \n                colors = {result==\"blue\"?[\"#3b919b\"]:[\"#c5183b\"]}\n                numberOfPieces = {80}\n                recycle = {recycleConfetti}\n            />\n        }  */}\n        <div className=\"logo-container\"></div>\n        {props.gameLeaveWinner!=\"none\"?\n            <div className=\"game-leave-message\">\n                The other player left the room.\n            </div>\n            :\n            null\n        }\n        <div className=\"winner-outer-container\">\n            <div \n                className=\"winner-container\" \n                id={result+\"-winner-container\"} \n                // onMouseEnter={()=>{setHideWinner(\"none\"); setShowShare(\"flex\")}} \n                // onMouseLeave={()=>{setHideWinner(\"flex\"); setShowShare(\"none\")}}\n                onClick={()=>{\n                    resultCopied();\n                    createEmoji();\n                }}\n                data-hover={\"share\"}\n            >\n                <div \n                    className=\"winner-text-container\" \n                    style={{display: hideWinner}}\n                >\n                        <h2 \n                            className=\"winner-text\">\n                                {result==\"draw\"?\"Draw\":result+\" wins\"}\n                                <div className = \"share-image-container\"/>\n                        </h2>\n                </div>\n            </div>\n        </div>\n        <ToastContainer/>\n        {/* <Link to={\"/game\"}> */}\n            <button \n                className=\"grid-button\" \n                id={props.gridSize==4?\"four-button\":\"eight-button\"} \n                onClick={()=>{history(\"/\")}}\n                >\n                Go Again\n            </button>\n        {/* </Link> */}\n        {/* {console.log(props.gridSize, props.vsComp)} */}\n        {/* <Routes>\n            <Route exact path={\"/game\"} element={<Game gridSize={props.gridSize} vsComp={props.vsComp}/>}/>\n        </Routes> */}\n    </>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Chat.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],[],"import React, {useState, useEffect, useRef} from 'react'\nimport \"../style.css\";\nimport {io} from \"socket.io-client\";\nimport {useSpring, animated} from \"react-spring\";\n\nconst socket = io('https://baksa19.herokuapp.com/', { transports : ['websocket'] });\n// const socket = io('http://localhost:4000');\n\nexport default function Chat(props) {\n    const [message, setMessage]= useState(\"\");\n    var bgColor = props.chatColor==\"#c5183b\"?\"rgba(195, 24, 58, 0.5)\":\"rgba(59, 146, 155, 0.5)\";\n    var chatColor = props.chatColor==\"#c5183b\"?\"#c5183b\":\"#3b919b\";\n    const anchorDiv = useRef();\n    const inputRef = useRef();\n    const styleProps = useSpring({\n        visibility: props.showChat===true?\"visible\":\"hidden\",\n        height: props.showChat===true?\"65%\":\"0\",\n        width: window.innerWidth>768?(props.showChat===true?\"22%\":\"0\"):(props.showChat===true?\"90%\":\"0\"),\n        opacity: props.showChat===true?1:0,\n        config: {\n            duration:150,\n        }\n    })\n    useEffect(()=>{\n        anchorDiv.current.scrollIntoView({behaviour: 'smooth'});\n    }, [props.messageArr])\n\n    return (\n    <>\n        <animated.div className={\"chat-outer-container\"} style={styleProps}>\n            <div className=\"chat-role-container\" style={{backgroundColor: props.chatColor}}>\n                Chat as {chatColor==\"#c5183b\"?\"Red\":\"Blue\"}\n            </div>\n            <div className=\"chat-main-container\" >\n                {props.messageArr.map((msg, index)=>{\n                    return(\n                        <div \n                            className=\"chat-message-container\" \n                            key={index}\n                        >\n                                <p \n                                    className=\"chat-message-text\"\n                                    style={{color: msg.sender==1?\"#c5183b\":\"#3b919b\"}}\n                                >\n                                        {msg.message}\n                                </p>\n                        </div>\n                    )\n                })}\n                <div ref={anchorDiv}></div>\n            </div>\n            <div className=\"chat-bottom-container\">\n                <div className=\"pretyped-messages-container\">\n                    <div className=\"pretyped-message\" id=\"emoji-1\" \n                        onClick={()=>{\n                            props.sendMessage(props.playerRole==1?\"Red: 😂\":\"Blue: 😂\", props.playerRole);\n                        }}\n                    >\n                        <span role=\"img\" aria-label=\"emoji\">😂</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"emoji-2\"\n                        onClick={()=>{\n                            props.sendMessage(props.playerRole==1?\"Red: ❤️\":\"Blue: ❤️\", props.playerRole);\n                        }}\n                    >\n                        <span role=\"img\" aria-label=\"emoji\">❤️</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"emoji-3\"\n                        onClick={()=>{\n                            props.sendMessage(props.playerRole==1?\"Red: 😎\":\"Blue: 😎\", props.playerRole);\n                        }}\n                    >\n                        <span role=\"img\" aria-label=\"emoji\">😎</span>\n                    </div>    \n                    <div className=\"pretyped-message\" id=\"pretyped-message-1\"\n                        onClick={()=>{\n                            props.sendMessage(\"Hello\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Hello</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-2\"\n                        onClick={()=>{\n                            props.sendMessage(\"GG\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">GG</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-3\"\n                        onClick={()=>{\n                            props.sendMessage(\"LOL\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">LOL</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-4\"\n                        onClick={()=>{\n                            props.sendMessage(\"Thanks\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Thanks</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-5\"\n                        onClick={()=>{\n                            props.sendMessage(\"Another Round?\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Another Round?</span>\n                    </div>\n                    <div className=\"pretyped-message\" id=\"pretyped-message-6\"\n                        onClick={()=>{\n                            props.sendMessage(\"Okay\", props.playerRole);\n                        }\n                    }>\n                        <span role=\"text\" aria-label=\"text\">Okay</span>\n                    </div>\n                </div>\n                <div className=\"chat-input-container\">\n                    <input \n                        type=\"text\" \n                        className=\"chat-input\"\n                        placeholder=\"Type a message...\"\n                        values={message}\n                        ref={inputRef}\n                        onKeyPress={(e)=>{\n                            if(e.key===\"Enter\"){\n                                props.sendMessage(e.target.value, props.playerRole);\n                                e.target.value=\"\";\n                            }\n                        }}\n                        onChange={(e)=>{\n                            setMessage(e.target.value);\n                        }}\n                        autoFocus\n                    />\n                    <button\n                        className=\"chat-send-button\"\n                        onClick={()=>{\n                            if(inputRef.current.value!=\"\"){\n                                props.sendMessage(message, props.playerRole);\n                            }\n                            setMessage(\"\");\n                            inputRef.current.value=\"\";\n                        }\n                        }\n                    >\n                        Send\n                    </button>\n                </div>\n            </div>\n        </animated.div>\n    </>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Dot.js",["235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],[],"import React, {useState, useRef} from 'react'\nimport ReactDOM from 'react-dom';\nimport \"../style.css\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport { useEffect } from 'react';\n\nexport default function Dot(props) {\n  var canInteract = \"i\";\n  var compFlag = false;\n  var elRef = useRef(null);\n  const [turn, setTurn] = useState();\n\n  (()=>{\n    if(!props.vsComp){\n      if(props.assignedColor==props.turn){\n        canInteract = \"i\";\n      }\n      else{\n        canInteract = \"ui\";\n      }\n    }\n  })();\n\n  function tempPos(id){    \n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    return position = part1 + part2;\n  }\n\n  (()=>{\n    //if props.tempId is equal to props.elementId, then set backgroundColor of elRef to props.tempColor\n    if(!props.vsComp){\n      if(props.tempId == props.elementId){\n        elRef.current.style.backgroundColor = props.tempColor;\n        // elRef.current.style.backgroundColor = \"#ffac00\";\n      }\n    }\n  })();\n\n  useEffect(()=>{\n    if(props.showLastMove){\n      if(props.elementId==props.movesArr[props.movesArr.length-1]){\n        // elRef.current.style.boxShadow = \"0px 0px 20px \"+elRef.current.style.backgroundColor\n        elRef.current.style.transition = \"all 0.3s ease\"\n        elRef.current.style.transform = \"scale(1.2)\"\n        // elRef.current.style.backgroundColor = \"#ffac00 !important\"\n        console.log(elRef.current)\n      }\n      setTimeout(()=>{\n        if(props.elementId==props.movesArr[props.movesArr.length-1]){\n          elRef.current.style.boxShadow = \"none\" \n          elRef.current.style.transform = \"scale(1)\"\n        }\n      }, 200)\n      setTimeout(()=>{\n        if(props.elementId==props.movesArr[props.movesArr.length-1]){\n          // elRef.current.style.boxShadow = \"0px 0px 20px \"+elRef.current.style.backgroundColor \n          elRef.current.style.transform = \"scale(1.2)\"\n        }\n      }, 400)\n      setTimeout(()=>{\n        if(props.elementId==props.movesArr[props.movesArr.length-1]){\n          elRef.current.style.boxShadow = \"none\" \n          elRef.current.style.transform = \"scale(1)\"\n        }\n      }, 600)\n      setTimeout(()=>{\n        if(props.elementId==props.movesArr[props.movesArr.length-1]){\n          // elRef.current.style.boxShadow = \"0px 0px 20px \"+elRef.current.style.backgroundColor \n          elRef.current.style.transform = \"scale(1.2)\"\n        }\n      }, 800)\n      setTimeout(()=>{\n        if(props.elementId==props.movesArr[props.movesArr.length-1]){\n          elRef.current.style.boxShadow = \"none\"\n          elRef.current.style.transform = \"scale(1)\" \n          props.setShowLastMove(false);\n          // console.log(elRef.current)\n        }\n      }, 1000)\n    }\n  }, [props.showLastMove])\n\n  useEffect(()=>{\n    setTurn(props.turn==\"#c5183b\"?\"red\":\"blue\");\n  }, [props.turn])\n\n  return(\n      <>\n        <div \n            ref = {elRef}\n            className={props.gridSize==4?(props.elementName+\"-\"+canInteract+\"-\"+turn):\"big-grid-\"+(props.elementName+\"-\"+canInteract+\"-\"+turn)}\n            id={props.elementId} \n            style={\n              props.elementId.charAt(0)===\"b\"?\n              {backgroundColor: props.boxMap.get(props.elementId), opacity: \"0.5\"}:\n                // props.showLastMove?props.elementId===props.movesArr[props.movesArr.length-1]?\n                // {backgroundColor: \"#ffac00\"}:\n                // null:\n              null\n            }\n            onClick={(e)=>{\n              if(!props.vsComp){\n                if(props.assignedColor==props.turn){\n                  if(e.target.id.charAt(0)!==\"d\" && e.target.id.charAt(0)!==\"b\"){\n                    // console.log(\"clicked\")\n                    var tempPosition = tempPos(e.target.id);\n                    if(props.map.get(tempPosition)==\"unclicked\"){\n                      e.target.style.backgroundColor = props.turn;\n                      props.func(e.target.id);\n                    }\n                  }\n                }\n                else{\n                  props.notTurnFunc();\n                }\n              }\n              else{\n                if(e.target.id.charAt(0)!==\"d\" && e.target.id.charAt(0)!==\"b\"){\n                  var tempPosition = tempPos(e.target.id);\n                  if(props.map.get(tempPosition)==\"unclicked\"){\n                    e.target.style.backgroundColor = props.turn;\n                    props.func(e.target.id);\n                  }\n                }\n              }\n            }}\n        ></div>\n      </>\n  )\n}\n","/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/Container.js",["257","258","259","260","261","262","263"],[],"import React, {useState} from 'react'\nimport Dot from \"./Dot\";\nimport \"../style.css\";\n\nexport default function Container(props) {\n    var grid = [];\n    var dotCount, horizontalCount, verticalCount;\n    var keyCountHorizontal = 0, keyCountVertical = 0, boxCount = 1;\n    let i;\n    let rowCount = Math.floor(props.row/2)+1;\n    var elPerRow = props.gridSize==4?9:17;\n    (function createBoard(){\n        if(props.row%2==0){\n            for(i=0; i<elPerRow; ++i){\n                dotCount = (keyCountHorizontal/2 + 1);\n                horizontalCount = Math.ceil((keyCountHorizontal+1)/2);\n                grid.push(<Dot \n                                key={keyCountHorizontal++} \n                                elementName={i%2==0?\"dot\":\"horizontal-bar\"}\n                                elementId={i%2==0?\"d-\"+rowCount+\"-\"+dotCount:\"h-\"+rowCount+\"-\"+horizontalCount}\n                                func={props.func}\n                                turn={props.turn}\n                                map={props.map}\n                                boxMap={props.boxMap}\n                                gridSize={props.gridSize}\n                                vsComp={props.vsComp}\n                                compFunc={props.compFunc}\n                                tempColor={props.tempColor}\n                                tempId={props.tempId}\n                                assignedColor={props.assignedColor}\n                                notTurnFunc = {props.notTurnFunc}\n                                showLastMove = {props.showLastMove}\n                                setShowLastMove = {props.setShowLastMove}\n                                movesArr = {props.movesArr}\n                            />)\n            }   \n        }\n        else{\n            for(i=0; i<elPerRow; ++i){\n                verticalCount = (keyCountVertical/2 + 1);\n                grid.push(<Dot\n                                key={keyCountVertical++}\n                                elementName={i%2==0?\"vertical-bar\":\"box\"}\n                                elementId={i%2==0?\"v-\"+rowCount+\"-\"+verticalCount:\"b-\"+rowCount+\"-\"+boxCount++}\n                                func={props.func}\n                                turn={props.turn}\n                                map={props.map}\n                                boxMap={props.boxMap}\n                                gridSize={props.gridSize}\n                                vsComp={props.vsComp}\n                                compFunc={props.compFunc}\n                                tempColor={props.tempColor}\n                                tempId={props.tempId}\n                                assignedColor={props.assignedColor}\n                                notTurnFunc = {props.notTurnFunc}\n                                showLastMove = {props.showLastMove}\n                                setShowLastMove = {props.setShowLastMove}\n                                movesArr = {props.movesArr}\n                            />)\n            }\n        }\n    })()\n    \n    return (\n        <>\n            <div className={props.containerName} id={props.containerId}>{grid}</div>\n        </>\n    )\n}",{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":13},{"ruleId":"268","severity":1,"message":"272","line":9,"column":8,"nodeType":"270","messageId":"271","endLine":9,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":37,"column":63,"nodeType":"275","messageId":"276","endLine":37,"endColumn":65},{"ruleId":"273","severity":1,"message":"274","line":43,"column":63,"nodeType":"275","messageId":"276","endLine":43,"endColumn":65},{"ruleId":"273","severity":1,"message":"274","line":51,"column":49,"nodeType":"275","messageId":"276","endLine":51,"endColumn":51},{"ruleId":"268","severity":1,"message":"277","line":8,"column":16,"nodeType":"270","messageId":"271","endLine":8,"endColumn":20},{"ruleId":"268","severity":1,"message":"278","line":8,"column":30,"nodeType":"270","messageId":"271","endLine":8,"endColumn":38},{"ruleId":"279","severity":1,"message":"280","line":14,"column":1,"nodeType":"281","endLine":210,"endColumn":2},{"ruleId":"268","severity":1,"message":"282","line":17,"column":12,"nodeType":"270","messageId":"271","endLine":17,"endColumn":18},{"ruleId":"268","severity":1,"message":"283","line":18,"column":22,"nodeType":"270","messageId":"271","endLine":18,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":29,"column":22,"nodeType":"275","messageId":"276","endLine":29,"endColumn":24},{"ruleId":"273","severity":1,"message":"274","line":30,"column":25,"nodeType":"275","messageId":"276","endLine":30,"endColumn":27},{"ruleId":"273","severity":1,"message":"274","line":37,"column":22,"nodeType":"275","messageId":"276","endLine":37,"endColumn":24},{"ruleId":"273","severity":1,"message":"284","line":104,"column":21,"nodeType":"275","messageId":"276","endLine":104,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":107,"column":8,"nodeType":"287","endLine":107,"endColumn":19,"suggestions":"288"},{"ruleId":"273","severity":1,"message":"284","line":112,"column":62,"nodeType":"275","messageId":"276","endLine":112,"endColumn":64},{"ruleId":"273","severity":1,"message":"284","line":112,"column":125,"nodeType":"275","messageId":"276","endLine":112,"endColumn":127},{"ruleId":"285","severity":1,"message":"286","line":115,"column":8,"nodeType":"287","endLine":115,"endColumn":10,"suggestions":"289"},{"ruleId":"273","severity":1,"message":"274","line":140,"column":62,"nodeType":"275","messageId":"276","endLine":140,"endColumn":64},{"ruleId":"290","severity":1,"message":"291","line":144,"column":53,"nodeType":"270","messageId":"292","endLine":144,"endColumn":65},{"ruleId":"273","severity":1,"message":"274","line":206,"column":106,"nodeType":"275","messageId":"276","endLine":206,"endColumn":108},{"ruleId":"268","severity":1,"message":"293","line":1,"column":8,"nodeType":"270","messageId":"271","endLine":1,"endColumn":12},{"ruleId":"268","severity":1,"message":"269","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":13},{"ruleId":"268","severity":1,"message":"294","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":11},{"ruleId":"268","severity":1,"message":"295","line":11,"column":10,"nodeType":"270","messageId":"271","endLine":11,"endColumn":13},{"ruleId":"268","severity":1,"message":"296","line":13,"column":9,"nodeType":"270","messageId":"271","endLine":13,"endColumn":14},{"ruleId":"268","severity":1,"message":"277","line":13,"column":16,"nodeType":"270","messageId":"271","endLine":13,"endColumn":20},{"ruleId":"268","severity":1,"message":"297","line":13,"column":22,"nodeType":"270","messageId":"271","endLine":13,"endColumn":28},{"ruleId":"268","severity":1,"message":"278","line":13,"column":30,"nodeType":"270","messageId":"271","endLine":13,"endColumn":38},{"ruleId":"268","severity":1,"message":"298","line":14,"column":10,"nodeType":"270","messageId":"271","endLine":14,"endColumn":25},{"ruleId":"268","severity":1,"message":"299","line":23,"column":7,"nodeType":"270","messageId":"271","endLine":23,"endColumn":18},{"ruleId":"268","severity":1,"message":"300","line":24,"column":7,"nodeType":"270","messageId":"271","endLine":24,"endColumn":18},{"ruleId":"268","severity":1,"message":"301","line":25,"column":7,"nodeType":"270","messageId":"271","endLine":25,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":34,"column":41,"nodeType":"275","messageId":"276","endLine":34,"endColumn":43},{"ruleId":"268","severity":1,"message":"302","line":55,"column":9,"nodeType":"270","messageId":"271","endLine":55,"endColumn":20},{"ruleId":"268","severity":1,"message":"303","line":59,"column":10,"nodeType":"270","messageId":"271","endLine":59,"endColumn":24},{"ruleId":"268","severity":1,"message":"304","line":59,"column":26,"nodeType":"270","messageId":"271","endLine":59,"endColumn":43},{"ruleId":"268","severity":1,"message":"305","line":60,"column":10,"nodeType":"270","messageId":"271","endLine":60,"endColumn":26},{"ruleId":"268","severity":1,"message":"306","line":60,"column":28,"nodeType":"270","messageId":"271","endLine":60,"endColumn":47},{"ruleId":"268","severity":1,"message":"307","line":61,"column":11,"nodeType":"270","messageId":"271","endLine":61,"endColumn":23},{"ruleId":"268","severity":1,"message":"308","line":61,"column":25,"nodeType":"270","messageId":"271","endLine":61,"endColumn":40},{"ruleId":"268","severity":1,"message":"309","line":62,"column":9,"nodeType":"270","messageId":"271","endLine":62,"endColumn":19},{"ruleId":"268","severity":1,"message":"310","line":63,"column":9,"nodeType":"270","messageId":"271","endLine":63,"endColumn":16},{"ruleId":"268","severity":1,"message":"311","line":64,"column":7,"nodeType":"270","messageId":"271","endLine":64,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":76,"column":58,"nodeType":"275","messageId":"276","endLine":76,"endColumn":60},{"ruleId":"285","severity":1,"message":"312","line":79,"column":6,"nodeType":"287","endLine":79,"endColumn":8,"suggestions":"313"},{"ruleId":"285","severity":1,"message":"314","line":85,"column":6,"nodeType":"287","endLine":85,"endColumn":8,"suggestions":"315"},{"ruleId":"285","severity":1,"message":"316","line":91,"column":6,"nodeType":"287","endLine":91,"endColumn":14,"suggestions":"317"},{"ruleId":"285","severity":1,"message":"318","line":102,"column":18,"nodeType":"319","endLine":102,"endColumn":31},{"ruleId":"285","severity":1,"message":"320","line":103,"column":22,"nodeType":"319","endLine":103,"endColumn":39},{"ruleId":"273","severity":1,"message":"274","line":122,"column":36,"nodeType":"275","messageId":"276","endLine":122,"endColumn":38},{"ruleId":"273","severity":1,"message":"274","line":154,"column":21,"nodeType":"275","messageId":"276","endLine":154,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":188,"column":20,"nodeType":"275","messageId":"276","endLine":188,"endColumn":22},{"ruleId":"273","severity":1,"message":"274","line":192,"column":25,"nodeType":"275","messageId":"276","endLine":192,"endColumn":27},{"ruleId":"273","severity":1,"message":"274","line":232,"column":20,"nodeType":"275","messageId":"276","endLine":232,"endColumn":22},{"ruleId":"290","severity":1,"message":"321","line":236,"column":11,"nodeType":"270","messageId":"292","endLine":236,"endColumn":19},{"ruleId":"273","severity":1,"message":"274","line":239,"column":23,"nodeType":"275","messageId":"276","endLine":239,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":239,"column":53,"nodeType":"275","messageId":"276","endLine":239,"endColumn":55},{"ruleId":"273","severity":1,"message":"274","line":239,"column":84,"nodeType":"275","messageId":"276","endLine":239,"endColumn":86},{"ruleId":"273","severity":1,"message":"274","line":239,"column":114,"nodeType":"275","messageId":"276","endLine":239,"endColumn":116},{"ruleId":"273","severity":1,"message":"274","line":239,"column":145,"nodeType":"275","messageId":"276","endLine":239,"endColumn":147},{"ruleId":"273","severity":1,"message":"274","line":239,"column":175,"nodeType":"275","messageId":"276","endLine":239,"endColumn":177},{"ruleId":"273","severity":1,"message":"274","line":248,"column":28,"nodeType":"275","messageId":"276","endLine":248,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":248,"column":58,"nodeType":"275","messageId":"276","endLine":248,"endColumn":60},{"ruleId":"273","severity":1,"message":"274","line":248,"column":89,"nodeType":"275","messageId":"276","endLine":248,"endColumn":91},{"ruleId":"273","severity":1,"message":"274","line":255,"column":28,"nodeType":"275","messageId":"276","endLine":255,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":255,"column":59,"nodeType":"275","messageId":"276","endLine":255,"endColumn":61},{"ruleId":"273","severity":1,"message":"274","line":255,"column":89,"nodeType":"275","messageId":"276","endLine":255,"endColumn":91},{"ruleId":"273","severity":1,"message":"274","line":285,"column":20,"nodeType":"275","messageId":"276","endLine":285,"endColumn":22},{"ruleId":"290","severity":1,"message":"321","line":289,"column":11,"nodeType":"270","messageId":"292","endLine":289,"endColumn":19},{"ruleId":"273","severity":1,"message":"274","line":292,"column":23,"nodeType":"275","messageId":"276","endLine":292,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":292,"column":53,"nodeType":"275","messageId":"276","endLine":292,"endColumn":55},{"ruleId":"273","severity":1,"message":"274","line":292,"column":84,"nodeType":"275","messageId":"276","endLine":292,"endColumn":86},{"ruleId":"273","severity":1,"message":"274","line":292,"column":114,"nodeType":"275","messageId":"276","endLine":292,"endColumn":116},{"ruleId":"273","severity":1,"message":"274","line":292,"column":145,"nodeType":"275","messageId":"276","endLine":292,"endColumn":147},{"ruleId":"273","severity":1,"message":"274","line":292,"column":175,"nodeType":"275","messageId":"276","endLine":292,"endColumn":177},{"ruleId":"273","severity":1,"message":"274","line":301,"column":28,"nodeType":"275","messageId":"276","endLine":301,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":301,"column":58,"nodeType":"275","messageId":"276","endLine":301,"endColumn":60},{"ruleId":"273","severity":1,"message":"274","line":301,"column":89,"nodeType":"275","messageId":"276","endLine":301,"endColumn":91},{"ruleId":"273","severity":1,"message":"274","line":308,"column":28,"nodeType":"275","messageId":"276","endLine":308,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":308,"column":59,"nodeType":"275","messageId":"276","endLine":308,"endColumn":61},{"ruleId":"273","severity":1,"message":"274","line":308,"column":89,"nodeType":"275","messageId":"276","endLine":308,"endColumn":91},{"ruleId":"273","severity":1,"message":"274","line":320,"column":29,"nodeType":"275","messageId":"276","endLine":320,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":323,"column":34,"nodeType":"275","messageId":"276","endLine":323,"endColumn":36},{"ruleId":"268","severity":1,"message":"322","line":330,"column":17,"nodeType":"270","messageId":"271","endLine":330,"endColumn":20},{"ruleId":"273","severity":1,"message":"284","line":331,"column":15,"nodeType":"275","messageId":"276","endLine":331,"endColumn":17},{"ruleId":"273","severity":1,"message":"274","line":337,"column":23,"nodeType":"275","messageId":"276","endLine":337,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":338,"column":23,"nodeType":"275","messageId":"276","endLine":338,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":344,"column":28,"nodeType":"275","messageId":"276","endLine":344,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":345,"column":23,"nodeType":"275","messageId":"276","endLine":345,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":636,"column":58,"nodeType":"275","messageId":"276","endLine":636,"endColumn":60},{"ruleId":"273","severity":1,"message":"274","line":640,"column":38,"nodeType":"275","messageId":"276","endLine":640,"endColumn":40},{"ruleId":"285","severity":1,"message":"323","line":651,"column":6,"nodeType":"287","endLine":651,"endColumn":8,"suggestions":"324"},{"ruleId":"273","severity":1,"message":"274","line":689,"column":19,"nodeType":"275","messageId":"276","endLine":689,"endColumn":21},{"ruleId":"285","severity":1,"message":"325","line":712,"column":8,"nodeType":"287","endLine":712,"endColumn":18,"suggestions":"326"},{"ruleId":"285","severity":1,"message":"327","line":723,"column":8,"nodeType":"287","endLine":723,"endColumn":27,"suggestions":"328"},{"ruleId":"285","severity":1,"message":"329","line":750,"column":8,"nodeType":"287","endLine":750,"endColumn":16,"suggestions":"330"},{"ruleId":"268","severity":1,"message":"331","line":763,"column":17,"nodeType":"270","messageId":"271","endLine":763,"endColumn":23},{"ruleId":"285","severity":1,"message":"332","line":771,"column":8,"nodeType":"287","endLine":771,"endColumn":33,"suggestions":"333"},{"ruleId":"273","severity":1,"message":"274","line":841,"column":41,"nodeType":"275","messageId":"276","endLine":841,"endColumn":43},{"ruleId":"273","severity":1,"message":"274","line":842,"column":41,"nodeType":"275","messageId":"276","endLine":842,"endColumn":43},{"ruleId":"273","severity":1,"message":"274","line":844,"column":23,"nodeType":"275","messageId":"276","endLine":844,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":845,"column":40,"nodeType":"275","messageId":"276","endLine":845,"endColumn":42},{"ruleId":"273","severity":1,"message":"274","line":853,"column":50,"nodeType":"275","messageId":"276","endLine":853,"endColumn":52},{"ruleId":"273","severity":1,"message":"274","line":858,"column":80,"nodeType":"275","messageId":"276","endLine":858,"endColumn":82},{"ruleId":"268","severity":1,"message":"334","line":1,"column":16,"nodeType":"270","messageId":"271","endLine":1,"endColumn":25},{"ruleId":"268","severity":1,"message":"296","line":3,"column":9,"nodeType":"270","messageId":"271","endLine":3,"endColumn":14},{"ruleId":"268","severity":1,"message":"297","line":3,"column":22,"nodeType":"270","messageId":"271","endLine":3,"endColumn":28},{"ruleId":"268","severity":1,"message":"310","line":6,"column":9,"nodeType":"270","messageId":"271","endLine":6,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":12,"column":29,"nodeType":"275","messageId":"276","endLine":12,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":1,"column":8,"nodeType":"270","messageId":"271","endLine":1,"endColumn":13},{"ruleId":"268","severity":1,"message":"335","line":1,"column":16,"nodeType":"270","messageId":"271","endLine":1,"endColumn":24},{"ruleId":"268","severity":1,"message":"294","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":11},{"ruleId":"273","severity":1,"message":"274","line":9,"column":39,"nodeType":"275","messageId":"276","endLine":9,"endColumn":41},{"ruleId":"273","severity":1,"message":"274","line":15,"column":55,"nodeType":"275","messageId":"276","endLine":15,"endColumn":57},{"ruleId":"273","severity":1,"message":"274","line":16,"column":53,"nodeType":"275","messageId":"276","endLine":16,"endColumn":55},{"ruleId":"268","severity":1,"message":"334","line":1,"column":26,"nodeType":"270","messageId":"271","endLine":1,"endColumn":35},{"ruleId":"268","severity":1,"message":"296","line":3,"column":9,"nodeType":"270","messageId":"271","endLine":3,"endColumn":14},{"ruleId":"268","severity":1,"message":"277","line":3,"column":16,"nodeType":"270","messageId":"271","endLine":3,"endColumn":20},{"ruleId":"268","severity":1,"message":"297","line":3,"column":22,"nodeType":"270","messageId":"271","endLine":3,"endColumn":28},{"ruleId":"268","severity":1,"message":"336","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":12},{"ruleId":"268","severity":1,"message":"337","line":7,"column":8,"nodeType":"270","messageId":"271","endLine":7,"endColumn":16},{"ruleId":"268","severity":1,"message":"338","line":11,"column":12,"nodeType":"270","messageId":"271","endLine":11,"endColumn":20},{"ruleId":"268","severity":1,"message":"339","line":11,"column":22,"nodeType":"270","messageId":"271","endLine":11,"endColumn":33},{"ruleId":"268","severity":1,"message":"340","line":12,"column":24,"nodeType":"270","messageId":"271","endLine":12,"endColumn":37},{"ruleId":"268","severity":1,"message":"341","line":13,"column":12,"nodeType":"270","messageId":"271","endLine":13,"endColumn":21},{"ruleId":"268","severity":1,"message":"342","line":13,"column":23,"nodeType":"270","messageId":"271","endLine":13,"endColumn":35},{"ruleId":"268","severity":1,"message":"343","line":14,"column":12,"nodeType":"270","messageId":"271","endLine":14,"endColumn":24},{"ruleId":"268","severity":1,"message":"344","line":14,"column":26,"nodeType":"270","messageId":"271","endLine":14,"endColumn":41},{"ruleId":"268","severity":1,"message":"345","line":15,"column":12,"nodeType":"270","messageId":"271","endLine":15,"endColumn":27},{"ruleId":"268","severity":1,"message":"346","line":15,"column":29,"nodeType":"270","messageId":"271","endLine":15,"endColumn":47},{"ruleId":"268","severity":1,"message":"347","line":30,"column":11,"nodeType":"270","messageId":"271","endLine":30,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":33,"column":33,"nodeType":"275","messageId":"276","endLine":33,"endColumn":35},{"ruleId":"273","severity":1,"message":"274","line":51,"column":19,"nodeType":"275","messageId":"276","endLine":51,"endColumn":21},{"ruleId":"273","severity":1,"message":"274","line":54,"column":23,"nodeType":"275","messageId":"276","endLine":54,"endColumn":25},{"ruleId":"268","severity":1,"message":"322","line":60,"column":21,"nodeType":"270","messageId":"271","endLine":60,"endColumn":24},{"ruleId":"273","severity":1,"message":"274","line":61,"column":30,"nodeType":"275","messageId":"276","endLine":61,"endColumn":32},{"ruleId":"273","severity":1,"message":"274","line":62,"column":21,"nodeType":"275","messageId":"276","endLine":62,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":68,"column":21,"nodeType":"275","messageId":"276","endLine":68,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":73,"column":21,"nodeType":"275","messageId":"276","endLine":73,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":76,"column":26,"nodeType":"275","messageId":"276","endLine":76,"endColumn":28},{"ruleId":"273","severity":1,"message":"284","line":124,"column":31,"nodeType":"275","messageId":"276","endLine":124,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":149,"column":40,"nodeType":"275","messageId":"276","endLine":149,"endColumn":42},{"ruleId":"273","severity":1,"message":"274","line":159,"column":35,"nodeType":"275","messageId":"276","endLine":159,"endColumn":37},{"ruleId":"268","severity":1,"message":"348","line":6,"column":7,"nodeType":"270","messageId":"271","endLine":6,"endColumn":13},{"ruleId":"268","severity":1,"message":"349","line":11,"column":9,"nodeType":"270","messageId":"271","endLine":11,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":11,"column":34,"nodeType":"275","messageId":"276","endLine":11,"endColumn":36},{"ruleId":"273","severity":1,"message":"274","line":12,"column":36,"nodeType":"275","messageId":"276","endLine":12,"endColumn":38},{"ruleId":"273","severity":1,"message":"274","line":32,"column":35,"nodeType":"275","messageId":"276","endLine":32,"endColumn":37},{"ruleId":"273","severity":1,"message":"274","line":43,"column":62,"nodeType":"275","messageId":"276","endLine":43,"endColumn":64},{"ruleId":"273","severity":1,"message":"274","line":56,"column":63,"nodeType":"275","messageId":"276","endLine":56,"endColumn":65},{"ruleId":"273","severity":1,"message":"274","line":63,"column":63,"nodeType":"275","messageId":"276","endLine":63,"endColumn":65},{"ruleId":"273","severity":1,"message":"274","line":70,"column":63,"nodeType":"275","messageId":"276","endLine":70,"endColumn":65},{"ruleId":"350","severity":1,"message":"351","line":80,"column":31,"nodeType":"352","endLine":80,"endColumn":42},{"ruleId":"350","severity":1,"message":"351","line":87,"column":31,"nodeType":"352","endLine":87,"endColumn":42},{"ruleId":"350","severity":1,"message":"351","line":94,"column":31,"nodeType":"352","endLine":94,"endColumn":42},{"ruleId":"350","severity":1,"message":"351","line":101,"column":31,"nodeType":"352","endLine":101,"endColumn":42},{"ruleId":"350","severity":1,"message":"351","line":108,"column":31,"nodeType":"352","endLine":108,"endColumn":42},{"ruleId":"350","severity":1,"message":"351","line":115,"column":31,"nodeType":"352","endLine":115,"endColumn":42},{"ruleId":"273","severity":1,"message":"284","line":139,"column":54,"nodeType":"275","messageId":"276","endLine":139,"endColumn":56},{"ruleId":"268","severity":1,"message":"353","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":16},{"ruleId":"268","severity":1,"message":"354","line":4,"column":9,"nodeType":"270","messageId":"271","endLine":4,"endColumn":23},{"ruleId":"268","severity":1,"message":"355","line":4,"column":25,"nodeType":"270","messageId":"271","endLine":4,"endColumn":30},{"ruleId":"268","severity":1,"message":"356","line":9,"column":7,"nodeType":"270","messageId":"271","endLine":9,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":15,"column":29,"nodeType":"275","messageId":"276","endLine":15,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":26,"column":20,"nodeType":"275","messageId":"276","endLine":26,"endColumn":22},{"ruleId":"273","severity":1,"message":"274","line":30,"column":25,"nodeType":"275","messageId":"276","endLine":30,"endColumn":27},{"ruleId":"268","severity":1,"message":"357","line":38,"column":12,"nodeType":"270","messageId":"271","endLine":38,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":44,"column":23,"nodeType":"275","messageId":"276","endLine":44,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":53,"column":25,"nodeType":"275","messageId":"276","endLine":53,"endColumn":27},{"ruleId":"273","severity":1,"message":"274","line":61,"column":27,"nodeType":"275","messageId":"276","endLine":61,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":67,"column":27,"nodeType":"275","messageId":"276","endLine":67,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":73,"column":27,"nodeType":"275","messageId":"276","endLine":73,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":79,"column":27,"nodeType":"275","messageId":"276","endLine":79,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":85,"column":27,"nodeType":"275","messageId":"276","endLine":85,"endColumn":29},{"ruleId":"285","severity":1,"message":"312","line":93,"column":6,"nodeType":"287","endLine":93,"endColumn":26,"suggestions":"358"},{"ruleId":"273","severity":1,"message":"274","line":96,"column":23,"nodeType":"275","messageId":"276","endLine":96,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":103,"column":38,"nodeType":"275","messageId":"276","endLine":103,"endColumn":40},{"ruleId":"273","severity":1,"message":"274","line":115,"column":39,"nodeType":"275","messageId":"276","endLine":115,"endColumn":41},{"ruleId":"273","severity":1,"message":"274","line":119,"column":51,"nodeType":"275","messageId":"276","endLine":119,"endColumn":53},{"ruleId":"290","severity":1,"message":"359","line":131,"column":23,"nodeType":"270","messageId":"292","endLine":131,"endColumn":35},{"ruleId":"273","severity":1,"message":"274","line":132,"column":49,"nodeType":"275","messageId":"276","endLine":132,"endColumn":51},{"ruleId":"268","severity":1,"message":"335","line":1,"column":16,"nodeType":"270","messageId":"271","endLine":1,"endColumn":24},{"ruleId":"273","severity":1,"message":"274","line":11,"column":34,"nodeType":"275","messageId":"276","endLine":11,"endColumn":36},{"ruleId":"273","severity":1,"message":"274","line":13,"column":23,"nodeType":"275","messageId":"276","endLine":13,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":19,"column":49,"nodeType":"275","messageId":"276","endLine":19,"endColumn":51},{"ruleId":"273","severity":1,"message":"274","line":20,"column":47,"nodeType":"275","messageId":"276","endLine":20,"endColumn":49},{"ruleId":"273","severity":1,"message":"274","line":43,"column":49,"nodeType":"275","messageId":"276","endLine":43,"endColumn":51},{"ruleId":"273","severity":1,"message":"274","line":44,"column":47,"nodeType":"275","messageId":"276","endLine":44,"endColumn":49},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Navigate' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'joined' is assigned a value but never used.","'setRoomFull' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["362"],["363"],"no-redeclare","'tempRoomCode' is already defined.","redeclared","'logo' is defined but never used.","'Dot' is defined but never used.","'css' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'useBeforeunload' is defined but never used.","'compTempPos' is defined but never used.","'compBoxFlag' is assigned a value but never used.","'comp2line' is assigned a value but never used.","'yourTurnRef' is assigned a value but never used.","'playerOnMobile' is assigned a value but never used.","'setPlayerOnMobile' is assigned a value but never used.","'opponentOnMobile' is assigned a value but never used.","'setOpponentOnMobile' is assigned a value but never used.","'locationKeys' is assigned a value but never used.","'setLocationKeys' is assigned a value but never used.","'screenType' is assigned a value but never used.","'history' is assigned a value but never used.","'localTurn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["364"],"React Hook useEffect has missing dependencies: 'props.roomId' and 'props.socketId'. Either include them or remove the dependency array.",["365"],"React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["366"],"Assignments to the 'position' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'tempBoxColor' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'boxColor' is already defined.","'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'assignedColor'. Either include it or remove the dependency array.",["367"],"React Hook useEffect has missing dependencies: 'lastSeen' and 'messageArr.length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLastSeen' needs the current value of 'messageArr.length'.",["368"],"React Hook useEffect has missing dependencies: 'lastSeen' and 'showChat'. Either include them or remove the dependency array.",["369"],"React Hook useEffect has a missing dependency: 'props.vsComp'. Either include it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["370"],"'tempId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.playerRole' and 'props.vsComp'. Either include them or remove the dependency array.",["371"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Game' is defined but never used.","'Confetti' is defined but never used.","'gridSize' is assigned a value but never used.","'setGridSize' is assigned a value but never used.","'setHideWinner' is assigned a value but never used.","'showShare' is assigned a value but never used.","'setShowShare' is assigned a value but never used.","'showConfetti' is assigned a value but never used.","'setShowConfetti' is assigned a value but never used.","'recycleConfetti' is assigned a value but never used.","'setRecycleConfetti' is assigned a value but never used.","'newRoomId' is assigned a value but never used.","'socket' is assigned a value but never used.","'bgColor' is assigned a value but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'ReactDOM' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'compFlag' is assigned a value but never used.","'position' is assigned a value but never used.",["372"],"'tempPosition' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"385","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [history, urlRoomId]",{"range":"394","text":"395"},"Update the dependencies array to be: [history]",{"range":"396","text":"397"},"Update the dependencies array to be: [props]",{"range":"398","text":"399"},"Update the dependencies array to be: [props.roomId, props.socketId]",{"range":"400","text":"401"},"Update the dependencies array to be: []",{"range":"402","text":"403"},"Update the dependencies array to be: [assignedColor]",{"range":"404","text":"405"},"Update the dependencies array to be: [lastSeen, messageArr.length, showChat]",{"range":"406","text":"407"},{"range":"408","text":"407"},"Update the dependencies array to be: [props.vsComp]",{"range":"409","text":"410"},"Update the dependencies array to be: [finalRoomId, playerLeft, props.playerRole, props.vsComp]",{"range":"411","text":"412"},"Update the dependencies array to be: [props, props.showLastMove]",{"range":"413","text":"414"},[3581,3592],"[history, urlRoomId]",[3976,3978],"[history]",[2840,2842],"[props]",[2988,2990],"[props.roomId, props.socketId]",[3095,3103],"[]",[21884,21886],"[assignedColor]",[23676,23686],"[lastSeen, messageArr.length, showChat]",[23930,23949],[24906,24914],"[props.vsComp]",[25572,25597],"[finalRoomId, playerLeft, props.playerRole, props.vsComp]",[3024,3044],"[props, props.showLastMove]"]