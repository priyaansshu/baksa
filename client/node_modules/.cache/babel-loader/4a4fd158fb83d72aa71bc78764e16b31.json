{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Container.js\";\nimport React from 'react';\nimport Dot from \"./Dot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container(props) {\n  var grid = [];\n  var keyCount = 0;\n  let i, j;\n\n  (function createBoard() {\n    for (i = 0; i < 9; ++i) {\n      if (i % 2 == 0) {\n        // horizontal orientation lines & dots\n        for (j = 0; j < 9; ++j) {\n          grid.push( /*#__PURE__*/_jsxDEV(Dot, {\n            elementName: j % 2 == 0 ? \"dot\" : \"horizontal-bar\",\n            elementId: j % 2 == 0 ? \"dot-\" + keyCount : \"horizontal-bar-\" + keyCount\n          }, keyCount++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 31\n          }, this));\n        }\n      } else {\n        // vertical orientation lines\n        for (j = 0; j < 5; ++j) {\n          grid.push( /*#__PURE__*/_jsxDEV(Dot, {\n            elementName: \"vertical-bar\",\n            elementId: \"vertical-bar-\" + keyCount\n          }, keyCount++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 31\n          }, this));\n        }\n      }\n\n      grid.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }, this));\n    }\n  })();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.containerName,\n    id: props.containerId,\n    children: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Container.js"],"names":["React","Dot","Container","props","grid","keyCount","i","j","createBoard","push","containerName","containerId","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAC,CAAb;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AACA,GAAC,SAASC,WAAT,GAAsB;AACnB,SAAIF,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,CAAX,EAAc,EAAEA,CAAhB,EAAkB;AACd,UAAGA,CAAC,GAAC,CAAF,IAAK,CAAR,EAAU;AACN;AACA,aAAIC,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,CAAX,EAAc,EAAEA,CAAhB,EAAkB;AACdH,UAAAA,IAAI,CAACK,IAAL,eAAU,QAAC,GAAD;AAEM,YAAA,WAAW,EAAEF,CAAC,GAAC,CAAF,IAAK,CAAL,GAAO,KAAP,GAAa,gBAFhC;AAGM,YAAA,SAAS,EAAEA,CAAC,GAAC,CAAF,IAAK,CAAL,GAAO,SAAOF,QAAd,GAAuB,oBAAkBA;AAH1D,aACWA,QAAQ,EADnB;AAAA;AAAA;AAAA;AAAA,kBAAV;AAKH;AACJ,OATD,MAUI;AACA;AACA,aAAIE,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,CAAX,EAAc,EAAEA,CAAhB,EAAkB;AACdH,UAAAA,IAAI,CAACK,IAAL,eAAU,QAAC,GAAD;AAEM,YAAA,WAAW,EAAC,cAFlB;AAGM,YAAA,SAAS,EAAE,kBAAgBJ;AAHjC,aACWA,QAAQ,EADnB;AAAA;AAAA;AAAA;AAAA,kBAAV;AAKH;AACJ;;AACDD,MAAAA,IAAI,CAACK,IAAL,eAAU;AAAA;AAAA;AAAA;AAAA,cAAV;AACH;AACJ,GAxBD;;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAEN,KAAK,CAACO,aAAtB;AAAqC,IAAA,EAAE,EAAEP,KAAK,CAACQ,WAA/C;AAAA,cAA6DC;AAA7D;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;KAjCuBV,S","sourcesContent":["import React from 'react'\nimport Dot from \"./Dot\";\n\nexport default function Container(props) {\n    var grid = [];\n    var keyCount=0;\n    let i, j;\n    (function createBoard(){\n        for(i=0; i<9; ++i){\n            if(i%2==0){\n                // horizontal orientation lines & dots\n                for(j=0; j<9; ++j){\n                    grid.push(<Dot \n                                    key={keyCount++} \n                                    elementName={j%2==0?\"dot\":\"horizontal-bar\"}\n                                    elementId={j%2==0?\"dot-\"+keyCount:\"horizontal-bar-\"+keyCount}\n                                />)\n                }\n            }\n            else{\n                // vertical orientation lines\n                for(j=0; j<5; ++j){\n                    grid.push(<Dot\n                                    key={keyCount++}\n                                    elementName=\"vertical-bar\"\n                                    elementId={\"vertical-bar-\"+keyCount}\n                                />)\n                }\n            }\n            grid.push(<br/>);\n        }\n    })()\n\n    return (\n        <div className={props.containerName} id={props.containerId}>{container}</div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}