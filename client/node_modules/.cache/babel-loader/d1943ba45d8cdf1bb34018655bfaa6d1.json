{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../style.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  var chatColor = props.chatColor == \"#c5183b\" ? \"rgba(195, 24, 58, 0.5)\" : \"rgba(59, 146, 155, 0.5)\";\n\n  function sendMessage(tempMessage) {\n    if (tempMessage == \"\") {\n      return;\n    }\n\n    var tempMessageArr = [...props.messageArr];\n    console.log(tempMessageArr);\n    tempMessageArr.push(message);\n    props.setMessageArr(tempMessageArr);\n    console.log(tempMessageArr);\n    socket.emit(\"send-message\", {\n      roomId: props.roomId,\n      tempMessage: tempMessage\n    });\n  }\n\n  useEffect(() => {\n    socket.on(\"receive-message\", message => {\n      console.log(\"message received\");\n      var tempMessageArr = [...props.messageArr];\n      console.log(tempMessageArr);\n      tempMessageArr.push(message);\n      props.setMessageArr(tempMessageArr);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [JSON.stringify(props.messageArr), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-outer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main-container\",\n        children: [props.messageArr.map((message, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-container\",\n            style: {\n              backgroundColor: chatColor\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chat-message-text\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"chat-input\",\n            placeholder: \"Type a message...\",\n            onKeyPress: e => {\n              if (e.key === \"Enter\") {\n                sendMessage(e.target.value);\n                e.target.value = \"\";\n              }\n            },\n            onChange: e => {\n              setMessage(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-send-button\",\n            onClick: () => {\n              sendMessage(message);\n              setMessage(\"\");\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chat, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Chat.js"],"names":["React","useState","useEffect","io","socket","Chat","props","message","setMessage","chatColor","sendMessage","tempMessage","tempMessageArr","messageArr","console","log","push","setMessageArr","emit","roomId","on","JSON","stringify","map","index","backgroundColor","e","key","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport \"../style.css\";\nimport {io} from \"socket.io-client\";\n\nconst socket = io('http://localhost:4000');\n\nexport default function Chat(props) {\n    const [message, setMessage]= useState(\"\");\n    var chatColor = props.chatColor==\"#c5183b\"?\"rgba(195, 24, 58, 0.5)\":\"rgba(59, 146, 155, 0.5)\";\n\n    function sendMessage(tempMessage){\n        if(tempMessage==\"\"){\n            return;\n        }\n        var tempMessageArr = [...props.messageArr];\n        console.log(tempMessageArr);\n        tempMessageArr.push(message);\n        props.setMessageArr(tempMessageArr);\n        console.log(tempMessageArr);\n        socket.emit(\"send-message\", {roomId: props.roomId, tempMessage: tempMessage});\n      }\n    \n      useEffect(()=>{\n        socket.on(\"receive-message\", (message)=>{\n            console.log(\"message received\");\n          var tempMessageArr = [...props.messageArr];\n          console.log(tempMessageArr);\n          tempMessageArr.push(message);\n          props.setMessageArr(tempMessageArr);\n        })\n      }, [socket]);\n\n    return (\n    <>\n        {JSON.stringify(props.messageArr)}\n        <div className=\"chat-outer-container\">\n            <div className=\"chat-main-container\">\n                {props.messageArr.map((message, index)=>{\n                    return(\n                        <div \n                            className=\"chat-message-container\" \n                            key={index}\n                            style={{backgroundColor: chatColor}}\n                        >\n                                <p className=\"chat-message-text\">{message}</p>\n                        </div>\n                    )\n                })}\n                <div className=\"chat-input-container\">\n                    <input \n                        type=\"text\" \n                        className=\"chat-input\"\n                        placeholder=\"Type a message...\"\n                        onKeyPress={(e)=>{\n                            if(e.key===\"Enter\"){\n                                sendMessage(e.target.value);\n                                e.target.value=\"\";\n                            }\n                        }}\n                        onChange={(e)=>{\n                            setMessage(e.target.value);\n                        }}\n                    />\n                    <button\n                        className=\"chat-send-button\"\n                        onClick={()=>{\n                            sendMessage(message);\n                            setMessage(\"\");\n                        }\n                        }\n                    >\n                        Send\n                    </button>\n                </div>\n            </div>\n        </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}