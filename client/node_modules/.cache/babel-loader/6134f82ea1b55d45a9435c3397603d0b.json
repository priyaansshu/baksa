{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/GameOver.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../style.css\";\nimport { Route, Link, Routes, useNavigate } from \"react-router-dom\";\nimport Game from \"../Game.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Confetti from 'react-confetti';\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('https://baksa19.herokuapp.com/', {\n  transports: ['websocket']\n});\nexport default function GameOver(props) {\n  _s();\n\n  var result;\n  const [gridSize, setGridSize] = useState(4);\n  const [hideWinner, setHideWinner] = useState(\"flex\");\n  const [showShare, setShowShare] = useState(\"none\");\n  const [showConfetti, setShowConfetti] = useState(true);\n  const [recycleConfetti, setRecycleConfetti] = useState(true);\n  const [startRematch, setStartRematch] = useState(false);\n  const [roomId, setRoomId] = useState();\n  const [playerRole, setPlayerRole] = useState();\n  const history = useNavigate();\n\n  const generateRandomString = myLength => {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const randomArray = Array.from({\n      length: myLength\n    }, (v, k) => chars[Math.floor(Math.random() * chars.length)]);\n    const randomString = randomArray.join(\"\");\n    return randomString;\n  };\n\n  const newRoomId = generateRandomString(6);\n\n  (function calcResult() {\n    if (props.gameLeaveWinner == \"none\") {\n      if (props.redScore > props.blueScore) {\n        result = \"red\";\n      } else if (props.redScore < props.blueScore) {\n        result = \"blue\";\n      } else {\n        result = \"draw\";\n      }\n    } else {\n      result = props.gameLeaveWinner;\n    }\n  })();\n\n  function createEmoji() {\n    var i = 0;\n\n    if (result == \"draw\") {\n      var message = \"It's a draw\\n\\n\";\n    } else if (result == \"red\") {\n      message = \"👑 Red\\n\\n\";\n    } else {\n      message = \"👑 Blue\\n\\n\";\n    }\n\n    for (const [key, value] of props.boxMap.entries()) {\n      if (props.gridSize == 4) {\n        if (i == 4) {\n          message += \"\\n\";\n          i = 0;\n        }\n      } else {\n        if (i == 8) {\n          message += \"\\n\";\n          i = 0;\n        }\n      }\n\n      if (value == \"#c5183b\") {\n        message += \"🟥\";\n      } else if (value == \"#3b919b\") {\n        message += \"🟦\";\n      } else {\n        message += \"⬜️\";\n      }\n\n      i++;\n    }\n\n    console.log(message);\n    navigator.clipboard.writeText(message);\n  }\n\n  function resultCopied() {\n    toast(\"Result copied to clipboard\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n  }\n\n  socket.on(\"new-room-id\", newRoomId => {\n    socket.emit(\"join-rematch-room\", newRoomId);\n    setRoomId(newRoomId);\n    setPlayerRole(2);\n    history.push(\"/room/\" + newRoomId);\n    setStartRematch(true);\n  }); // useEffect(()=>{\n  //     if(props.gameOver){\n  //         console.log(\"here\");\n  //         setTimeout(()=>{\n  //             setShowConfetti(true);\n  //         }\n  //         ,2000);\n  //         setTimeout(()=>{\n  //             setRecycleConfetti(false);\n  //         }\n  //         ,5000);\n  //     }\n  // }, [props.gameOver])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!startRematch && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), props.gameLeaveWinner != \"none\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-leave-message\",\n        children: \"The other player left the room.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-outer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-container\",\n          id: result + \"-winner-container\",\n          onClick: () => {\n            resultCopied();\n            createEmoji();\n          },\n          \"data-hover\": \"share\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-text-container\",\n            style: {\n              display: hideWinner\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"winner-text\",\n              children: [result == \"draw\" ? \"Draw\" : result + \" wins\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"share-image-container\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"grid-button\",\n        id: props.gridSize == 4 ? \"four-button\" : \"eight-button\",\n        onClick: () => {\n          // history(\"/\")\n          var tempNewRoomId = generateRandomString(6);\n          socket.emit(\"create-rematch-room\", (props.curRoomId, tempNewRoomId));\n          history.push(\"/room/\" + tempNewRoomId);\n          setPlayerRole(1);\n          setRoomId(tempNewRoomId);\n          setStartRematch(true);\n        },\n        children: \"Go Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), startRematch && /*#__PURE__*/_jsxDEV(Game, {\n      gridSize: props.gridSize,\n      roomId: roomId,\n      socketId: socket.id,\n      playerRole: playerRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GameOver, \"tm1ykztzCK2nxRk0itsb2w69dME=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Components/GameOver.js"],"names":["React","useState","useEffect","Route","Link","Routes","useNavigate","Game","ToastContainer","toast","Confetti","io","socket","transports","GameOver","props","result","gridSize","setGridSize","hideWinner","setHideWinner","showShare","setShowShare","showConfetti","setShowConfetti","recycleConfetti","setRecycleConfetti","startRematch","setStartRematch","roomId","setRoomId","playerRole","setPlayerRole","history","generateRandomString","myLength","chars","randomArray","Array","from","length","v","k","Math","floor","random","randomString","join","newRoomId","calcResult","gameLeaveWinner","redScore","blueScore","createEmoji","i","message","key","value","boxMap","entries","console","log","navigator","clipboard","writeText","resultCopied","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","on","emit","push","display","tempNewRoomId","curRoomId","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport \"../style.css\"\nimport {Route, Link, Routes, useNavigate} from \"react-router-dom\";\nimport Game from \"../Game.js\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Confetti from 'react-confetti'\nimport {io} from \"socket.io-client\"\n\nconst socket = io('https://baksa19.herokuapp.com/', { transports : ['websocket'] });\n\nexport default function GameOver(props) {\n    var result;\n    const [gridSize, setGridSize] = useState(4);\n    const [hideWinner, setHideWinner] = useState(\"flex\");\n    const [showShare, setShowShare] = useState(\"none\");\n    const [showConfetti, setShowConfetti] = useState(true);\n    const [recycleConfetti, setRecycleConfetti] = useState(true);\n    const [startRematch, setStartRematch] = useState(false);\n    const [roomId, setRoomId] = useState();\n    const [playerRole, setPlayerRole] = useState();\n    const history = useNavigate();\n\n    const generateRandomString = (myLength) => {\n        const chars =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        const randomArray = Array.from(\n          { length: myLength },\n          (v, k) => chars[Math.floor(Math.random() * chars.length)]\n        );\n      \n        const randomString = randomArray.join(\"\");\n        return randomString;\n    };\n    \n    const newRoomId = generateRandomString(6);\n\n    (function calcResult(){\n        if(props.gameLeaveWinner==\"none\"){\n            if(props.redScore>props.blueScore){\n                result = \"red\";\n            }\n            else if(props.redScore<props.blueScore){\n                result = \"blue\";\n            }\n            else{\n                result = \"draw\";\n            }\n        }\n        else{\n            result = props.gameLeaveWinner\n        }\n    })();\n    \n    function createEmoji(){\n        var i=0;\n        if(result == \"draw\"){\n            var message = \"It's a draw\\n\\n\";\n        }\n        else if(result==\"red\"){\n            message = \"👑 Red\\n\\n\";\n        }\n        else{\n            message = \"👑 Blue\\n\\n\";\n        }\n        for (const [key, value] of props.boxMap.entries()) {\n            if(props.gridSize==4){\n                if(i==4){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            else{\n                if(i==8){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            if(value==\"#c5183b\"){\n                message+=\"🟥\";\n            }\n            else if(value==\"#3b919b\"){\n                message+=\"🟦\";\n            }\n            else{\n                message+=\"⬜️\";\n            }\n            i++;\n        }   \n        console.log(message);\n        navigator.clipboard.writeText(message);\n    }\n\n    function resultCopied (){\n        toast(\"Result copied to clipboard\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });  \n    } \n\n    socket.on(\"new-room-id\", (newRoomId)=>{\n        socket.emit(\"join-rematch-room\", newRoomId);\n        setRoomId(newRoomId);\n        setPlayerRole(2);\n        history.push(\"/room/\"+newRoomId);\n        setStartRematch(true);\n    })\n\n\n    // useEffect(()=>{\n    //     if(props.gameOver){\n    //         console.log(\"here\");\n    //         setTimeout(()=>{\n    //             setShowConfetti(true);\n    //         }\n    //         ,2000);\n    //         setTimeout(()=>{\n    //             setRecycleConfetti(false);\n    //         }\n    //         ,5000);\n    //     }\n    // }, [props.gameOver])\n\n    return (\n    <>\n        {/* {showConfetti && \n            <Confetti \n                colors = {result==\"blue\"?[\"#3b919b\"]:[\"#c5183b\"]}\n                numberOfPieces = {80}\n                recycle = {recycleConfetti}\n            />\n        }  */}\n        {!startRematch &&\n            <>\n                <div className=\"logo-container\"></div>\n                {props.gameLeaveWinner!=\"none\"?\n                    <div className=\"game-leave-message\">\n                        The other player left the room.\n                    </div>\n                    :\n                    null\n                }\n                <div className=\"winner-outer-container\">\n                    <div \n                        className=\"winner-container\" \n                        id={result+\"-winner-container\"} \n                        onClick={()=>{\n                            resultCopied();\n                            createEmoji();\n                        }}\n                        data-hover={\"share\"}\n                    >\n                        <div \n                            className=\"winner-text-container\" \n                            style={{display: hideWinner}}\n                        >\n                                <h2 \n                                    className=\"winner-text\">\n                                        {result==\"draw\"?\"Draw\":result+\" wins\"}\n                                        <div className = \"share-image-container\"/>\n                                </h2>\n                        </div>\n                    </div>\n                </div>\n                <button \n                    className=\"grid-button\" \n                    id={props.gridSize==4?\"four-button\":\"eight-button\"} \n                    onClick={()=>{\n                        // history(\"/\")\n                        var tempNewRoomId = generateRandomString(6);\n                        socket.emit(\"create-rematch-room\", (props.curRoomId, tempNewRoomId));\n                        history.push(\"/room/\"+tempNewRoomId);\n                        setPlayerRole(1);\n                        setRoomId(tempNewRoomId);\n                        setStartRematch(true);\n                    }}\n                    >\n                    Go Again\n                </button>\n            </>\n        }\n        {startRematch &&\n            <Game \n                gridSize={props.gridSize}\n                roomId={roomId}\n                socketId={socket.id}\n                playerRole={playerRole}\n            />\n        }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}