{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Dot.js\";\nimport React, { useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dot(props) {\n  var boxColor;\n\n  function tempPos(id) {\n    var part1 = 0,\n        part2 = 0,\n        position = 0;\n\n    if (id.charAt(0) == \"d\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 2;\n    } else if (id.charAt(0) == \"h\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 1;\n    } else {\n      part1 = 14 * parseInt(id.charAt(2)) - 5;\n      part2 = parseInt(id.charAt(4));\n    }\n\n    return position = part1 + part2;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.gridSize == 4 ? props.elementName : \"big-grid-\" + props.elementName,\n      id: props.elementId,\n      style: props.elementId.charAt(0) === \"b\" ? {\n        backgroundColor: props.boxMap.get(props.elementId),\n        opacity: \"0.5\"\n      } : {\n        opacity: \"1\"\n      },\n      onClick: e => {\n        if (e.target.id.charAt(0) !== \"d\" && e.target.id.charAt(0) !== \"b\") {\n          var tempPosition = tempPos(e.target.id);\n\n          if (props.map.get(tempPosition) == \"unclicked\") {\n            e.target.style.backgroundColor = props.turn;\n            props.func(e.target.id);\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Dot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dot\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Dot.js"],"names":["React","useState","useRef","ReactDOM","Dot","props","boxColor","tempPos","id","part1","part2","position","charAt","parseInt","gridSize","elementName","elementId","backgroundColor","boxMap","get","opacity","e","target","tempPosition","map","style","turn","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,MAAIC,QAAJ;;AAEA,WAASC,OAAT,CAAiBC,EAAjB,EAAoB;AAClB,QAAIC,KAAK,GAAC,CAAV;AAAA,QAAaC,KAAK,GAAC,CAAnB;AAAA,QAAsBC,QAAQ,GAAC,CAA/B;;AACA,QAAGH,EAAE,CAACI,MAAH,CAAU,CAAV,KAAc,GAAjB,EAAqB;AACnBH,MAAAA,KAAK,GAAG,MAAII,QAAQ,CAACL,EAAE,CAACI,MAAH,CAAU,CAAV,CAAD,CAAR,GAAuB,CAA3B,CAAR;AACAF,MAAAA,KAAK,GAAG,IAAGG,QAAQ,CAACL,EAAE,CAACI,MAAH,CAAU,CAAV,CAAD,CAAX,GAA2B,CAAnC;AACD,KAHD,MAIK,IAAGJ,EAAE,CAACI,MAAH,CAAU,CAAV,KAAc,GAAjB,EAAqB;AACxBH,MAAAA,KAAK,GAAG,MAAII,QAAQ,CAACL,EAAE,CAACI,MAAH,CAAU,CAAV,CAAD,CAAR,GAAuB,CAA3B,CAAR;AACAF,MAAAA,KAAK,GAAG,IAAGG,QAAQ,CAACL,EAAE,CAACI,MAAH,CAAU,CAAV,CAAD,CAAX,GAA2B,CAAnC;AACD,KAHI,MAID;AACFH,MAAAA,KAAK,GAAG,KAAII,QAAQ,CAACL,EAAE,CAACI,MAAH,CAAU,CAAV,CAAD,CAAZ,GAA4B,CAApC;AACAF,MAAAA,KAAK,GAAGG,QAAQ,CAACL,EAAE,CAACI,MAAH,CAAU,CAAV,CAAD,CAAhB;AACD;;AACD,WAAOD,QAAQ,GAAGF,KAAK,GAAGC,KAA1B;AACD;;AAED,sBACI;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAEL,KAAK,CAACS,QAAN,IAAgB,CAAhB,GAAkBT,KAAK,CAACU,WAAxB,GAAoC,cAAYV,KAAK,CAACU,WAAtE;AAAmF,MAAA,EAAE,EAAEV,KAAK,CAACW,SAA7F;AACI,MAAA,KAAK,EAAEX,KAAK,CAACW,SAAN,CAAgBJ,MAAhB,CAAuB,CAAvB,MAA4B,GAA5B,GAAgC;AAACK,QAAAA,eAAe,EAAEZ,KAAK,CAACa,MAAN,CAAaC,GAAb,CAAiBd,KAAK,CAACW,SAAvB,CAAlB;AAAqDI,QAAAA,OAAO,EAAE;AAA9D,OAAhC,GAAqG;AAACA,QAAAA,OAAO,EAAE;AAAV,OADhH;AAEI,MAAA,OAAO,EAAGC,CAAD,IAAK;AACZ,YAAGA,CAAC,CAACC,MAAF,CAASd,EAAT,CAAYI,MAAZ,CAAmB,CAAnB,MAAwB,GAAxB,IAA6BS,CAAC,CAACC,MAAF,CAASd,EAAT,CAAYI,MAAZ,CAAmB,CAAnB,MAAwB,GAAxD,EAA4D;AAC1D,cAAIW,YAAY,GAAGhB,OAAO,CAACc,CAAC,CAACC,MAAF,CAASd,EAAV,CAA1B;;AACA,cAAGH,KAAK,CAACmB,GAAN,CAAUL,GAAV,CAAcI,YAAd,KAA6B,WAAhC,EAA4C;AAC1CF,YAAAA,CAAC,CAACC,MAAF,CAASG,KAAT,CAAeR,eAAf,GAAiCZ,KAAK,CAACqB,IAAvC;AACArB,YAAAA,KAAK,CAACsB,IAAN,CAAWN,CAAC,CAACC,MAAF,CAASd,EAApB;AACD;AACF;AACF;AAVL;AAAA;AAAA;AAAA;AAAA;AAFF,mBADJ;AAiBD;KArCuBJ,G","sourcesContent":["import React, {useState, useRef} from 'react'\nimport ReactDOM from 'react-dom';\nimport \"../style.css\";\n\nexport default function Dot(props) {\n  var boxColor;\n\n  function tempPos(id){    \n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    return position = part1 + part2;\n  }\n\n  return(\n      <>\n        {/* {console.log(\"turn: \" + props.turn)} */}\n        <div className={props.gridSize==4?props.elementName:\"big-grid-\"+props.elementName} id={props.elementId} \n            style={props.elementId.charAt(0)===\"b\"?{backgroundColor: props.boxMap.get(props.elementId), opacity: \"0.5\"}:{opacity: \"1\"}}\n            onClick={(e)=>{\n              if(e.target.id.charAt(0)!==\"d\"&&e.target.id.charAt(0)!==\"b\"){\n                var tempPosition = tempPos(e.target.id);\n                if(props.map.get(tempPosition)==\"unclicked\"){\n                  e.target.style.backgroundColor = props.turn;\n                  props.func(e.target.id);\n                }\n              }\n            }}\n        ></div>\n      </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}