{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/GameOver.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../style.css\";\nimport { Route, Link, Routes } from \"react-router-dom\";\nimport Game from \"../Game.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameOver(props) {\n  _s();\n\n  var result;\n  const [gridSize, setGridSize] = useState(4);\n  const [hideWinner, setHideWinner] = useState(\"flex\");\n  const [showShare, setShowShare] = useState(\"none\");\n\n  (function calcResult() {\n    if (props.redScore > props.blueScore) {\n      result = \"red\";\n    } else if (props.redScore < props.blueScore) {\n      result = \"blue\";\n    } else {\n      result = \"draw\";\n    }\n  })();\n\n  function createEmoji() {\n    var i = 0;\n\n    if (result == \"draw\") {\n      var message = \"It's a draw\\n\\n\";\n    } else if (result == \"red\") {\n      message = \"ðŸ‘‘ Red\\n\\n\";\n    } else {\n      message = \"ðŸ‘‘ Blue\\n\\n\";\n    }\n\n    for (const [key, value] of props.boxMap.entries()) {\n      if (props.gridSize == 4) {\n        if (i == 4) {\n          message += \"\\n\";\n          i = 0;\n        }\n      } else {\n        if (i == 8) {\n          message += \"\\n\";\n          i = 0;\n        }\n      }\n\n      if (value == \"#c5183b\") {\n        message += \"ðŸŸ¥\";\n      } else {\n        message += \"ðŸŸ¦\";\n      }\n\n      i++;\n    }\n\n    console.log(message);\n    navigator.clipboard.writeText(message);\n    window.alert(\"Result shared to clipboard!\");\n  }\n\n  function resultCopied() {\n    toast(\"Result copied to clipboard\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-outer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-container\",\n          id: result + \"-winner-container\",\n          onMouseEnter: () => {\n            setHideWinner(\"none\");\n            setShowShare(\"flex\");\n          },\n          onMouseLeave: () => {\n            setHideWinner(\"flex\");\n            setShowShare(\"none\");\n          },\n          onClick: () => {\n            resultCopied();\n            createEmoji();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-text-container\",\n            style: {\n              display: hideWinner\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"winner-text\",\n              children: result == \"draw\" ? \"It's a draw\" : result + \" wins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"share-container\",\n            style: {\n              display: showShare\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/game\",\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"grid-button\",\n          id: props.gridSize == 4 ? \"four-button\" : \"eight-button\" // onClick={()=>{window.location.reload(false)}}\n          ,\n          children: \"Go Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/game\",\n        element: /*#__PURE__*/_jsxDEV(Game, {\n          gridSize: props.gridSize,\n          vsComp: props.vsComp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(GameOver, \"s59O67/Oq5lDHsLy3dCXZqxeUo8=\");\n\n_c = GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/GameOver.js"],"names":["React","useState","Route","Link","Routes","Game","ToastContainer","toast","GameOver","props","result","gridSize","setGridSize","hideWinner","setHideWinner","showShare","setShowShare","calcResult","redScore","blueScore","createEmoji","i","message","key","value","boxMap","entries","console","log","navigator","clipboard","writeText","window","alert","resultCopied","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","display","textDecoration","vsComp"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport \"../style.css\"\nimport {Route, Link, Routes} from \"react-router-dom\";\nimport Game from \"../Game.js\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function GameOver(props) {\n    var result;\n    const [gridSize, setGridSize] = useState(4);\n    const [hideWinner, setHideWinner] = useState(\"flex\");\n    const [showShare, setShowShare] = useState(\"none\");\n    \n    (function calcResult(){\n        if(props.redScore>props.blueScore){\n            result = \"red\";\n        }\n        else if(props.redScore<props.blueScore){\n            result = \"blue\";\n        }\n        else{\n            result = \"draw\";\n        }\n    })();\n    \n    function createEmoji(){\n        var i=0;\n        if(result == \"draw\"){\n            var message = \"It's a draw\\n\\n\";\n        }\n        else if(result==\"red\"){\n            message = \"ðŸ‘‘ Red\\n\\n\";\n        }\n        else{\n            message = \"ðŸ‘‘ Blue\\n\\n\";\n        }\n        for (const [key, value] of props.boxMap.entries()) {\n            if(props.gridSize==4){\n                if(i==4){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            else{\n                if(i==8){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            if(value==\"#c5183b\"){\n                message+=\"ðŸŸ¥\";\n            }\n            else{\n                message+=\"ðŸŸ¦\";\n            }\n            i++;\n        }   \n        console.log(message);\n        navigator.clipboard.writeText(message);\n        window.alert(\"Result shared to clipboard!\");\n    }\n\n    function resultCopied (){\n        toast(\"Result copied to clipboard\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });  \n    } \n\n    return (\n    <>\n        <Routes>\n            <div className=\"logo-container\"></div>\n            <div className=\"winner-outer-container\">\n                <div \n                    className=\"winner-container\" \n                    id={result+\"-winner-container\"} \n                    onMouseEnter={()=>{setHideWinner(\"none\"); setShowShare(\"flex\")}} \n                    onMouseLeave={()=>{setHideWinner(\"flex\"); setShowShare(\"none\")}}\n                    onClick={()=>{\n                        resultCopied();\n                        createEmoji();\n                    }}\n                >\n                        <div \n                            className=\"winner-text-container\" \n                            style={{display: hideWinner}}\n                        >\n                                <h2 \n                                    className=\"winner-text\">\n                                        {result==\"draw\"?\"It's a draw\":result+\" wins\"}\n                                </h2>\n                        </div>\n                        <div \n                            className=\"share-container\" \n                            style={{display: showShare}} \n                        >\n                    </div>\n                </div>\n            </div>\n            <Link to={\"/game\"} style={{textDecoration: \"none\"}}>\n                <button \n                    className=\"grid-button\" \n                    id={props.gridSize==4?\"four-button\":\"eight-button\"} \n                    // onClick={()=>{window.location.reload(false)}}\n                >\n                    Go Again\n                </button>\n            </Link>\n            <ToastContainer/>\n            <Route exact path={\"/game\"} element={<Game gridSize={props.gridSize} vsComp={props.vsComp}/>}/>\n        </Routes>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}