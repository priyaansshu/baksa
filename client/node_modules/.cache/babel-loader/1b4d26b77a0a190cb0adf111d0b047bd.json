{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Container.js\";\nimport React from 'react';\nimport Dot from \"./Dot\";\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container(props) {\n  var grid = [];\n  var dotCount = 1,\n      horizontalCount = 1,\n      verticalCount = 1;\n  let i;\n  let rowCount = Math.ceil(props.row / 2)(function createBoard() {\n    if (props.row % 2 == 0) {\n      for (i = 0; i < 9; ++i) {\n        grid.push( /*#__PURE__*/_jsxDEV(Dot, {\n          elementName: i % 2 == 0 ? \"dot\" : \"horizontal-bar\",\n          elementId: i % 2 == 0 ? \"dot-\" + rowCount + \"-\" + dotCount : \"horizontal-bar-\" + rowCount + \"-\" + horizontalCount\n        }, i % 2 == 0 ? dotCount++ : horizontalCount++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 27\n        }, this));\n      }\n    } else {\n      for (i = 0; i < 5; ++i) {\n        grid.push( /*#__PURE__*/_jsxDEV(Dot, {\n          elementName: \"vertical-bar\",\n          elementId: \"vertical-bar-\" + rowCount + \"-\" + verticalCount\n        }, verticalCount++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 27\n        }, this));\n      }\n    }\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.containerName,\n    id: props.containerId,\n    children: grid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Container.js"],"names":["React","Dot","Container","props","grid","dotCount","horizontalCount","verticalCount","i","rowCount","Math","ceil","row","createBoard","push","containerName","containerId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,CAAf;AAAA,MAAkBC,eAAe,GAAG,CAApC;AAAA,MAAuCC,aAAa,GAAG,CAAvD;AACA,MAAIC,CAAJ;AACA,MAAIC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUR,KAAK,CAACS,GAAN,GAAU,CAApB,EACd,SAASC,WAAT,GAAsB;AACnB,QAAGV,KAAK,CAACS,GAAN,GAAU,CAAV,IAAa,CAAhB,EAAkB;AACd,WAAIJ,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,CAAX,EAAc,EAAEA,CAAhB,EAAkB;AACdJ,QAAAA,IAAI,CAACU,IAAL,eAAU,QAAC,GAAD;AAEM,UAAA,WAAW,EAAEN,CAAC,GAAC,CAAF,IAAK,CAAL,GAAO,KAAP,GAAa,gBAFhC;AAGM,UAAA,SAAS,EAAEA,CAAC,GAAC,CAAF,IAAK,CAAL,GAAO,SAAOC,QAAP,GAAgB,GAAhB,GAAoBJ,QAA3B,GAAoC,oBAAkBI,QAAlB,GAA2B,GAA3B,GAA+BH;AAHpF,WACWE,CAAC,GAAC,CAAF,IAAK,CAAL,GAAOH,QAAQ,EAAf,GAAkBC,eAAe,EAD5C;AAAA;AAAA;AAAA;AAAA,gBAAV;AAKH;AACJ,KARD,MASI;AACA,WAAIE,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,CAAX,EAAc,EAAEA,CAAhB,EAAkB;AACdJ,QAAAA,IAAI,CAACU,IAAL,eAAU,QAAC,GAAD;AAEM,UAAA,WAAW,EAAC,cAFlB;AAGM,UAAA,SAAS,EAAE,kBAAgBL,QAAhB,GAAyB,GAAzB,GAA6BF;AAH9C,WACWA,aAAa,EADxB;AAAA;AAAA;AAAA;AAAA,gBAAV;AAKH;AACJ;AACJ,GApBc,GAAf;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAEJ,KAAK,CAACY,aAAtB;AAAqC,IAAA,EAAE,EAAEZ,KAAK,CAACa,WAA/C;AAAA,cAA6DZ;AAA7D;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;KA7BuBF,S","sourcesContent":["import React from 'react'\nimport Dot from \"./Dot\";\nimport \"../style.css\";\n\nexport default function Container(props) {\n    var grid = [];\n    var dotCount = 1, horizontalCount = 1, verticalCount = 1;\n    let i;\n    let rowCount = Math.ceil(props.row/2)\n    (function createBoard(){\n        if(props.row%2==0){\n            for(i=0; i<9; ++i){\n                grid.push(<Dot \n                                key={i%2==0?dotCount++:horizontalCount++} \n                                elementName={i%2==0?\"dot\":\"horizontal-bar\"}\n                                elementId={i%2==0?\"dot-\"+rowCount+\"-\"+dotCount:\"horizontal-bar-\"+rowCount+\"-\"+horizontalCount}\n                            />)\n            }   \n        }\n        else{\n            for(i=0; i<5; ++i){\n                grid.push(<Dot\n                                key={verticalCount++}\n                                elementName=\"vertical-bar\"\n                                elementId={\"vertical-bar-\"+rowCount+\"-\"+verticalCount}\n                            />)\n            }\n        }\n    })()\n    \n    return (\n        <div className={props.containerName} id={props.containerId}>{grid}</div>\n    )\n}"]},"metadata":{},"sourceType":"module"}