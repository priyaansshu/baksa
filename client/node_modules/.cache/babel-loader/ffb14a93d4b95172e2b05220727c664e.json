{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport react, { useState, useEffect, useRef } from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport GameOver from './Components/GameOver';\nimport Header from './Components/Header';\nimport { io } from \"socket.io-client\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { css } from \"glamor\";\nimport Chat from './Components/Chat';\nimport { useNavigate } from 'react-router-dom';\nimport { useBeforeunload } from 'react-beforeunload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('https://baksa19.herokuapp.com/', {\n  transports: ['websocket']\n});\nexport default function Game(props) {\n  _s();\n\n  var i, j;\n  var tempBoxCount = 0;\n  var compTempPos;\n  var compBoxFlag = false;\n  var comp2line = false;\n  const [elMap, setMap] = useState(new Map());\n  const [boxMap, setBoxMap] = useState(new Map());\n  const [mapFlag, setMapFlag] = useState(true); //used to make sure the map is initialised only once\n\n  const [boxFlag, setBoxFlag] = useState(true); //used to make sure the box map is initialised only once\n\n  var red = \"#c5183b\";\n  var blue = \"#3b919b\";\n  const assignedColor = props.playerRole == 1 ? red : blue;\n  const [turn, setTurn] = useState(red);\n  const [redScore, setRedScore] = useState(0);\n  const [blueScore, setBlueScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  var position;\n  const [tempId, setTempId] = useState(\"\");\n  const [tempColor, setTempColor] = useState(\"\");\n  const [finalRoomId, setFinalRoomId] = useState(\"\");\n  const [messageArr, setMessageArr] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [lastSeen, setLastSeen] = useState(0);\n  const chatRef = useRef();\n  const gridRef = useRef();\n  const chatButtonRef = useRef();\n  const [intervalId, setIntervalId] = useState();\n  const [gameLeaveWinner, setGameLeaveWinner] = useState(\"none\");\n  const [playerLeft, setPlayerLeft] = useState(false);\n  const [locationKeys, setLocationKeys] = useState([]);\n  const history = useNavigate();\n  const [movesArr, setMovesArr] = useState([]);\n  const [showLastMove, setShowLastMove] = useState(false);\n  var t; // variable for temporarily handling id\n\n  var tempTurn; // variable for temporarily handling turn\n\n  var tempBoxColor = \"\";\n  useEffect(() => {\n    var curUrl = JSON.stringify(window.location.href);\n\n    if (curUrl.substring(curUrl.length - 8, curUrl.length - 1) == \"offline\") {\n      props.setVsComp(true);\n    }\n  }, []);\n  useEffect(() => {\n    var tempRoomId = props.roomId + \"1\";\n    socket.emit(\"rejoin\", {\n      roomId: tempRoomId\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"final-room\", _ref => {\n      let {\n        roomId\n      } = _ref;\n      // console.log(roomId);\n      setFinalRoomId(roomId);\n    });\n  }, [socket]);\n\n  function updateMapWithServer() {\n    // console.log(\"received\");\n    // socket.emit(\"test\", {roomId: finalRoomId, socketId: props.socketId});\n    socket.emit(\"update\", {\n      turn: tempTurn,\n      roomId: finalRoomId,\n      socketId: props.socketId,\n      position: position,\n      tempId: t,\n      tempBoxColor: tempBoxColor\n    });\n  }\n\n  useEffect(() => {\n    // console.log(socket);\n    socket.on(\"updated\", data => {\n      position = data.position;\n      tempBoxColor = data.tempBoxColor;\n      var tempMovesArr = [...movesArr];\n      tempMovesArr.push(data.tempId);\n      setMovesArr(tempMovesArr);\n      updateLocalVariablesWithServerValues(data.tempId, data.turn);\n      elementCheckUtilityFunction(position, data.tempId);\n    });\n  }, [socket]);\n\n  function updateLocalVariablesWithServerValues(tempId, tempColor) {\n    setTempId(tempId);\n    setTempColor(tempColor);\n  }\n\n  (function initMap() {\n    if (mapFlag) {\n      var tempSize = props.gridSize == 4 ? 65 : 225;\n\n      for (i = 0; i < tempSize; ++i) {\n        // for(i=0; i<props.gridSize==4?65:225; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n\n      setMapFlag(false);\n    }\n  })();\n\n  (function initBoxMap() {\n    if (boxFlag) {\n      for (i = 1; i <= props.gridSize; ++i) {\n        // for(i=1; i<=4; ++i){\n        for (j = 1; j <= props.gridSize; ++j) // for(j=1; j<=4; ++j)\n        boxMap.set(\"b-\" + i + \"-\" + j, \"transparent\");\n      }\n\n      setBoxFlag(false);\n    }\n  })();\n\n  function updateMap(position) {\n    if (elMap.get(position) !== \"clicked\") {\n      setMap(elMap.set(position, \"clicked\")); // console.log(elMap);\n    }\n  }\n\n  function elementCheckUtilityFunction(position, id) {\n    // console.log(\"here\");\n    updateMap(position);\n    setTurnFunc();\n\n    if (id.charAt(0) == \"h\") {\n      checkVerticalBoxes(id);\n    } else {\n      checkHorizontalBoxes(id);\n    }\n  }\n\n  function elementCheck(id) {\n    if (yourTurnToastId.current != null) {\n      toast.dismiss(yourTurnToastId.current);\n    }\n\n    if (props.vsComp) {\n      var tempMovesArr = [...movesArr];\n      tempMovesArr.push(id);\n      setMovesArr(tempMovesArr);\n    }\n\n    console.log(elMap);\n    t = id;\n    tempBoxColor = \"\";\n    position = calcPosition(id);\n    console.log(position);\n    elementCheckUtilityFunction(position, id);\n    tempTurn = turn;\n    if (!props.vsComp) updateMapWithServer();\n  }\n\n  function calcPosition(id) {\n    var part1 = 0,\n        part2 = 0,\n        position = 0;\n\n    if (id.charAt(0) == \"d\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 2;\n    } else if (id.charAt(0) == \"h\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 1;\n    } else {\n      part1 = 14 * parseInt(id.charAt(2)) - 5;\n      part2 = parseInt(id.charAt(4));\n    }\n\n    position = part1 + part2; // console.log(position);\n\n    return position;\n  }\n\n  function setTurnFunc() {\n    setTurn(turn => turn === red ? blue : red); // console.log(\"In the setTurn function: \"+turn);\n  }\n\n  function stayTurn(boxColor) {\n    setTurn(boxColor);\n  }\n\n  function checkVerticalBoxes(id) {\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)),\n        m = parseInt(id.charAt(4));\n    id1 = \"h-\" + (n - 1) + \"-\" + m;\n    id2 = \"h-\" + (n + 1) + \"-\" + m;\n    id3 = \"v-\" + (n - 1) + \"-\" + m;\n    id4 = \"v-\" + (n - 1) + \"-\" + (m + 1);\n    id5 = \"v-\" + n + \"-\" + m;\n    id6 = \"v-\" + n + \"-\" + (m + 1);\n    pos1 = calcPosition(id1);\n    pos2 = calcPosition(id2);\n    pos3 = calcPosition(id3);\n    pos4 = calcPosition(id4);\n    pos5 = calcPosition(id5);\n    pos6 = calcPosition(id6);\n\n    if (tempBoxColor == \"\") {\n      var boxColor = turn;\n    } else {\n      var boxColor = tempBoxColor;\n    }\n\n    if (elMap.get(pos1) == \"clicked\" && elMap.get(pos2) == \"clicked\" && elMap.get(pos3) == \"clicked\" && elMap.get(pos4) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"upper and lower boxes filled\");\n      setBoxMap(boxMap.set(\"b-\" + (n - 1) + \"-\" + m, boxColor));\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + (n - 1) + \"-\" + m);\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } else if (elMap.get(pos1) == \"clicked\" && elMap.get(pos3) == \"clicked\" && elMap.get(pos4) == \"clicked\") {\n      console.log(\"upper box filled\");\n      setBoxMap(boxMap.set(\"b-\" + (n - 1) + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + (n - 1) + \"-\" + m);\n      updateTotal();\n    } else if (elMap.get(pos2) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"lower box filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } // console.log(boxMap);\n\n\n    tempBoxColor = boxColor;\n  }\n\n  function checkHorizontalBoxes(id) {\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)),\n        m = parseInt(id.charAt(4));\n    id1 = \"h-\" + n + \"-\" + (m - 1);\n    id2 = \"v-\" + n + \"-\" + (m - 1);\n    id3 = \"h-\" + (n + 1) + \"-\" + (m - 1);\n    id4 = \"h-\" + n + \"-\" + m;\n    id5 = \"v-\" + n + \"-\" + (m + 1);\n    id6 = \"h-\" + (n + 1) + \"-\" + m;\n    pos1 = calcPosition(id1);\n    pos2 = calcPosition(id2);\n    pos3 = calcPosition(id3);\n    pos4 = calcPosition(id4);\n    pos5 = calcPosition(id5);\n    pos6 = calcPosition(id6);\n\n    if (tempBoxColor == \"\") {\n      var boxColor = turn;\n    } else {\n      var boxColor = tempBoxColor;\n    }\n\n    if (elMap.get(pos1) == \"clicked\" && elMap.get(pos2) == \"clicked\" && elMap.get(pos3) == \"clicked\" && elMap.get(pos4) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"left and right boxes filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + (m - 1), boxColor));\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + (m - 1));\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } else if (elMap.get(pos1) == \"clicked\" && elMap.get(pos2) == \"clicked\" && elMap.get(pos3) == \"clicked\") {\n      console.log(\"left box filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + (m - 1), boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + (m - 1));\n      updateTotal();\n    } else if (elMap.get(pos4) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"right box filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } // console.log(boxMap);\n\n\n    tempBoxColor = boxColor;\n  }\n\n  function updateScore(tempBoxId) {\n    if (boxMap.get(tempBoxId) == red) {\n      setRedScore(redScore => redScore + 1);\n    } else if (boxMap.get(tempBoxId) == blue) {\n      setBlueScore(blueScore => blueScore + 1);\n    }\n  }\n\n  function updateTotal() {\n    tempBoxCount = 0;\n\n    for (const [key, value] of boxMap.entries()) {\n      if (value != \"transparent\") {\n        // console.log(key+\": \"+value);\n        tempBoxCount++;\n      }\n    }\n\n    console.log(\"tempBoxCount: \" + tempBoxCount);\n\n    if (props.gridSize == 4) {\n      if (tempBoxCount == 1) {\n        setGameOver(true);\n        props.setTempGameOverVariable(true);\n      }\n    } else if (props.gridSize == 8) {\n      if (tempBoxCount == 64) {\n        setGameOver(true);\n        props.setTempGameOverVariable(true);\n      }\n    } // console.log(\"totalScore: \"+(redScore+blueScore));\n    // if(props.gridSize == 4 && redScore+blueScore == 15){\n    //   setGameOver(true);\n    // }\n    // else if(props.gridSize == 8 && redScore+blueScore == 63){\n    //   setGameOver(true);\n    // }\n\n  } // function compCheckVerticalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   var boxColor = turn==blue?blue:red;\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n  // function compCheckHorizontalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   var boxColor = turn==blue?blue:red;\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n  // function compCheck1lineHorizontal(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n  // function compCheck1lineVertical(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos2)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n  // function compFunc(elRef){\n  //   console.log(\"computer's turn\");\n  //   console.log(elMap);\n  //   compBoxFlag = false;\n  //   var comp1line = false;\n  //   var comp0line = false;\n  //   if(compBoxFlag == false){\n  //     // check box completion\n  //     console.log(\"check box completion\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(compBoxFlag == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             compCheckVerticalBoxes(compTempId1, elRef);\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             compCheckHorizontalBoxes(compTempId2, elRef);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n  //   if(compBoxFlag == false && comp1line == false && comp0line == false){\n  //     // check 0 line clicked\n  //     console.log(\"check 0 line clicked\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(comp0line == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId1);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId2);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //         }  \n  //       }\n  //     }\n  //   }\n  // }\n\n\n  const playerColorToastId = useRef(null);\n  var playerColorToastFlag = true;\n  useEffect(() => {\n    var curUrl = JSON.stringify(window.location.href);\n    var tempVsComp;\n\n    if (curUrl.substring(curUrl.length - 8, curUrl.length - 1) == \"offline\") {\n      tempVsComp = true;\n    }\n\n    console.log(playerColorToastFlag);\n\n    if (!tempVsComp && !props.tempGameOverVariable && playerColorToastFlag) {\n      var playerColor = assignedColor == \"#c5183b\" ? \"Red\" : \"Blue\";\n      playerColorToastId.current = toast(\"You are \" + playerColor, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n      playerColorToastFlag = false;\n    }\n  }, []);\n\n  function notTurnFunc() {\n    toast(\"It's not your turn\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n  }\n\n  function sendMessage(tempMessage, playerRole) {\n    if (tempMessage == \"\") {\n      return;\n    }\n\n    socket.emit(\"send-message\", {\n      roomId: finalRoomId,\n      tempMessage: tempMessage,\n      playerRole: playerRole\n    });\n  }\n\n  socket.off(\"receive-message\");\n  socket.on(\"receive-message\", (tempMessage, playerRole) => {\n    console.log(\"message received\");\n    const tempMessageArr = [...messageArr];\n    tempMessageArr.push({\n      sender: playerRole,\n      message: tempMessage\n    });\n    console.log(tempMessageArr);\n    setMessageArr(tempMessageArr);\n  });\n  useEffect(() => {\n    if (showChat) {\n      setLastSeen(messageArr.length);\n      setUnreadCount(0);\n    }\n\n    var tempUnreadCount = messageArr.length - lastSeen;\n    setUnreadCount(tempUnreadCount);\n  }, [showChat]);\n  useEffect(() => {\n    if (showChat) {\n      setUnreadCount(0);\n      setLastSeen(messageArr.length);\n    } else {\n      var tempUnreadCount = messageArr.length - lastSeen;\n      setUnreadCount(tempUnreadCount);\n    }\n  }, [messageArr.length]);\n  useEffect(() => {\n    if (showChat) {\n      function handleClickOutside(event) {\n        if (chatRef.current && !chatRef.current.contains(event.target) && gridRef.current && !gridRef.current.contains(event.target) && chatButtonRef.current && !chatButtonRef.current.contains(event.target)) {\n          setShowChat(false);\n        }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [showChat]); // socket.off(\"game-left\");\n\n  useEffect(() => {\n    if (!props.vsComp) {\n      !props.tempGameOverVariable && socket.on(\"game-left\", _ref2 => {\n        let {\n          winner\n        } = _ref2;\n        console.log(\"The other player left the game\");\n        setPlayerLeft(true);\n        setGameOver(true);\n        setGameLeaveWinner(winner);\n      });\n    }\n  }, [socket]);\n  useEffect(() => {\n    console.log(\"playerLeft: \" + playerLeft); // if(playerLeft){\n    //   clearInterval(intervalId);\n    // }\n  }, [playerLeft]);\n  useEffect(() => {\n    if (!props.vsComp && !playerLeft) {\n      var tempRoomId = finalRoomId;\n\n      if (!playerLeft) {\n        const tempId = setInterval(() => {\n          if (intervalId === null) {\n            setIntervalId(tempId);\n          } // console.log(\"sending\")\n          // console.log(playerLeft)\n\n\n          socket.emit(\"game-leave-check\", {\n            playerRole: props.playerRole,\n            roomId: tempRoomId\n          });\n        }, 2000);\n      }\n    }\n  }, [finalRoomId, playerLeft]);\n  window.addEventListener('popstate', event => {\n    if (event.state) {\n      window.location.reload();\n    }\n  }, false);\n  useEffect(() => {\n    window.history.pushState({\n      name: \"browserBack\"\n    }, \"on browser back click\", window.location.href);\n    window.history.pushState({\n      name: \"browserBack\"\n    }, \"on browser back click\", window.location.href);\n  }, []);\n  useEffect(() => {\n    if (showLastMove) {\n      setTimeout(() => {\n        setShowLastMove(false);\n      });\n    }\n  }, [showLastMove]);\n  const yourTurnToastId = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      if (assignedColor == turn && !props.vsComp && !props.tempGameOverVariable) {\n        console.log(props.tempGameOverVariable);\n        yourTurnToastId.current = toast(\"It's your turn\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined\n        });\n      }\n    }, 5000);\n  }, [turn]);\n  useEffect(() => {\n    if (props.tempGameOverVariable) {\n      toast.dismiss();\n    }\n  }, [props.tempGameOverVariable]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [JSON.stringify(props.tempGameOverVariable), /*#__PURE__*/_jsxDEV(Header, {\n      gridSize: props.gridSize,\n      gameOver: gameOver,\n      fromMidGame: true,\n      vsComp: props.vsComp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-move-button\",\n      onClick: () => {\n        console.log(movesArr[movesArr.length - 1]);\n        setShowLastMove(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !gameOver ? \"show-grid\" : \"hide-grid\",\n        ref: gridRef,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          gridSize: props.gridSize,\n          func: elementCheck,\n          turn: turn,\n          map: elMap,\n          boxMap: boxMap,\n          vsComp: props.vsComp,\n          tempColor: tempColor,\n          tempId: tempId,\n          assignedColor: assignedColor,\n          notTurnFunc: notTurnFunc,\n          showLastMove: showLastMove,\n          setShowLastMove: setShowLastMove,\n          movesArr: movesArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !gameOver ? \"hide-game-over\" : \"show-game-over\",\n        children: /*#__PURE__*/_jsxDEV(GameOver, {\n          gameLeaveWinner: gameLeaveWinner,\n          redScore: redScore,\n          blueScore: blueScore,\n          gridSize: props.gridSize,\n          boxMap: boxMap,\n          vsComp: props.vsComp,\n          gameOver: gameOver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !gameOver ? \"score-container\" : \"hide-score-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"score\",\n          id: turn == red ? \"turn-score-red\" : \"score-red\",\n          children: [\"Red: \", redScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"score\",\n          id: turn == blue ? \"turn-score-blue\" : \"score-blue\",\n          children: [\"Blue: \", blueScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this), !props.vsComp && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: assignedColor == red ? \"chat-button-container-red\" : \"chat-button-container-blue\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatButtonRef,\n        className: \"chat-button\",\n        onClick: () => {\n          setShowChat(!showChat);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unread-count-container\",\n          style: {\n            visibility: unreadCount == 0 ? \"hidden\" : \"visible\"\n          },\n          children: unreadCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 21\n    }, this), !props.vsComp && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatRef,\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        sendMessage: sendMessage,\n        messageArr: messageArr,\n        chatColor: assignedColor,\n        roomId: finalRoomId,\n        playerRole: props.playerRole,\n        showChat: showChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"gGARaNk9QpW6/Nmi5pmWcCN35O0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/client/src/Game.js"],"names":["logo","react","useState","useEffect","useRef","Dot","Grid","GameOver","Header","io","ToastContainer","toast","css","Chat","useNavigate","useBeforeunload","socket","transports","Game","props","i","j","tempBoxCount","compTempPos","compBoxFlag","comp2line","elMap","setMap","Map","boxMap","setBoxMap","mapFlag","setMapFlag","boxFlag","setBoxFlag","red","blue","assignedColor","playerRole","turn","setTurn","redScore","setRedScore","blueScore","setBlueScore","gameOver","setGameOver","position","tempId","setTempId","tempColor","setTempColor","finalRoomId","setFinalRoomId","messageArr","setMessageArr","showChat","setShowChat","unreadCount","setUnreadCount","lastSeen","setLastSeen","chatRef","gridRef","chatButtonRef","intervalId","setIntervalId","gameLeaveWinner","setGameLeaveWinner","playerLeft","setPlayerLeft","locationKeys","setLocationKeys","history","movesArr","setMovesArr","showLastMove","setShowLastMove","t","tempTurn","tempBoxColor","curUrl","JSON","stringify","window","location","href","substring","length","setVsComp","tempRoomId","roomId","emit","on","updateMapWithServer","socketId","data","tempMovesArr","push","updateLocalVariablesWithServerValues","elementCheckUtilityFunction","initMap","tempSize","gridSize","set","initBoxMap","updateMap","get","id","setTurnFunc","charAt","checkVerticalBoxes","checkHorizontalBoxes","elementCheck","yourTurnToastId","current","dismiss","vsComp","console","log","calcPosition","part1","part2","parseInt","stayTurn","boxColor","id1","id2","id3","id4","id5","id6","pos1","pos2","pos3","pos4","pos5","pos6","n","m","updateScore","updateTotal","tempBoxId","key","value","entries","setTempGameOverVariable","playerColorToastId","playerColorToastFlag","tempVsComp","tempGameOverVariable","playerColor","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notTurnFunc","sendMessage","tempMessage","off","tempMessageArr","sender","message","tempUnreadCount","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","winner","setInterval","state","reload","pushState","name","setTimeout","visibility"],"mappings":"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AY,IAAI,EAAnB,EAAsB;AACpBwB,QAAAA,WAAW,CAAC,IAAD,CAAX;AACA3B,QAAAA,KAAK,CAAC+H,uBAAN,CAA8B,IAA9B;AACD;AACF,KApBmB,CAqBpB;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAvUiC,CAyUlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport react, {useState, useEffect, useRef} from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport GameOver from './Components/GameOver';\nimport Header from './Components/Header';\nimport {io} from \"socket.io-client\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { css } from \"glamor\";\nimport Chat from './Components/Chat';\nimport { useNavigate } from 'react-router-dom';\nimport { useBeforeunload } from 'react-beforeunload';\n\nconst socket = io('https://baksa19.herokuapp.com/', { transports : ['websocket'] });\n\nexport default function Game(props) {\n  var i, j;\n  var tempBoxCount = 0;\n  var compTempPos;\n  var compBoxFlag = false;\n  var comp2line = false;\n  const [elMap, setMap] = useState(new Map());\n  const [boxMap, setBoxMap] = useState(new Map());\n  \n  const [mapFlag, setMapFlag] = useState(true); //used to make sure the map is initialised only once\n  const [boxFlag, setBoxFlag] = useState(true); //used to make sure the box map is initialised only once\n  \n  var red=\"#c5183b\";\n  var blue=\"#3b919b\";\n  const assignedColor = props.playerRole==1?red:blue;\n\n  const [turn, setTurn] = useState(red);\n  const [redScore, setRedScore] = useState(0);\n  const [blueScore, setBlueScore] = useState(0);\n\n  const [gameOver, setGameOver] = useState(false);\n  var position;\n  const [tempId, setTempId] = useState(\"\");\n  const [tempColor, setTempColor] = useState(\"\");\n\n  const [finalRoomId, setFinalRoomId] = useState(\"\");\n  \n  const [messageArr, setMessageArr] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [lastSeen, setLastSeen] = useState(0);\n\n  const chatRef = useRef();\n  const gridRef = useRef();\n  const chatButtonRef = useRef();\n\n  const [intervalId, setIntervalId] = useState();\n  const [gameLeaveWinner, setGameLeaveWinner] = useState(\"none\");\n  const [playerLeft, setPlayerLeft] = useState(false);\n  const [ locationKeys, setLocationKeys ] = useState([])\n  const history = useNavigate()\n\n  const [movesArr, setMovesArr] = useState([]);\n  const [showLastMove, setShowLastMove] = useState(false);\n\n  var t; // variable for temporarily handling id\n  var tempTurn; // variable for temporarily handling turn\n  var tempBoxColor=\"\";\n\n\n  useEffect(()=>{\n    var curUrl = JSON.stringify(window.location.href);\n    if(curUrl.substring(curUrl.length-8, curUrl.length-1)==\"offline\"){\n      props.setVsComp(true);\n    }\n  }, [])\n\n  useEffect(()=>{\n    var tempRoomId = props.roomId+\"1\";\n    socket.emit(\"rejoin\", {roomId: tempRoomId});\n  }, [])\n\n  useEffect(()=>{\n    socket.on(\"final-room\", ({roomId})=>{\n      // console.log(roomId);\n      setFinalRoomId(roomId);\n    })\n  }, [socket]);\n\n  function updateMapWithServer(){\n    // console.log(\"received\");\n    // socket.emit(\"test\", {roomId: finalRoomId, socketId: props.socketId});\n    socket.emit(\"update\", {turn: tempTurn, roomId: finalRoomId, socketId: props.socketId, position: position, tempId: t, tempBoxColor: tempBoxColor});\n  }\n  \n  useEffect(()=>{\n    // console.log(socket);\n    socket.on(\"updated\", (data)=>{\n      position = data.position;\n      tempBoxColor = data.tempBoxColor;\n      \n      var tempMovesArr = [...movesArr];\n      tempMovesArr.push(data.tempId);\n      setMovesArr(tempMovesArr);\n\n      updateLocalVariablesWithServerValues(data.tempId, data.turn);\n      elementCheckUtilityFunction(position, data.tempId);\n    });\n  }, [socket]);\n\n  function updateLocalVariablesWithServerValues(tempId, tempColor){\n    setTempId(tempId);\n    setTempColor(tempColor);\n  }\n\n  (function initMap(){\n    if(mapFlag){\n      var tempSize = props.gridSize==4?65:225;\n      for(i=0; i<tempSize; ++i){\n      // for(i=0; i<props.gridSize==4?65:225; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n      setMapFlag(false);\n    }\n  })();\n\n  (function initBoxMap(){\n    if(boxFlag){\n      for(i=1; i<=props.gridSize; ++i){\n      // for(i=1; i<=4; ++i){\n        for(j=1; j<=props.gridSize; ++j)\n        // for(j=1; j<=4; ++j)\n          boxMap.set(\"b-\"+i+\"-\"+j, \"transparent\");\n      }\n      setBoxFlag(false);\n    }\n  })();\n\n  function updateMap(position){\n    if(elMap.get(position)!==\"clicked\"){\n      setMap(elMap.set(position, \"clicked\"));\n      // console.log(elMap);\n    }\n  }\n\n  function elementCheckUtilityFunction(position, id){\n    // console.log(\"here\");\n    updateMap(position);\n    setTurnFunc();\n    if(id.charAt(0) == \"h\"){\n      checkVerticalBoxes(id);\n    }\n    else{\n      checkHorizontalBoxes(id);\n    }\n  }\n\n  function elementCheck(id){\n    if(yourTurnToastId.current!=null){\n      toast.dismiss(yourTurnToastId.current);\n    }\n    if(props.vsComp){\n      var tempMovesArr = [...movesArr];\n      tempMovesArr.push(id);\n      setMovesArr(tempMovesArr);\n    }\n    console.log(elMap);\n    t=id;\n    tempBoxColor=\"\"\n    position = calcPosition(id);\n    console.log(position);\n    elementCheckUtilityFunction(position, id);\n    tempTurn = turn;\n    if(!props.vsComp)\n      updateMapWithServer();\n  }\n  \n  function calcPosition(id){\n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    position = part1 + part2;\n    // console.log(position);\n    return position;\n  }\n\n  function setTurnFunc(){\n    setTurn(turn=>turn===red?blue:red);\n    // console.log(\"In the setTurn function: \"+turn);\n  }\n\n  function stayTurn(boxColor){\n    setTurn(boxColor);\n  }\n\n  function checkVerticalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n-1)+\"-\"+m;\n    id2=\"h-\"+(n+1)+\"-\"+m;\n    id3=\"v-\"+(n-1)+\"-\"+m;\n    id4=\"v-\"+(n-1)+\"-\"+(m+1);\n    id5=\"v-\"+(n)+\"-\"+m;\n    id6=\"v-\"+(n)+\"-\"+(m+1);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n    \n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        console.log(\"upper and lower boxes filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n        console.log(\"upper box filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        console.log(\"lower box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n  \n  function checkHorizontalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n)+\"-\"+(m-1);\n    id2=\"v-\"+(n)+\"-\"+(m-1);\n    id3=\"h-\"+(n+1)+\"-\"+(m-1);\n    id4=\"h-\"+(n)+\"-\"+(m);\n    id5=\"v-\"+(n)+\"-\"+(m+1);\n    id6=\"h-\"+(n+1)+\"-\"+(m);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n\n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      console.log(\"left and right boxes filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n      console.log(\"left box filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateTotal();\n    }\n    else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      console.log(\"right box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n\n  function updateScore(tempBoxId){\n    if(boxMap.get(tempBoxId)==red){\n      setRedScore(redScore=>redScore+1);\n    }\n    else if(boxMap.get(tempBoxId)==blue){\n      setBlueScore(blueScore=>blueScore+1);\n    }\n  }\n\n  function updateTotal(){\n    tempBoxCount=0;\n    for (const [key, value] of boxMap.entries()) {\n      if(value!=\"transparent\"){\n        // console.log(key+\": \"+value);\n        tempBoxCount++;\n      }\n    }\n    console.log(\"tempBoxCount: \"+tempBoxCount);\n    if(props.gridSize == 4){\n      if(tempBoxCount == 1){\n        setGameOver(true);\n        props.setTempGameOverVariable(true);\n      }\n    }\n    else if(props.gridSize == 8){\n      if(tempBoxCount == 64){\n        setGameOver(true);\n        props.setTempGameOverVariable(true);\n      }\n    }    \n    // console.log(\"totalScore: \"+(redScore+blueScore));\n    // if(props.gridSize == 4 && redScore+blueScore == 15){\n    //   setGameOver(true);\n    // }\n    // else if(props.gridSize == 8 && redScore+blueScore == 63){\n    //   setGameOver(true);\n    // }\n  }\n  \n  // function compCheckVerticalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n    \n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheckHorizontalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheck1lineHorizontal(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compCheck1lineVertical(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos2)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compFunc(elRef){\n  //   console.log(\"computer's turn\");\n  //   console.log(elMap);\n  //   compBoxFlag = false;\n  //   var comp1line = false;\n  //   var comp0line = false;\n\n  //   if(compBoxFlag == false){\n  //     // check box completion\n  //     console.log(\"check box completion\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(compBoxFlag == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             compCheckVerticalBoxes(compTempId1, elRef);\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             compCheckHorizontalBoxes(compTempId2, elRef);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if(compBoxFlag == false && comp1line == false && comp0line == false){\n  //     // check 0 line clicked\n  //     console.log(\"check 0 line clicked\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(comp0line == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId1);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId2);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //         }  \n  //       }\n  //     }\n  //   }\n  // }\n  \n  const playerColorToastId = useRef(null);\n  var playerColorToastFlag = true;\n  useEffect(() => {\n    var curUrl = JSON.stringify(window.location.href);\n    var tempVsComp;\n    if(curUrl.substring(curUrl.length-8, curUrl.length-1)==\"offline\"){\n      tempVsComp = true;\n    }\n    console.log(playerColorToastFlag)\n    if(!tempVsComp && !props.tempGameOverVariable && playerColorToastFlag){\n      var playerColor = assignedColor==\"#c5183b\"?\"Red\":\"Blue\";\n      playerColorToastId.current = toast(\"You are \"+playerColor, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });  \n      playerColorToastFlag = false;\n    }\n  }, []);\n\n  function notTurnFunc(){\n    toast(\"It's not your turn\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined,\n    }); \n  }\n\n  function sendMessage(tempMessage, playerRole){\n    if(tempMessage==\"\"){\n        return;\n    }\n    socket.emit(\"send-message\", {roomId: finalRoomId, tempMessage: tempMessage, playerRole: playerRole});\n  }\n\n  socket.off(\"receive-message\");\n  socket.on(\"receive-message\", (tempMessage, playerRole)=>{\n      console.log(\"message received\");\n\n      const tempMessageArr = [...messageArr];\n      tempMessageArr.push({sender: playerRole, message: tempMessage});\n      console.log(tempMessageArr);\n      setMessageArr(tempMessageArr);\n    })\n\n    useEffect(()=>{\n      if(showChat){\n        setLastSeen(messageArr.length);\n        setUnreadCount(0);\n      }\n      var tempUnreadCount = messageArr.length-lastSeen;\n      setUnreadCount(tempUnreadCount);\n    }, [showChat])\n\n    useEffect(()=>{\n      if(showChat){\n        setUnreadCount(0);\n        setLastSeen(messageArr.length);\n      }\n      else{\n        var tempUnreadCount = messageArr.length-lastSeen;\n        setUnreadCount(tempUnreadCount);\n      }\n    }, [messageArr.length])\n\n    useEffect(() => {\n      if(showChat){\n        function handleClickOutside(event) {\n          if (chatRef.current && !chatRef.current.contains(event.target) && gridRef.current && !gridRef.current.contains(event.target) && chatButtonRef.current && !chatButtonRef.current.contains(event.target)) {\n            setShowChat(false);\n          }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }\n    }, [showChat]);\n\n    // socket.off(\"game-left\");\n    useEffect(()=>{\n      if(!props.vsComp){\n        !props.tempGameOverVariable && socket.on(\"game-left\", ({winner})=>{\n          console.log(\"The other player left the game\");\n          setPlayerLeft(true);\n          setGameOver(true);\n          setGameLeaveWinner(winner);\n        })\n      }\n    }, [socket])\n\n    useEffect(()=>{\n      console.log(\"playerLeft: \"+playerLeft);\n      // if(playerLeft){\n      //   clearInterval(intervalId);\n      // }\n    }, [playerLeft])\n\n    useEffect(()=>{\n      if(!props.vsComp && !playerLeft){\n        var tempRoomId = finalRoomId;\n        if(!playerLeft){\n          const tempId = setInterval(() => {\n            if(intervalId===null){\n              setIntervalId(tempId);\n            }\n            // console.log(\"sending\")\n            // console.log(playerLeft)\n            socket.emit(\"game-leave-check\", ({playerRole: props.playerRole, roomId: tempRoomId}))\n          }, 2000);\n        }\n      }\n    }, [finalRoomId, playerLeft])\n\n    window.addEventListener('popstate', (event) => {\n      if (event.state) {\n        window.location.reload();\n      }\n     }, false)\n\n    useEffect(()=>{\n      window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n      window.history.pushState({name: \"browserBack\"}, \"on browser back click\", window.location.href);\n    }, []);\n\n    useEffect(()=>{\n      if(showLastMove){\n        setTimeout(()=>{\n          setShowLastMove(false);\n        })\n      }\n    }, [showLastMove])\n\n    const yourTurnToastId = useRef(null);\n    useEffect(()=>{\n      setTimeout(()=>{\n        if(assignedColor == turn && !props.vsComp && !props.tempGameOverVariable){\n          console.log(props.tempGameOverVariable);\n          yourTurnToastId.current = toast(\"It's your turn\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n          }); \n        }\n      }, 5000)\n    }, [turn])\n\n    useEffect(()=>{\n      if(props.tempGameOverVariable){\n        toast.dismiss();\n      }\n    }, [props.tempGameOverVariable])\n\n  return (\n    <>\n      {JSON.stringify(props.tempGameOverVariable)}\n      <Header gridSize={props.gridSize} gameOver={gameOver} fromMidGame={true} vsComp={props.vsComp}/>\n      <div className=\"last-move-button\" onClick={()=>{\n        console.log(movesArr[movesArr.length-1])\n        setShowLastMove(true);\n      }}>\n      </div>\n      <div className=\"center-container\">\n        <div className={!gameOver?\"show-grid\":\"hide-grid\"} ref={gridRef}>\n          <Grid \n            gridSize={props.gridSize}\n            func={elementCheck}  \n            turn={turn} \n            map={elMap} \n            boxMap={boxMap} \n            vsComp={props.vsComp} \n            tempColor={tempColor}\n            tempId={tempId}\n            assignedColor={assignedColor}\n            notTurnFunc = {notTurnFunc}\n            showLastMove = {showLastMove}\n            setShowLastMove = {setShowLastMove}\n            movesArr = {movesArr}\n          />\n        </div>\n\n        <div className={!gameOver?\"hide-game-over\":\"show-game-over\"}>\n          <GameOver gameLeaveWinner={gameLeaveWinner} redScore={redScore} blueScore={blueScore} gridSize={props.gridSize} boxMap={boxMap} vsComp={props.vsComp} gameOver={gameOver}/>\n        </div>\n        {/* {console.log(turn)} */}\n        <div className={!gameOver?\"score-container\":\"hide-score-container\"}>\n          <h2 className=\"score\" id={turn==red?\"turn-score-red\":\"score-red\"}>Red: {redScore}</h2>\n          <h2 className=\"score\" id={turn==blue?\"turn-score-blue\":\"score-blue\"}>Blue: {blueScore}</h2>\n        </div>\n      </div>\n    {!props.vsComp&&<div className={assignedColor==red?\"chat-button-container-red\":\"chat-button-container-blue\"}>\n      <div ref={chatButtonRef} className=\"chat-button\" onClick={()=>{\n        setShowChat(!showChat);\n      }\n      }>\n        <div className=\"unread-count-container\" style={{visibility: unreadCount==0?\"hidden\":\"visible\"}}>\n          {unreadCount}\n        </div>\n      </div>\n    </div>}\n    {!props.vsComp&&\n      <div ref={chatRef}>\n        <Chat sendMessage={sendMessage} messageArr={messageArr} chatColor={assignedColor} roomId={finalRoomId} playerRole={props.playerRole} showChat={showChat}/>\n      </div>\n    }\n    <ToastContainer />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}