{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Room.js\";\nimport React, { useState } from 'react';\nimport \"./style.css\";\nimport { io } from \"socket.io-client\";\nimport Game from \"./Game\";\nimport Header from './Components/Header';\nimport randomstring from 'randomstring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nexport default function (props) {\n  const [roomId, setRoomId] = useState(\"\");\n  const [shared, setShared] = useState(false);\n  const [joined, setJoined] = useState(false);\n  const [roomFull, setRoomFull] = useState(false);\n  const [playerRole, setPlayerRole] = useState(); // playerRole=1 if he created the room, else 2 if he joined one\n\n  socket.on(\"start-game\", () => {\n    setJoined(true);\n  });\n  socket.on(\"room full\", () => {\n    setRoomFull(true);\n    console.log(roomFull);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      gridSize: props.gridSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), joined ? /*#__PURE__*/_jsxDEV(Game, {\n      gridSize: props.gridSize,\n      roomId: socket.id,\n      playerRole: playerRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this) : !shared ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-room\",\n          onClick: () => {\n            setShared(true);\n\n            var roomCode = require(\"randomstring\");\n\n            roomCode.generate({\n              length: 6,\n              charset: 'alphabetic',\n              capitalization: 'uppercase'\n            });\n            console.log(roomCode);\n            socket.emit(\"room-created\", socket.id);\n            setPlayerRole(1);\n            navigator.clipboard.writeText(socket.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-room-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"room-input\",\n          type: \"text\",\n          onChange: e => {\n            setRoomId(e.target.value);\n          },\n          onKeyPress: e => {\n            if (e.key === \"Enter\") {\n              setPlayerRole(2);\n              socket.emit(\"joined-room\", roomId);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), roomId !== \"\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"join-room\",\n          onClick: () => {\n            setPlayerRole(2);\n            socket.emit(\"joined-room\", roomId);\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this) : console.log(\"Enter Room Id\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), !roomFull ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-id-statement\",\n        children: \"Share Room ID with a friend or enter a Room ID to start the game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-full-statement\",\n        children: \"Room is already full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-main-container waiting-room-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-icon-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-id-statement\",\n        children: \"Waiting for the other player to join the room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Room.js"],"names":["React","useState","io","Game","Header","randomstring","socket","props","roomId","setRoomId","shared","setShared","joined","setJoined","roomFull","setRoomFull","playerRole","setPlayerRole","on","console","log","gridSize","id","roomCode","require","generate","length","charset","capitalization","emit","navigator","clipboard","writeText","e","target","value","key"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport \"./style.css\"\nimport {io} from \"socket.io-client\"\nimport Game from \"./Game\"\nimport Header from './Components/Header';\nimport randomstring from 'randomstring';\n\nconst socket = io('http://localhost:4000');\n\nexport default function (props) {\n    const [roomId, setRoomId] = useState(\"\");\n    const [shared, setShared] = useState(false);\n    const [joined, setJoined] = useState(false)\n    const [roomFull, setRoomFull] = useState(false);\n    const [playerRole, setPlayerRole] = useState(); // playerRole=1 if he created the room, else 2 if he joined one\n    \n    socket.on(\"start-game\", ()=>{\n        setJoined(true);\n    })\n    socket.on(\"room full\", ()=>{\n        setRoomFull(true);\n        console.log(roomFull);\n    })\n\n        return (\n            <>\n            <Header gridSize={props.gridSize}/>\n            {joined?\n            <Game gridSize={props.gridSize} roomId={socket.id} playerRole={playerRole}/>:\n            !shared?<div className=\"rooms-main-container\">\n            <div className=\"create-room-container\">\n                <button \n                    className=\"create-room\" \n                    onClick={()=>{\n                        setShared(true);\n                        var roomCode = require(\"randomstring\");\n                        roomCode.generate({\n                            length: 6,\n                            charset: 'alphabetic',\n                            capitalization: 'uppercase'\n                        })\n                        console.log(roomCode);\n                        socket.emit(\"room-created\", socket.id);\n                        setPlayerRole(1)\n                        navigator.clipboard.writeText(socket.id)\n                        }\n                    }>    \n                </button>\n            </div>\n            <div className=\"join-room-container\">\n                <input \n                    className=\"room-input\" \n                    type=\"text\" \n                    onChange={(e)=>{\n                        setRoomId(e.target.value);\n                    }} \n                    onKeyPress={(e)=>{\n                        if(e.key===\"Enter\"){\n                            setPlayerRole(2)\n                            socket.emit(\"joined-room\", roomId);\n                        }\n                    }}\n                />\n                {roomId!==\"\"?\n                    <button className=\"join-room\"   \n                        onClick={()=>{\n                            setPlayerRole(2);\n                            socket.emit(\"joined-room\", roomId)\n                        }}>\n                    Join\n                    </button>\n                :console.log(\"Enter Room Id\")\n                }\n            </div>\n            {!roomFull?\n                <p className=\"room-id-statement\">Share Room ID with a friend or enter a Room ID to start the game</p>\n            :\n                <p className=\"room-full-statement\">Room is already full</p>\n            }\n        </div>:\n        <div className=\"rooms-main-container waiting-room-container\">\n            <div className=\"waiting-icon-container\">\n\n            </div>\n            <p className=\"room-id-statement\">Waiting for the other player to join the room</p>\n        </div>}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}