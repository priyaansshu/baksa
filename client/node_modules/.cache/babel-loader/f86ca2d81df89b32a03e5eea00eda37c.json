{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport react, { useState } from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var i;\n  const [elMap, setMap] = useState(new Map());\n  const [turn, setTurn] = useState(\"#c5183b\");\n  const [flag, setFlag] = useState(true);\n\n  (function initMap() {\n    if (flag) {\n      for (i = 0; i < 65; ++i) {\n        elMap.set(i, \"unclicked\");\n      }\n\n      setFlag(false);\n    }\n  })();\n\n  function elementCheck(id) {\n    console.log(\"Clicked element is \" + id);\n    var position = calcPosition(id);\n    setMap(elMap.set(position, \"clicked\"));\n    console.log(position);\n    colorBars();\n    checkVerticalBoxes(position);\n    checkHorizontalBoxes(position);\n  }\n\n  function calcPosition(id) {\n    var part1 = 0,\n        part2 = 0,\n        position = 0;\n\n    if (id.charAt(0) == \"d\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 2;\n    } else if (id.charAt(0) == \"h\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 1;\n    } else {\n      part1 = 14 * parseInt(id.charAt(2)) - 5;\n      part2 = parseInt(id.charAt(4));\n    }\n\n    position = part1 + part2;\n    return position;\n  }\n\n  function colorBars() {\n    setTurn(turn == \"#c5183b\" ? \"#3b919b\" : \"#c5183b\");\n  }\n\n  function checkVerticalBoxes(position) {\n    // checking for vertical boxes\n    if (elMap.get(position - 14) == \"clicked\" && elMap.get(position - 6) == \"clicked\" && elMap.get(position - 7) == \"clicked\") {\n      console.log(\"upper box filled\");\n    } else if (elMap.get(position + 14) == \"clicked\" && elMap.get(position + 7) == \"clicked\" && elMap.get(position + 8) == \"clicked\") {\n      console.log(\"lower box filled\");\n    } else if (elMap.get(position - 14) == \"clicked\" && elMap.get(position - 6) == \"clicked\" && elMap.get(position - 7) == \"clicked\" && elMap.get(position + 14) == \"clicked\" && elMap.get(position + 7) == \"clicked\" && elMap.get(position + 8) == \"clicked\") {\n      console.log(\"upper and lower boxes filled\");\n    }\n  }\n\n  function checkHorizontalBoxes(position) {\n    // checking for horizontal boxes\n    if (elMap.get(position - 9) == \"clicked\" && elMap.get(position + 5) == \"clicked\" && elMap.get(position - 1) == \"clicked\") {\n      console.log(\"left box filled\");\n    } else if (elMap.get(position + 1) == \"clicked\" && elMap.get(position - 7) == \"clicked\" && elMap.get(position + 7) == \"clicked\") {\n      console.log(\"right box filled\");\n    } else if (elMap.get(position - 9) == \"clicked\" && elMap.get(position - 7) == \"clicked\" && elMap.get(position - 1) == \"clicked\" && elMap.get(position + 1) == \"clicked\" && elMap.get(position + 5) == \"clicked\" && elMap.get(position + 7) == \"clicked\") {\n      console.log(\"left and right boxes filled\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Dot Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        func: elementCheck,\n        turn: turn,\n        map: elMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"ip7uR6K0EA0GRkYtteGjJbgodv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/App.js"],"names":["logo","react","useState","Dot","Grid","App","i","elMap","setMap","Map","turn","setTurn","flag","setFlag","initMap","set","elementCheck","id","console","log","position","calcPosition","colorBars","checkVerticalBoxes","checkHorizontalBoxes","part1","part2","charAt","parseInt","get"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,CAAJ;AACA,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBN,QAAQ,CAAC,IAAIO,GAAJ,EAAD,CAAhC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;;AAEA,GAAC,SAASY,OAAT,GAAkB;AACjB,QAAGF,IAAH,EAAQ;AACN,WAAIN,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,EAAX,EAAe,EAAEA,CAAjB,EAAmB;AACjBC,QAAAA,KAAK,CAACQ,GAAN,CAAUT,CAAV,EAAa,WAAb;AACD;;AACDO,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAPD;;AASA,WAASG,YAAT,CAAsBC,EAAtB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,EAApC;AACE,QAAIG,QAAQ,GAAGC,YAAY,CAACJ,EAAD,CAA3B;AACFT,IAAAA,MAAM,CAACD,KAAK,CAACQ,GAAN,CAAUK,QAAV,EAAoB,SAApB,CAAD,CAAN;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACEE,IAAAA,SAAS;AACTC,IAAAA,kBAAkB,CAACH,QAAD,CAAlB;AACAI,IAAAA,oBAAoB,CAACJ,QAAD,CAApB;AACH;;AAED,WAASC,YAAT,CAAsBJ,EAAtB,EAAyB;AACvB,QAAIQ,KAAK,GAAC,CAAV;AAAA,QAAaC,KAAK,GAAC,CAAnB;AAAA,QAAsBN,QAAQ,GAAC,CAA/B;;AACA,QAAGH,EAAE,CAACU,MAAH,CAAU,CAAV,KAAc,GAAjB,EAAqB;AACnBF,MAAAA,KAAK,GAAG,MAAIG,QAAQ,CAACX,EAAE,CAACU,MAAH,CAAU,CAAV,CAAD,CAAR,GAAuB,CAA3B,CAAR;AACAD,MAAAA,KAAK,GAAG,IAAGE,QAAQ,CAACX,EAAE,CAACU,MAAH,CAAU,CAAV,CAAD,CAAX,GAA2B,CAAnC;AACD,KAHD,MAIK,IAAGV,EAAE,CAACU,MAAH,CAAU,CAAV,KAAc,GAAjB,EAAqB;AACxBF,MAAAA,KAAK,GAAG,MAAIG,QAAQ,CAACX,EAAE,CAACU,MAAH,CAAU,CAAV,CAAD,CAAR,GAAuB,CAA3B,CAAR;AACAD,MAAAA,KAAK,GAAG,IAAGE,QAAQ,CAACX,EAAE,CAACU,MAAH,CAAU,CAAV,CAAD,CAAX,GAA2B,CAAnC;AACD,KAHI,MAID;AACFF,MAAAA,KAAK,GAAG,KAAIG,QAAQ,CAACX,EAAE,CAACU,MAAH,CAAU,CAAV,CAAD,CAAZ,GAA4B,CAApC;AACAD,MAAAA,KAAK,GAAGE,QAAQ,CAACX,EAAE,CAACU,MAAH,CAAU,CAAV,CAAD,CAAhB;AACD;;AACDP,IAAAA,QAAQ,GAAGK,KAAK,GAAGC,KAAnB;AACA,WAAON,QAAP;AACD;;AAED,WAASE,SAAT,GAAoB;AAClBX,IAAAA,OAAO,CAACD,IAAI,IAAE,SAAN,GAAgB,SAAhB,GAA0B,SAA3B,CAAP;AACD;;AAED,WAASa,kBAAT,CAA4BH,QAA5B,EAAqC;AACnC;AACA,QAAGb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,EAAnB,KAAwB,SAAxB,IAAqCb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAA7D,IAA0Eb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAApG,EAA8G;AAC5GF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFD,MAGK,IAAGZ,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,EAAnB,KAAyB,SAAzB,IAAsCb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAA7D,IAA0Eb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAArG,EAA+G;AAClHF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFI,MAGA,IAAGZ,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,EAAnB,KAAwB,SAAxB,IAAqCb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAA7D,IAA0Eb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAAjG,IAA8Gb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,EAAnB,KAAyB,SAAvI,IAAoJb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAA3K,IAAwLb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAAnN,EAA6N;AAChOF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF;;AAED,WAASK,oBAAT,CAA8BJ,QAA9B,EAAuC;AACrC;AACA,QAAGb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAAvB,IAAoCb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAA5D,IAAyEb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAAnG,EAA6G;AAC3GF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAFD,MAGK,IAAGZ,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAAxB,IAAqCb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAA5D,IAAyEb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAApG,EAA8G;AACjHF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFI,MAGA,IAAGZ,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAAvB,IAAoCb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAA5D,IAAyEb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAAhG,IAA6Gb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAArI,IAAkJb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAuB,SAAzK,IAAsLb,KAAK,CAACsB,GAAN,CAAUT,QAAQ,GAAC,CAAnB,KAAwB,SAAjN,EAA2N;AAC9NF,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEH,YAAZ;AAA0B,QAAA,IAAI,EAAEN,IAAhC;AAAsC,QAAA,GAAG,EAAEH;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD;;GAjFQF,G;;KAAAA,G;AAmFT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport react, {useState} from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\n\nfunction App() {\n  var i;\n  const [elMap, setMap] = useState(new Map());\n  const [turn, setTurn] = useState(\"#c5183b\");\n  const [flag, setFlag] = useState(true);\n  \n  (function initMap(){\n    if(flag){\n      for(i=0; i<65; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n      setFlag(false);\n    }\n  })()\n\n  function elementCheck(id){\n    console.log(\"Clicked element is \" + id);\n      var position = calcPosition(id);\n    setMap(elMap.set(position, \"clicked\"));\n    console.log(position);\n      colorBars();\n      checkVerticalBoxes(position);\n      checkHorizontalBoxes(position);\n  }\n  \n  function calcPosition(id){\n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    position = part1 + part2;\n    return position;\n  }\n\n  function colorBars(){\n    setTurn(turn==\"#c5183b\"?\"#3b919b\":\"#c5183b\");\n  }\n\n  function checkVerticalBoxes(position){\n    // checking for vertical boxes\n    if(elMap.get(position-14)==\"clicked\" && elMap.get(position-6)== \"clicked\" && elMap.get(position-7)==\"clicked\"){\n      console.log(\"upper box filled\");\n    }\n    else if(elMap.get(position+14)== \"clicked\" && elMap.get(position+7)==\"clicked\" && elMap.get(position+8)== \"clicked\"){\n      console.log(\"lower box filled\");\n    }\n    else if(elMap.get(position-14)==\"clicked\" && elMap.get(position-6)== \"clicked\" && elMap.get(position-7)==\"clicked\" && elMap.get(position+14)== \"clicked\" && elMap.get(position+7)==\"clicked\" && elMap.get(position+8)== \"clicked\"){\n      console.log(\"upper and lower boxes filled\");\n    }\n  }\n\n  function checkHorizontalBoxes(position){\n    // checking for horizontal boxes\n    if(elMap.get(position-9)==\"clicked\" && elMap.get(position+5)== \"clicked\" && elMap.get(position-1)==\"clicked\"){\n      console.log(\"left box filled\");\n    }\n    else if(elMap.get(position+1)== \"clicked\" && elMap.get(position-7)==\"clicked\" && elMap.get(position+7)== \"clicked\"){\n      console.log(\"right box filled\");\n    }\n    else if(elMap.get(position-9)==\"clicked\" && elMap.get(position-7)== \"clicked\" && elMap.get(position-1)==\"clicked\" && elMap.get(position+1)== \"clicked\" && elMap.get(position+5)==\"clicked\" && elMap.get(position+7)== \"clicked\"){\n      console.log(\"left and right boxes filled\");\n    }\n  }\n\n  return (\n    <>\n      <div className=\"center-container\">\n        <h1 className=\"title\">Dot Game</h1>\n        <Grid func={elementCheck} turn={turn} map={elMap}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}