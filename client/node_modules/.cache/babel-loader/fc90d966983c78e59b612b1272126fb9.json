{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Container.js\";\nimport React from 'react';\nimport Dot from \"./Dot\";\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Container(props) {\n  var grid = [];\n  var dotCount, horizontalCount, verticalCount;\n  var keyCountHorizontal = 0,\n      keyCountVertical = 0;\n  let i;\n  let rowCount = Math.floor(props.row / 2) + 1;\n\n  (function createBoard() {\n    if (props.row % 2 == 0) {\n      for (i = 0; i < 9; ++i) {\n        dotCount = keyCountHorizontal / 2 + 1;\n        horizontalCount = Math.ceil((keyCountHorizontal + 1) / 2);\n        grid.push( /*#__PURE__*/_jsxDEV(Dot, {\n          elementName: i % 2 == 0 ? \"dot\" : \"horizontal-bar\",\n          elementId: i % 2 == 0 ? \"dot-\" + rowCount + \"-\" + dotCount : \"horizontal-bar-\" + rowCount + \"-\" + horizontalCount\n        }, keyCountHorizontal++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 27\n        }, this));\n      }\n    } else {\n      for (i = 0; i < 5; ++i) {\n        verticalCount = keyCountVertical + 1;\n        grid.push( /*#__PURE__*/_jsxDEV(Dot, {\n          elementName: \"vertical-bar\",\n          elementId: \"vertical-bar-\" + rowCount + \"-\" + verticalCount\n        }, keyCountVertical++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 27\n        }, this));\n      }\n    }\n\n    setArr([...props.arr, grid]);\n  })();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.containerName,\n      id: props.containerId,\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), (() => {\n      return grid;\n    })()]\n  }, void 0, true);\n}\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Container.js"],"names":["React","Dot","Container","props","grid","dotCount","horizontalCount","verticalCount","keyCountHorizontal","keyCountVertical","i","rowCount","Math","floor","row","createBoard","ceil","push","setArr","arr","containerName","containerId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,cAAP;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,QAAJ,EAAcC,eAAd,EAA+BC,aAA/B;AACA,MAAIC,kBAAkB,GAAG,CAAzB;AAAA,MAA4BC,gBAAgB,GAAG,CAA/C;AACA,MAAIC,CAAJ;AACA,MAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACW,GAAN,GAAU,CAArB,IAAwB,CAAvC;;AACA,GAAC,SAASC,WAAT,GAAsB;AACnB,QAAGZ,KAAK,CAACW,GAAN,GAAU,CAAV,IAAa,CAAhB,EAAkB;AACd,WAAIJ,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,CAAX,EAAc,EAAEA,CAAhB,EAAkB;AACdL,QAAAA,QAAQ,GAAIG,kBAAkB,GAAC,CAAnB,GAAuB,CAAnC;AACAF,QAAAA,eAAe,GAAGM,IAAI,CAACI,IAAL,CAAU,CAACR,kBAAkB,GAAC,CAApB,IAAuB,CAAjC,CAAlB;AACAJ,QAAAA,IAAI,CAACa,IAAL,eAAU,QAAC,GAAD;AAEM,UAAA,WAAW,EAAEP,CAAC,GAAC,CAAF,IAAK,CAAL,GAAO,KAAP,GAAa,gBAFhC;AAGM,UAAA,SAAS,EAAEA,CAAC,GAAC,CAAF,IAAK,CAAL,GAAO,SAAOC,QAAP,GAAgB,GAAhB,GAAoBN,QAA3B,GAAoC,oBAAkBM,QAAlB,GAA2B,GAA3B,GAA+BL;AAHpF,WACWE,kBAAkB,EAD7B;AAAA;AAAA;AAAA;AAAA,gBAAV;AAKH;AACJ,KAVD,MAWI;AACA,WAAIE,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,CAAX,EAAc,EAAEA,CAAhB,EAAkB;AACdH,QAAAA,aAAa,GAAGE,gBAAgB,GAAG,CAAnC;AACAL,QAAAA,IAAI,CAACa,IAAL,eAAU,QAAC,GAAD;AAEM,UAAA,WAAW,EAAC,cAFlB;AAGM,UAAA,SAAS,EAAE,kBAAgBN,QAAhB,GAAyB,GAAzB,GAA6BJ;AAH9C,WACWE,gBAAgB,EAD3B;AAAA;AAAA;AAAA;AAAA,gBAAV;AAKH;AACJ;;AACDS,IAAAA,MAAM,CAAC,CAAC,GAAGf,KAAK,CAACgB,GAAV,EAAef,IAAf,CAAD,CAAN;AACH,GAvBD;;AAyBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAED,KAAK,CAACiB,aAAtB;AAAqC,MAAA,EAAE,EAAEjB,KAAK,CAACkB,WAA/C;AAAA,gBAA6DjB;AAA7D;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAAC,MAAI;AACF,aAAOA,IAAP;AACH,KAFA,GAFL;AAAA,kBADJ;AAQH;KAvCuBF,S","sourcesContent":["import React from 'react'\nimport Dot from \"./Dot\";\nimport \"../style.css\";\n\nexport default function Container(props) {\n    var grid = [];\n    var dotCount, horizontalCount, verticalCount;\n    var keyCountHorizontal = 0, keyCountVertical = 0;\n    let i;\n    let rowCount = Math.floor(props.row/2)+1;\n    (function createBoard(){\n        if(props.row%2==0){\n            for(i=0; i<9; ++i){\n                dotCount = (keyCountHorizontal/2 + 1);\n                horizontalCount = Math.ceil((keyCountHorizontal+1)/2);\n                grid.push(<Dot \n                                key={keyCountHorizontal++} \n                                elementName={i%2==0?\"dot\":\"horizontal-bar\"}\n                                elementId={i%2==0?\"dot-\"+rowCount+\"-\"+dotCount:\"horizontal-bar-\"+rowCount+\"-\"+horizontalCount}\n                            />)\n            }   \n        }\n        else{\n            for(i=0; i<5; ++i){\n                verticalCount = keyCountVertical + 1;\n                grid.push(<Dot\n                                key={keyCountVertical++}\n                                elementName=\"vertical-bar\"\n                                elementId={\"vertical-bar-\"+rowCount+\"-\"+verticalCount}\n                            />)\n            }\n        }\n        setArr([...props.arr, grid]);\n    })()\n    \n    return (\n        <>\n            <div className={props.containerName} id={props.containerId}>{grid}</div>\n            {(()=>{\n                return grid;\n            })()}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}