{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/GameOver.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../style.css\";\nimport { Route, Link, Routes } from \"react-router-dom\";\nimport Game from \"../Game.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameOver(props) {\n  _s();\n\n  var result;\n  const [gridSize, setGridSize] = useState(4);\n  const [hideWinner, setHideWinner] = useState(\"flex\");\n  const [showShare, setShowShare] = useState(\"none\");\n\n  (function calcResult() {\n    if (props.redScore > props.blueScore) {\n      result = \"red\";\n    } else if (props.redScore < props.blueScore) {\n      result = \"blue\";\n    } else {\n      result = \"draw\";\n    }\n  })();\n\n  function createEmoji() {\n    var i = 0;\n\n    if (result == \"draw\") {\n      var message = \"It's a draw\\n\\n\";\n    } else if (result == \"red\") {\n      message = \"ðŸ‘‘ Red\\n\\n\";\n    } else {\n      message = \"ðŸ‘‘ Blue\\n\\n\";\n    }\n\n    for (const [key, value] of props.boxMap.entries()) {\n      if (props.gridSize == 4) {\n        if (i == 4) {\n          message += \"\\n\";\n          i = 0;\n        }\n      } else {\n        if (i == 8) {\n          message += \"\\n\";\n          i = 0;\n        }\n      }\n\n      if (value == \"#c5183b\") {\n        message += \"ðŸŸ¥\";\n      } else {\n        message += \"ðŸŸ¦\";\n      }\n\n      i++;\n    }\n\n    console.log(message);\n    navigator.clipboard.writeText(message);\n    window.alert(\"Result shared to clipboard!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-outer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-container\",\n        id: result + \"-winner-container\",\n        onMouseEnter: () => {\n          setHideWinner(\"none\");\n          setShowShare(\"flex\");\n        },\n        onMouseLeave: () => {\n          setHideWinner(\"flex\");\n          setShowShare(\"none\");\n        },\n        onClick: () => {\n          // console.log(\"hello\");\n          createEmoji();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-text-container\",\n          style: {\n            display: hideWinner\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"winner-text\",\n            children: result == \"draw\" ? \"It's a draw\" : result + \" wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"share-container\",\n          style: {\n            display: showShare\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"grid-button\",\n      id: props.gridSize == 4 ? \"four-button\" : \"eight-button\",\n      onClick: () => {\n        window.location.reload(false);\n      },\n      children: \"Go Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GameOver, \"s59O67/Oq5lDHsLy3dCXZqxeUo8=\");\n\n_c = GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/GameOver.js"],"names":["React","useState","Route","Link","Routes","Game","ToastContainer","toast","GameOver","props","result","gridSize","setGridSize","hideWinner","setHideWinner","showShare","setShowShare","calcResult","redScore","blueScore","createEmoji","i","message","key","value","boxMap","entries","console","log","navigator","clipboard","writeText","window","alert","display","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,kBAAlC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,MAAIC,MAAJ;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,MAAD,CAA5C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,MAAD,CAA1C;;AAEA,GAAC,SAASgB,UAAT,GAAqB;AAClB,QAAGR,KAAK,CAACS,QAAN,GAAeT,KAAK,CAACU,SAAxB,EAAkC;AAC9BT,MAAAA,MAAM,GAAG,KAAT;AACH,KAFD,MAGK,IAAGD,KAAK,CAACS,QAAN,GAAeT,KAAK,CAACU,SAAxB,EAAkC;AACnCT,MAAAA,MAAM,GAAG,MAAT;AACH,KAFI,MAGD;AACAA,MAAAA,MAAM,GAAG,MAAT;AACH;AACJ,GAVD;;AAYA,WAASU,WAAT,GAAsB;AAClB,QAAIC,CAAC,GAAC,CAAN;;AACA,QAAGX,MAAM,IAAI,MAAb,EAAoB;AAChB,UAAIY,OAAO,GAAG,iBAAd;AACH,KAFD,MAGK,IAAGZ,MAAM,IAAE,KAAX,EAAiB;AAClBY,MAAAA,OAAO,GAAG,YAAV;AACH,KAFI,MAGD;AACAA,MAAAA,OAAO,GAAG,aAAV;AACH;;AACD,SAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2Bf,KAAK,CAACgB,MAAN,CAAaC,OAAb,EAA3B,EAAmD;AAC/C,UAAGjB,KAAK,CAACE,QAAN,IAAgB,CAAnB,EAAqB;AACjB,YAAGU,CAAC,IAAE,CAAN,EAAQ;AACJC,UAAAA,OAAO,IAAE,IAAT;AACAD,UAAAA,CAAC,GAAC,CAAF;AACH;AACJ,OALD,MAMI;AACA,YAAGA,CAAC,IAAE,CAAN,EAAQ;AACJC,UAAAA,OAAO,IAAE,IAAT;AACAD,UAAAA,CAAC,GAAC,CAAF;AACH;AACJ;;AACD,UAAGG,KAAK,IAAE,SAAV,EAAoB;AAChBF,QAAAA,OAAO,IAAE,IAAT;AACH,OAFD,MAGI;AACAA,QAAAA,OAAO,IAAE,IAAT;AACH;;AACDD,MAAAA,CAAC;AACJ;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAO,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BT,OAA9B;AACAU,IAAAA,MAAM,CAACC,KAAP,CAAa,6BAAb;AACH;;AAED,sBACA;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI;AACI,QAAA,SAAS,EAAC,kBADd;AAEI,QAAA,EAAE,EAAEvB,MAAM,GAAC,mBAFf;AAGI,QAAA,YAAY,EAAE,MAAI;AAACI,UAAAA,aAAa,CAAC,MAAD,CAAb;AAAuBE,UAAAA,YAAY,CAAC,MAAD,CAAZ;AAAqB,SAHnE;AAII,QAAA,YAAY,EAAE,MAAI;AAACF,UAAAA,aAAa,CAAC,MAAD,CAAb;AAAuBE,UAAAA,YAAY,CAAC,MAAD,CAAZ;AAAqB,SAJnE;AAKI,QAAA,OAAO,EAAE,MAAI;AACT;AACAI,UAAAA,WAAW;AACd,SARL;AAAA,gCAUQ;AACI,UAAA,SAAS,EAAC,uBADd;AAEI,UAAA,KAAK,EAAE;AAACc,YAAAA,OAAO,EAAErB;AAAV,WAFX;AAAA,iCAIQ;AACI,YAAA,SAAS,EAAC,aADd;AAAA,sBAESH,MAAM,IAAE,MAAR,GAAe,aAAf,GAA6BA,MAAM,GAAC;AAF7C;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,gBAVR,eAmBQ;AACI,UAAA,SAAS,EAAC,iBADd;AAEI,UAAA,KAAK,EAAE;AAACwB,YAAAA,OAAO,EAAEnB;AAAV;AAFX;AAAA;AAAA;AAAA;AAAA,gBAnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eA6BI;AACI,MAAA,SAAS,EAAC,aADd;AAEI,MAAA,EAAE,EAAEN,KAAK,CAACE,QAAN,IAAgB,CAAhB,GAAkB,aAAlB,GAAgC,cAFxC;AAGI,MAAA,OAAO,EAAE,MAAI;AAACqB,QAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AAA8B,OAHhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BJ,eAoCI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA,kBADA;AAwCH;;GA/FuB5B,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from 'react'\nimport \"../style.css\"\nimport {Route, Link, Routes} from \"react-router-dom\";\nimport Game from \"../Game.js\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function GameOver(props) {\n    var result;\n    const [gridSize, setGridSize] = useState(4);\n    const [hideWinner, setHideWinner] = useState(\"flex\");\n    const [showShare, setShowShare] = useState(\"none\");\n    \n    (function calcResult(){\n        if(props.redScore>props.blueScore){\n            result = \"red\";\n        }\n        else if(props.redScore<props.blueScore){\n            result = \"blue\";\n        }\n        else{\n            result = \"draw\";\n        }\n    })();\n    \n    function createEmoji(){\n        var i=0;\n        if(result == \"draw\"){\n            var message = \"It's a draw\\n\\n\";\n        }\n        else if(result==\"red\"){\n            message = \"ðŸ‘‘ Red\\n\\n\";\n        }\n        else{\n            message = \"ðŸ‘‘ Blue\\n\\n\";\n        }\n        for (const [key, value] of props.boxMap.entries()) {\n            if(props.gridSize==4){\n                if(i==4){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            else{\n                if(i==8){\n                    message+=\"\\n\";\n                    i=0;\n                }\n            }\n            if(value==\"#c5183b\"){\n                message+=\"ðŸŸ¥\";\n            }\n            else{\n                message+=\"ðŸŸ¦\";\n            }\n            i++;\n        }   \n        console.log(message);\n        navigator.clipboard.writeText(message);\n        window.alert(\"Result shared to clipboard!\");\n    }\n\n    return (\n    <>\n        <div className=\"logo-container\"></div>\n        <div className=\"winner-outer-container\">\n            <div \n                className=\"winner-container\" \n                id={result+\"-winner-container\"} \n                onMouseEnter={()=>{setHideWinner(\"none\"); setShowShare(\"flex\")}} \n                onMouseLeave={()=>{setHideWinner(\"flex\"); setShowShare(\"none\")}}\n                onClick={()=>{\n                    // console.log(\"hello\");\n                    createEmoji();\n                }}\n            >\n                    <div \n                        className=\"winner-text-container\" \n                        style={{display: hideWinner}}\n                    >\n                            <h2 \n                                className=\"winner-text\">\n                                    {result==\"draw\"?\"It's a draw\":result+\" wins\"}\n                            </h2>\n                    </div>\n                    <div \n                        className=\"share-container\" \n                        style={{display: showShare}} \n                    >\n                </div>\n            </div>\n        </div>\n        <button \n            className=\"grid-button\" \n            id={props.gridSize==4?\"four-button\":\"eight-button\"} \n            onClick={()=>{window.location.reload(false)}}\n        >\n            Go Again\n        </button>\n        <ToastContainer/>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}