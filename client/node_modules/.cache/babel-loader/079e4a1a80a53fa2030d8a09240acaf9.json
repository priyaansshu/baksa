{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport react, { useState } from 'react';\nimport \"./style.css\";\nimport Game from './Game';\nimport { Route, Link, Routes } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\n\nfunction App() {\n  _s();\n\n  const [gridSize, setGridSize] = useState(4);\n  const [chosenMode, setChosenMode] = useState(0);\n\n  (() => {\n    socket.emit(\"onload-message\", \"hello\");\n  })();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"\",\n        className: \"home-container\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rule\",\n            children: \"Own the most boxes at the end of the game to win\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"grid-button\",\n              id: chosenMode == 1 ? \"four-button-chosen\" : \"four-button\",\n              onClick: () => {\n                setGridSize(4);\n\n                if (chosenMode == 1) {\n                  setChosenMode(0);\n                } else {\n                  setChosenMode(1);\n                }\n              },\n              children: \"4X4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"grid-button\",\n              id: chosenMode == 2 ? \"eight-button-chosen\" : \"eight-button\",\n              onClick: () => {\n                setGridSize(8);\n\n                if (chosenMode == 2) {\n                  setChosenMode(0);\n                } else {\n                  setChosenMode(2);\n                }\n              },\n              children: \"8X8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/game\",\n        element: /*#__PURE__*/_jsxDEV(Game, {\n          gridSize: gridSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"obGNQVvop+USRtJC0ukUy1h7kmo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/App.js"],"names":["react","useState","Game","Route","Link","Routes","io","socket","App","gridSize","setGridSize","chosenMode","setChosenMode","emit"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,kBAAlC;AACA,SAAQC,EAAR,QAAiB,kBAAjB;;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;;AACA,GAAC,MAAI;AACHM,IAAAA,MAAM,CAACM,IAAP,CAAY,gBAAZ,EAA8B,OAA9B;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACQ,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,EAAlB;AAAqB,QAAA,SAAS,EAAC,gBAA/B;AAAgD,QAAA,OAAO,eACrD;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,oCAEI;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,EAAE,EAAEF,UAAU,IAAE,CAAZ,GAAc,oBAAd,GAAmC,aAAvE;AAAsF,cAAA,OAAO,EAAE,MAAI;AACjGD,gBAAAA,WAAW,CAAC,CAAD,CAAX;;AACA,oBAAGC,UAAU,IAAI,CAAjB,EAAmB;AACjBC,kBAAAA,aAAa,CAAC,CAAD,CAAb;AACD,iBAFD,MAGI;AACFA,kBAAAA,aAAa,CAAC,CAAD,CAAb;AACD;AACA,eARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAeI;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,EAAE,EAAED,UAAU,IAAE,CAAZ,GAAc,qBAAd,GAAoC,cAAxE;AAAwF,cAAA,OAAO,EAAE,MAAI;AACnGD,gBAAAA,WAAW,CAAC,CAAD,CAAX;;AACA,oBAAGC,UAAU,IAAI,CAAjB,EAAmB;AACjBC,kBAAAA,aAAa,CAAC,CAAD,CAAb;AACD,iBAFD,MAGI;AACFA,kBAAAA,aAAa,CAAC,CAAD,CAAb;AACD;AACA,eARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADR,eAmCQ,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,OAAlB;AAA0B,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,cAnCR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0CD;;GAhDQD,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport react, {useState} from 'react';\nimport \"./style.css\";\nimport Game from './Game';\nimport {Route, Link, Routes} from \"react-router-dom\";\nimport {io} from \"socket.io-client\"\n\nconst socket = io('http://localhost:4000');\n\nfunction App() {\n  const [gridSize, setGridSize] = useState(4);\n  const [chosenMode, setChosenMode] = useState(0);\n  (()=>{\n    socket.emit(\"onload-message\", \"hello\")\n  })()\n  return(\n    <>\n      <Routes>\n              <Route exact path=\"\" className=\"home-container\" element={\n                <div className=\"home-container\">\n                  <div className=\"logo-container\"></div>\n                  <p className=\"rule\">Own the most boxes at the end of the game to win</p>\n                  <div className=\"grid-buttons-container\">\n                    {/* <Link to=\"/game\" style={{textDecoration: \"none\"}}> */}\n                      <button className=\"grid-button\" id={chosenMode==1?\"four-button-chosen\":\"four-button\"} onClick={()=>{\n                        setGridSize(4);\n                        if(chosenMode == 1){\n                          setChosenMode(0);\n                        }\n                        else{\n                          setChosenMode(1);\n                        }\n                        }}>\n                          4X4\n                      </button>\n                    {/* </Link> */}\n                    {/* <Link to=\"/game\" style={{textDecoration: \"none\"}}> */}\n                      <button className=\"grid-button\" id={chosenMode==2?\"eight-button-chosen\":\"eight-button\"} onClick={()=>{\n                        setGridSize(8);\n                        if(chosenMode == 2){\n                          setChosenMode(0);\n                        }\n                        else{\n                          setChosenMode(2);\n                        }\n                        }}>\n                          8X8\n                      </button>\n                    {/* </Link> */}\n                  </div>\n                </div>\n              }/>   \n              <Route exact path=\"/game\" element={<Game gridSize={gridSize}/>}/>\n      </Routes>\n      {/* <Footer/> */}\n    </>\n  )\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}