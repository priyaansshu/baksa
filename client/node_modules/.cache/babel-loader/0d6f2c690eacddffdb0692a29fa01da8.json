{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Room.js\";\nimport React, { useState } from 'react';\nimport \"./style.css\";\nimport { io } from \"socket.io-client\";\nimport Game from \"./Game\";\nimport Header from './Components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nexport default function (props) {\n  const [roomId, setRoomId] = useState(\"\");\n  const [shared, setShared] = useState(false);\n  const [joined, setJoined] = useState(false);\n  const [roomFull, setRoomFull] = useState(false);\n  socket.on(\"start-game\", () => {\n    setJoined(true);\n  });\n  socket.on(\"room full\", () => {\n    setRoomFull(true);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      gridSize: props.gridSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), joined ? /*#__PURE__*/_jsxDEV(Game, {\n      gridSize: props.gridSize,\n      roomId: roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this) : !shared ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-room\",\n          onClick: () => {\n            window.alert(\"Room ID copied to clipboard.\");\n            setShared(true);\n            socket.emit(\"room-created\", socket.id);\n            navigator.clipboard.writeText(socket.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-room-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"room-input\",\n          type: \"text\",\n          onChange: e => {\n            setRoomId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"join-room\",\n          onClick: () => {\n            socket.emit(\"joined-room\", roomId);\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), !roomFull ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-id-statement\",\n        children: \"Share Room ID with a friend or enter a Room ID to start the game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-full-statement\",\n        children: \"Room is already full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-main-container waiting-room-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-icon-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-id-statement\",\n        children: \"Waiting for the other player to join the room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Room.js"],"names":["React","useState","io","Game","Header","socket","props","roomId","setRoomId","shared","setShared","joined","setJoined","roomFull","setRoomFull","on","gridSize","window","alert","emit","id","navigator","clipboard","writeText","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;AACA,SAAQC,EAAR,QAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;AAEA,eAAe,UAAUI,KAAV,EAAiB;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAI,EAAAA,MAAM,CAACU,EAAP,CAAU,YAAV,EAAwB,MAAI;AACxBH,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;AAGAP,EAAAA,MAAM,CAACU,EAAP,CAAU,WAAV,EAAuB,MAAI;AACvBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;AAII,sBACI;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAER,KAAK,CAACU;AAAxB;AAAA;AAAA;AAAA;AAAA,YADA,EAECL,MAAM,gBACP,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEL,KAAK,CAACU,QAAtB;AAAgC,MAAA,MAAM,EAAET;AAAxC;AAAA;AAAA;AAAA;AAAA,YADO,GAEP,CAACE,MAAD,gBAAQ;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACR;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI;AACI,UAAA,SAAS,EAAC,aADd;AAEI,UAAA,OAAO,EAAE,MAAI;AACTQ,YAAAA,MAAM,CAACC,KAAP,CAAa,8BAAb;AACAR,YAAAA,SAAS,CAAC,IAAD,CAAT;AACAL,YAAAA,MAAM,CAACc,IAAP,CAAY,cAAZ,EAA4Bd,MAAM,CAACe,EAAnC;AACAC,YAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BlB,MAAM,CAACe,EAArC;AAAyC;AANjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADQ,eAYR;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,IAAI,EAAC,MAAnC;AAA0C,UAAA,QAAQ,EAAGI,CAAD,IAAK;AACrDhB,YAAAA,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,SAAS,EAAC,WAAlB;AACI,UAAA,OAAO,EAAE,MAAI;AACTrB,YAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BZ,MAA3B;AACH,WAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZQ,EAuBP,CAACM,QAAD,gBACG;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR,gBA6BJ;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCI;AAAA,kBADJ;AA0CP","sourcesContent":["import React, {useState} from 'react';\nimport \"./style.css\"\nimport {io} from \"socket.io-client\"\nimport Game from \"./Game\"\nimport Header from './Components/Header';\n\nconst socket = io('http://localhost:4000');\n\nexport default function (props) {\n    const [roomId, setRoomId] = useState(\"\");\n    const [shared, setShared] = useState(false);\n    const [joined, setJoined] = useState(false)\n    const [roomFull, setRoomFull] = useState(false);\n    \n    socket.on(\"start-game\", ()=>{\n        setJoined(true);\n    })\n    socket.on(\"room full\", ()=>{\n        setRoomFull(true);\n    })\n\n        return (\n            <>\n            <Header gridSize={props.gridSize}/>\n            {joined?\n            <Game gridSize={props.gridSize} roomId={roomId}/>:\n            !shared?<div className=\"rooms-main-container\">\n            <div className=\"create-room-container\">\n                <button \n                    className=\"create-room\" \n                    onClick={()=>{\n                        window.alert(\"Room ID copied to clipboard.\");\n                        setShared(true);\n                        socket.emit(\"room-created\", socket.id);\n                        navigator.clipboard.writeText(socket.id)}\n                    }>    \n                </button>\n            </div>\n            <div className=\"join-room-container\">\n                <input className=\"room-input\" type=\"text\" onChange={(e)=>{\n                    setRoomId(e.target.value);\n                }}/>\n                <button className=\"join-room\"   \n                    onClick={()=>{\n                        socket.emit(\"joined-room\", roomId)\n                    }}>\n                Join\n                </button>\n            </div>\n            {!roomFull?\n                <p className=\"room-id-statement\">Share Room ID with a friend or enter a Room ID to start the game</p>\n            :\n                <p className=\"room-full-statement\">Room is already full</p>\n            }\n        </div>:\n        <div className=\"rooms-main-container waiting-room-container\">\n            <div className=\"waiting-icon-container\">\n\n            </div>\n            <p className=\"room-id-statement\">Waiting for the other player to join the room</p>\n        </div>}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}