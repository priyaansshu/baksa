{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport react, { useState, useEffect, useRef } from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport GameOver from './Components/GameOver';\nimport Header from './Components/Header';\nimport { io } from \"socket.io-client\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { css } from \"glamor\";\nimport Chat from './Components/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nexport default function Game(props) {\n  _s();\n\n  var i, j;\n  var tempBoxCount = 0;\n  var compTempPos;\n  var compBoxFlag = false;\n  var comp2line = false;\n  const [elMap, setMap] = useState(new Map());\n  const [boxMap, setBoxMap] = useState(new Map());\n  const [mapFlag, setMapFlag] = useState(true); //used to make sure the map is initialised only once\n\n  const [boxFlag, setBoxFlag] = useState(true); //used to make sure the box map is initialised only once\n\n  var red = \"#c5183b\";\n  var blue = \"#3b919b\";\n  const assignedColor = props.playerRole == 1 ? red : blue;\n  const [turn, setTurn] = useState(red);\n  const [redScore, setRedScore] = useState(0);\n  const [blueScore, setBlueScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  var position;\n  const [tempId, setTempId] = useState(\"\");\n  const [tempColor, setTempColor] = useState(\"\");\n  const [finalRoomId, setFinalRoomId] = useState(\"\");\n  const [messageArr, setMessageArr] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [lastSeen, setLastSeen] = useState(0);\n  var t; // variable for temporarily handling id\n\n  var tempTurn; // variable for temporarily handling turn\n\n  var tempBoxColor = \"\";\n  useEffect(() => {\n    // window.history.pushState('', 'Room', '/'+props.roomId);\n    var tempRoomId = props.roomId + \"1\";\n    console.log(tempRoomId);\n    socket.emit(\"rejoin\", {\n      roomId: tempRoomId\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"final-room\", _ref => {\n      let {\n        roomId\n      } = _ref;\n      // console.log(roomId);\n      setFinalRoomId(roomId);\n    });\n  }, [socket]);\n\n  function updateMapWithServer() {\n    // console.log(\"received\");\n    // socket.emit(\"test\", {roomId: finalRoomId, socketId: props.socketId});\n    socket.emit(\"update\", {\n      turn: tempTurn,\n      roomId: finalRoomId,\n      socketId: props.socketId,\n      position: position,\n      tempId: t,\n      tempBoxColor: tempBoxColor\n    });\n  }\n\n  useEffect(() => {\n    // console.log(socket);\n    socket.on(\"updated\", data => {\n      position = data.position;\n      tempBoxColor = data.tempBoxColor;\n      updateLocalVariablesWithServerValues(data.tempId, data.turn);\n      elementCheckUtilityFunction(position, data.tempId);\n    });\n  }, [socket]); // useEffect(()=>{socket.on(\"test\", (message)=>{\n  //     console.log(message);\n  //   });\n  // }, [socket]);\n\n  function updateLocalVariablesWithServerValues(tempId, tempColor) {\n    setTempId(tempId);\n    setTempColor(tempColor); // console.log(\"tempColor: \"+tempColor);\n  }\n\n  (function initMap() {\n    console.log(props.gridSize);\n\n    if (mapFlag) {\n      for (i = 0; i < 65; ++i) {\n        // for(i=0; i<props.gridSize==4?65:225; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n\n      setMapFlag(false);\n    }\n  })();\n\n  (function initBoxMap() {\n    if (boxFlag) {\n      // for(i=1; i<=props.gridSize==4?4:8; ++i){\n      for (i = 1; i <= 4; ++i) {\n        // for(j=1; j<=props.gridSize==4?4:8; ++j)\n        for (j = 1; j <= 4; ++j) boxMap.set(\"b-\" + i + \"-\" + j, \"transparent\");\n      }\n\n      setBoxFlag(false);\n    }\n  })();\n\n  function updateMap(position) {\n    if (elMap.get(position) !== \"clicked\") {\n      setMap(elMap.set(position, \"clicked\")); // console.log(elMap);\n    }\n  }\n\n  function elementCheckUtilityFunction(position, id) {\n    // console.log(\"here\");\n    updateMap(position);\n    setTurnFunc();\n\n    if (id.charAt(0) == \"h\") {\n      checkVerticalBoxes(id);\n    } else {\n      checkHorizontalBoxes(id);\n    }\n  }\n\n  function elementCheck(id) {\n    console.log(elMap);\n    t = id;\n    tempBoxColor = \"\";\n    position = calcPosition(id);\n    elementCheckUtilityFunction(position, id);\n    tempTurn = turn;\n    if (!props.vsComp) updateMapWithServer();\n  }\n\n  function calcPosition(id) {\n    var part1 = 0,\n        part2 = 0,\n        position = 0;\n\n    if (id.charAt(0) == \"d\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 2;\n    } else if (id.charAt(0) == \"h\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 1;\n    } else {\n      part1 = 14 * parseInt(id.charAt(2)) - 5;\n      part2 = parseInt(id.charAt(4));\n    }\n\n    position = part1 + part2;\n    console.log(position);\n    return position;\n  }\n\n  function setTurnFunc() {\n    setTurn(turn => turn === red ? blue : red); // console.log(\"In the setTurn function: \"+turn);\n  }\n\n  function stayTurn(boxColor) {\n    setTurn(boxColor);\n  }\n\n  function checkVerticalBoxes(id) {\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)),\n        m = parseInt(id.charAt(4));\n    id1 = \"h-\" + (n - 1) + \"-\" + m;\n    id2 = \"h-\" + (n + 1) + \"-\" + m;\n    id3 = \"v-\" + (n - 1) + \"-\" + m;\n    id4 = \"v-\" + (n - 1) + \"-\" + (m + 1);\n    id5 = \"v-\" + n + \"-\" + m;\n    id6 = \"v-\" + n + \"-\" + (m + 1);\n    pos1 = calcPosition(id1);\n    pos2 = calcPosition(id2);\n    pos3 = calcPosition(id3);\n    pos4 = calcPosition(id4);\n    pos5 = calcPosition(id5);\n    pos6 = calcPosition(id6);\n\n    if (tempBoxColor == \"\") {\n      var boxColor = turn;\n    } else {\n      var boxColor = tempBoxColor;\n    }\n\n    if (elMap.get(pos1) == \"clicked\" && elMap.get(pos2) == \"clicked\" && elMap.get(pos3) == \"clicked\" && elMap.get(pos4) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"upper and lower boxes filled\");\n      setBoxMap(boxMap.set(\"b-\" + (n - 1) + \"-\" + m, boxColor));\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + (n - 1) + \"-\" + m);\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } else if (elMap.get(pos1) == \"clicked\" && elMap.get(pos3) == \"clicked\" && elMap.get(pos4) == \"clicked\") {\n      console.log(\"upper box filled\");\n      setBoxMap(boxMap.set(\"b-\" + (n - 1) + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + (n - 1) + \"-\" + m);\n      updateTotal();\n    } else if (elMap.get(pos2) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"lower box filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } // console.log(boxMap);\n\n\n    tempBoxColor = boxColor;\n  }\n\n  function checkHorizontalBoxes(id) {\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)),\n        m = parseInt(id.charAt(4));\n    id1 = \"h-\" + n + \"-\" + (m - 1);\n    id2 = \"v-\" + n + \"-\" + (m - 1);\n    id3 = \"h-\" + (n + 1) + \"-\" + (m - 1);\n    id4 = \"h-\" + n + \"-\" + m;\n    id5 = \"v-\" + n + \"-\" + (m + 1);\n    id6 = \"h-\" + (n + 1) + \"-\" + m;\n    pos1 = calcPosition(id1);\n    pos2 = calcPosition(id2);\n    pos3 = calcPosition(id3);\n    pos4 = calcPosition(id4);\n    pos5 = calcPosition(id5);\n    pos6 = calcPosition(id6);\n\n    if (tempBoxColor == \"\") {\n      var boxColor = turn;\n    } else {\n      var boxColor = tempBoxColor;\n    }\n\n    if (elMap.get(pos1) == \"clicked\" && elMap.get(pos2) == \"clicked\" && elMap.get(pos3) == \"clicked\" && elMap.get(pos4) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"left and right boxes filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + (m - 1), boxColor));\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + (m - 1));\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } else if (elMap.get(pos1) == \"clicked\" && elMap.get(pos2) == \"clicked\" && elMap.get(pos3) == \"clicked\") {\n      console.log(\"left box filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + (m - 1), boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + (m - 1));\n      updateTotal();\n    } else if (elMap.get(pos4) == \"clicked\" && elMap.get(pos5) == \"clicked\" && elMap.get(pos6) == \"clicked\") {\n      console.log(\"right box filled\");\n      setBoxMap(boxMap.set(\"b-\" + n + \"-\" + m, boxColor));\n      stayTurn(boxColor);\n      updateScore(\"b-\" + n + \"-\" + m);\n      updateTotal();\n    } // console.log(boxMap);\n\n\n    tempBoxColor = boxColor;\n  }\n\n  function updateScore(tempBoxId) {\n    if (boxMap.get(tempBoxId) == red) {\n      setRedScore(redScore => redScore + 1);\n    } else if (boxMap.get(tempBoxId) == blue) {\n      setBlueScore(blueScore => blueScore + 1);\n    }\n  }\n\n  function updateTotal() {\n    tempBoxCount = 0;\n\n    for (const [key, value] of boxMap.entries()) {\n      if (value != \"transparent\") {\n        // console.log(key+\": \"+value);\n        tempBoxCount++;\n      }\n    }\n\n    console.log(\"tempBoxCount: \" + tempBoxCount);\n\n    if (props.gridSize == 4) {\n      if (tempBoxCount == 16) {\n        setGameOver(true);\n      }\n    } else if (props.gridSize == 8) {\n      if (tempBoxCount == 64) {\n        setGameOver(true);\n      }\n    } // console.log(\"totalScore: \"+(redScore+blueScore));\n    // if(props.gridSize == 4 && redScore+blueScore == 15){\n    //   setGameOver(true);\n    // }\n    // else if(props.gridSize == 8 && redScore+blueScore == 63){\n    //   setGameOver(true);\n    // }\n\n  } // function compCheckVerticalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   var boxColor = turn==blue?blue:red;\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n  // function compCheckHorizontalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   var boxColor = turn==blue?blue:red;\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n  // function compCheck1lineHorizontal(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n  // function compCheck1lineVertical(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos2)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n  // function compFunc(elRef){\n  //   console.log(\"computer's turn\");\n  //   console.log(elMap);\n  //   compBoxFlag = false;\n  //   var comp1line = false;\n  //   var comp0line = false;\n  //   if(compBoxFlag == false){\n  //     // check box completion\n  //     console.log(\"check box completion\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(compBoxFlag == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             compCheckVerticalBoxes(compTempId1, elRef);\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             compCheckHorizontalBoxes(compTempId2, elRef);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n  //   if(compBoxFlag == false && comp1line == false && comp0line == false){\n  //     // check 0 line clicked\n  //     console.log(\"check 0 line clicked\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(comp0line == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId1);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId2);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //         }  \n  //       }\n  //     }\n  //   }\n  // }\n\n\n  const playerColorToastId = useRef(null);\n  useEffect(() => {\n    var playerColor = assignedColor == \"#c5183b\" ? \"Red\" : \"Blue\";\n    playerColorToastId.current = toast(\"You are \" + playerColor, {\n      className: css({\n        background: \"#c5183b !important\"\n      }),\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n  }, []);\n\n  function notTurnFunc() {\n    toast(\"It's not your turn\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n  }\n\n  function sendMessage(tempMessage, playerRole) {\n    if (tempMessage == \"\") {\n      return;\n    } // const tempMessageArr = [...messageArr];\n    // console.log(tempMessageArr);\n    // tempMessageArr.push(tempMessage);\n    // setMessageArr(tempMessageArr);\n    // console.log(tempMessageArr);\n\n\n    socket.emit(\"send-message\", {\n      roomId: finalRoomId,\n      tempMessage: tempMessage,\n      playerRole: playerRole\n    });\n  }\n\n  socket.off(\"receive-message\");\n  socket.on(\"receive-message\", (tempMessage, playerRole) => {\n    console.log(\"message received\");\n    const tempMessageArr = [...messageArr];\n    tempMessageArr.push({\n      sender: playerRole,\n      message: tempMessage\n    });\n    console.log(tempMessageArr);\n    setMessageArr(tempMessageArr);\n  });\n  useEffect(() => {\n    if (playerColorToastId.current != null && showChat) {\n      toast.dismiss(playerColorToastId.current);\n    }\n\n    if (showChat) {\n      // console.log(\"here\");\n      // setLastSeen(messageArr.length);\n      // var tempLastSeen = messageArr.length;\n      // var tempUnreadCount = messageArr.length-tempLastSeen;\n      setUnreadCount(tempUnreadCount);\n    }\n\n    var tempUnreadCount = messageArr.length - lastSeen;\n    setUnreadCount(tempUnreadCount);\n  }, [showChat]);\n  useEffect(() => {\n    if (showChat) {\n      setUnreadCount(0);\n      setLastSeen(messageArr.length);\n    } else {\n      console.log(\"closed\");\n      var tempUnreadCount = messageArr.length - lastSeen;\n      setUnreadCount(tempUnreadCount);\n    }\n  }, [messageArr.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      gridSize: props.gridSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !gameOver ? \"show-grid\" : \"hide-grid\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          gridSize: props.gridSize,\n          func: elementCheck,\n          turn: turn,\n          map: elMap,\n          boxMap: boxMap,\n          vsComp: props.vsComp,\n          tempColor: tempColor,\n          tempId: tempId,\n          assignedColor: assignedColor,\n          notTurnFunc: notTurnFunc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !gameOver ? \"hide-game-over\" : \"show-game-over\",\n        children: /*#__PURE__*/_jsxDEV(GameOver, {\n          redScore: redScore,\n          blueScore: blueScore,\n          gridSize: props.gridSize,\n          boxMap: boxMap,\n          vsComp: props.vsComp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !gameOver ? \"score-container\" : \"hide-score-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"score\",\n          id: turn == red ? \"turn-score-red\" : \"score-red\",\n          children: [\"Red: \", redScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"score\",\n          id: turn == blue ? \"turn-score-blue\" : \"score-blue\",\n          children: [\"Blue: \", blueScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this), !props.vsComp && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: assignedColor == red ? \"chat-button-container-red\" : \"chat-button-container-blue\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-button\",\n        onClick: () => {\n          setShowChat(!showChat);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unread-count-container\",\n          style: {\n            visibility: unreadCount == 0 ? \"hidden\" : \"visible\"\n          },\n          children: unreadCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 21\n    }, this), !props.vsComp && /*#__PURE__*/_jsxDEV(Chat, {\n      sendMessage: sendMessage,\n      messageArr: messageArr,\n      chatColor: assignedColor,\n      roomId: finalRoomId,\n      playerRole: props.playerRole,\n      showChat: showChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"eaqvbsBvLcvAQgzsbhgyj/yliSo=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Game.js"],"names":["logo","react","useState","useEffect","useRef","Dot","Grid","GameOver","Header","io","ToastContainer","toast","css","Chat","socket","Game","props","i","j","tempBoxCount","compTempPos","compBoxFlag","comp2line","elMap","setMap","Map","boxMap","setBoxMap","mapFlag","setMapFlag","boxFlag","setBoxFlag","red","blue","assignedColor","playerRole","turn","setTurn","redScore","setRedScore","blueScore","setBlueScore","gameOver","setGameOver","position","tempId","setTempId","tempColor","setTempColor","finalRoomId","setFinalRoomId","messageArr","setMessageArr","showChat","setShowChat","unreadCount","setUnreadCount","lastSeen","setLastSeen","t","tempTurn","tempBoxColor","tempRoomId","roomId","console","log","emit","on","updateMapWithServer","socketId","data","updateLocalVariablesWithServerValues","elementCheckUtilityFunction","initMap","gridSize","set","initBoxMap","updateMap","get","id","setTurnFunc","charAt","checkVerticalBoxes","checkHorizontalBoxes","elementCheck","calcPosition","vsComp","part1","part2","parseInt","stayTurn","boxColor","id1","id2","id3","id4","id5","id6","pos1","pos2","pos3","pos4","pos5","pos6","n","m","updateScore","updateTotal","tempBoxId","key","value","entries","playerColorToastId","playerColor","current","className","background","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notTurnFunc","sendMessage","tempMessage","off","tempMessageArr","push","sender","message","dismiss","tempUnreadCount","length","visibility"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport react, {useState, useEffect, useRef} from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport GameOver from './Components/GameOver';\nimport Header from './Components/Header';\nimport {io} from \"socket.io-client\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { css } from \"glamor\";\nimport Chat from './Components/Chat';\n\nconst socket = io('http://localhost:4000');\n\nexport default function Game(props) {\n  var i, j;\n  var tempBoxCount = 0;\n  var compTempPos;\n  var compBoxFlag = false;\n  var comp2line = false;\n  const [elMap, setMap] = useState(new Map());\n  const [boxMap, setBoxMap] = useState(new Map());\n  \n  const [mapFlag, setMapFlag] = useState(true); //used to make sure the map is initialised only once\n  const [boxFlag, setBoxFlag] = useState(true); //used to make sure the box map is initialised only once\n  \n  var red=\"#c5183b\";\n  var blue=\"#3b919b\";\n  const assignedColor = props.playerRole==1?red:blue;\n\n  const [turn, setTurn] = useState(red);\n  const [redScore, setRedScore] = useState(0);\n  const [blueScore, setBlueScore] = useState(0);\n\n  const [gameOver, setGameOver] = useState(false);\n  var position;\n  const [tempId, setTempId] = useState(\"\");\n  const [tempColor, setTempColor] = useState(\"\");\n\n  const [finalRoomId, setFinalRoomId] = useState(\"\");\n  \n  const [messageArr, setMessageArr] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [lastSeen, setLastSeen] = useState(0);\n\n  var t; // variable for temporarily handling id\n  var tempTurn; // variable for temporarily handling turn\n  var tempBoxColor=\"\";\n\n  useEffect(()=>{\n    // window.history.pushState('', 'Room', '/'+props.roomId);\n    var tempRoomId = props.roomId+\"1\";\n    console.log(tempRoomId);\n    socket.emit(\"rejoin\", {roomId: tempRoomId});\n  }, [])\n\n  useEffect(()=>{\n    socket.on(\"final-room\", ({roomId})=>{\n      // console.log(roomId);\n      setFinalRoomId(roomId);\n    })\n  }, [socket]);\n\n  function updateMapWithServer(){\n    // console.log(\"received\");\n    // socket.emit(\"test\", {roomId: finalRoomId, socketId: props.socketId});\n    socket.emit(\"update\", {turn: tempTurn, roomId: finalRoomId, socketId: props.socketId, position: position, tempId: t, tempBoxColor: tempBoxColor});\n  }\n  \n  useEffect(()=>{\n    // console.log(socket);\n    socket.on(\"updated\", (data)=>{\n      position = data.position;\n      tempBoxColor = data.tempBoxColor;\n      updateLocalVariablesWithServerValues(data.tempId, data.turn);\n      elementCheckUtilityFunction(position, data.tempId);\n    });\n  }, [socket]);\n\n  // useEffect(()=>{socket.on(\"test\", (message)=>{\n  //     console.log(message);\n  //   });\n  // }, [socket]);\n\n  function updateLocalVariablesWithServerValues(tempId, tempColor){\n    setTempId(tempId);\n    setTempColor(tempColor);\n    // console.log(\"tempColor: \"+tempColor);\n  }\n\n  (function initMap(){\n    console.log(props.gridSize)\n    if(mapFlag){\n      for(i=0; i<65; ++i){\n      // for(i=0; i<props.gridSize==4?65:225; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n      setMapFlag(false);\n    }\n  })();\n\n  (function initBoxMap(){\n    if(boxFlag){\n      // for(i=1; i<=props.gridSize==4?4:8; ++i){\n      for(i=1; i<=4; ++i){\n        // for(j=1; j<=props.gridSize==4?4:8; ++j)\n        for(j=1; j<=4; ++j)\n          boxMap.set(\"b-\"+i+\"-\"+j, \"transparent\");\n      }\n      setBoxFlag(false);\n    }\n  })();\n\n  function updateMap(position){\n    if(elMap.get(position)!==\"clicked\"){\n      setMap(elMap.set(position, \"clicked\"));\n      // console.log(elMap);\n    }\n  }\n\n  function elementCheckUtilityFunction(position, id){\n    // console.log(\"here\");\n    updateMap(position);\n    setTurnFunc();\n    if(id.charAt(0) == \"h\"){\n      checkVerticalBoxes(id);\n    }\n    else{\n      checkHorizontalBoxes(id);\n    }\n  }\n\n  function elementCheck(id){\n    console.log(elMap);\n    t=id;\n    tempBoxColor=\"\"\n    position = calcPosition(id);\n    elementCheckUtilityFunction(position, id);\n    tempTurn = turn;\n    if(!props.vsComp)\n      updateMapWithServer();\n  }\n  \n  function calcPosition(id){\n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    position = part1 + part2;\n    console.log(position);\n    return position;\n  }\n\n  function setTurnFunc(){\n    setTurn(turn=>turn===red?blue:red);\n    // console.log(\"In the setTurn function: \"+turn);\n  }\n\n  function stayTurn(boxColor){\n    setTurn(boxColor);\n  }\n\n  function checkVerticalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n-1)+\"-\"+m;\n    id2=\"h-\"+(n+1)+\"-\"+m;\n    id3=\"v-\"+(n-1)+\"-\"+m;\n    id4=\"v-\"+(n-1)+\"-\"+(m+1);\n    id5=\"v-\"+(n)+\"-\"+m;\n    id6=\"v-\"+(n)+\"-\"+(m+1);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n    \n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        console.log(\"upper and lower boxes filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n        console.log(\"upper box filled\");\n      setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+(n-1)+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n        console.log(\"lower box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n  \n  function checkHorizontalBoxes(id){\n    // console.log(id);\n    var id1, id2, id3, id4, id5, id6;\n    var pos1, pos2, pos3, pos4, pos5, pos6;\n    var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n    id1=\"h-\"+(n)+\"-\"+(m-1);\n    id2=\"v-\"+(n)+\"-\"+(m-1);\n    id3=\"h-\"+(n+1)+\"-\"+(m-1);\n    id4=\"h-\"+(n)+\"-\"+(m);\n    id5=\"v-\"+(n)+\"-\"+(m+1);\n    id6=\"h-\"+(n+1)+\"-\"+(m);\n    pos1=calcPosition(id1);\n    pos2=calcPosition(id2);\n    pos3=calcPosition(id3);\n    pos4=calcPosition(id4);\n    pos5=calcPosition(id5);\n    pos6=calcPosition(id6);\n\n    if(tempBoxColor==\"\"){\n      var boxColor = turn;\n    }\n    else{\n      var boxColor = tempBoxColor;\n    }\n\n    if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      console.log(\"left and right boxes filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n      console.log(\"left box filled\");\n      setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+(m-1)));\n      updateTotal();\n    }\n    else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n      console.log(\"right box filled\");\n      setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n      stayTurn(boxColor);\n      updateScore((\"b-\"+n+\"-\"+m));\n      updateTotal();\n    }\n    // console.log(boxMap);\n    tempBoxColor=boxColor;\n  }\n\n  function updateScore(tempBoxId){\n    if(boxMap.get(tempBoxId)==red){\n      setRedScore(redScore=>redScore+1);\n    }\n    else if(boxMap.get(tempBoxId)==blue){\n      setBlueScore(blueScore=>blueScore+1);\n    }\n  }\n\n  function updateTotal(){\n    tempBoxCount=0;\n    for (const [key, value] of boxMap.entries()) {\n      if(value!=\"transparent\"){\n        // console.log(key+\": \"+value);\n        tempBoxCount++;\n      }\n    }\n    console.log(\"tempBoxCount: \"+tempBoxCount);\n    if(props.gridSize == 4){\n      if(tempBoxCount == 16){\n        setGameOver(true);\n      }\n    }\n    else if(props.gridSize == 8){\n      if(tempBoxCount == 64){\n        setGameOver(true);\n      }\n    }    \n    // console.log(\"totalScore: \"+(redScore+blueScore));\n    // if(props.gridSize == 4 && redScore+blueScore == 15){\n    //   setGameOver(true);\n    // }\n    // else if(props.gridSize == 8 && redScore+blueScore == 63){\n    //   setGameOver(true);\n    // }\n  }\n  \n  // function compCheckVerticalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n    \n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\" && elMap.get(pos4)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+(n-1)+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+(n-1)+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheckHorizontalBoxes(id, elRef){\n  //   // console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   var boxColor = turn==blue?blue:red;\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\" && elMap.get(pos3)==\"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set(\"b-\"+n+\"-\"+(m-1), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+(m-1)));\n  //     updateTotal();\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\" && elMap.get(pos6)== \"clicked\"){\n  //     compBoxFlag = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //     setBoxMap(boxMap.set((\"b-\"+n+\"-\"+m), boxColor));\n  //     stayTurn();\n  //     updateScore((\"b-\"+n+\"-\"+m));\n  //     updateTotal();\n  //   }\n  // }\n\n  // function compCheck1lineHorizontal(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n-1)+\"-\"+m;\n  //   id2=\"h-\"+(n+1)+\"-\"+m;\n  //   id3=\"v-\"+(n-1)+\"-\"+m;\n  //   id4=\"v-\"+(n-1)+\"-\"+(m+1);\n  //   id5=\"v-\"+(n)+\"-\"+m;\n  //   id6=\"v-\"+(n)+\"-\"+(m+1);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos3)==\"clicked\" && elMap.get(pos4)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos2)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compCheck1lineVertical(id, elRef){\n  //   console.log(id);\n  //   var id1, id2, id3, id4, id5, id6;\n  //   var pos1, pos2, pos3, pos4, pos5, pos6;\n  //   var n = parseInt(id.charAt(2)), m = parseInt(id.charAt(4));\n  //   id1=\"h-\"+(n)+\"-\"+(m-1);\n  //   id2=\"v-\"+(n)+\"-\"+(m-1);\n  //   id3=\"h-\"+(n+1)+\"-\"+(m-1);\n  //   id4=\"h-\"+(n)+\"-\"+(m);\n  //   id5=\"v-\"+(n)+\"-\"+(m+1);\n  //   id6=\"h-\"+(n+1)+\"-\"+(m);\n  //   pos1=calcPosition(id1);\n  //   pos2=calcPosition(id2);\n  //   pos3=calcPosition(id3);\n  //   pos4=calcPosition(id4);\n  //   pos5=calcPosition(id5);\n  //   pos6=calcPosition(id6);\n\n  //   if(elMap.get(pos1)==\"clicked\" && elMap.get(pos2)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos1)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   if(elMap.get(pos2)==\"clicked\" && elMap.get(pos3)== \"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos5)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos4)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  //   else if(elMap.get(pos5)== \"clicked\" && elMap.get(pos6)==\"clicked\"){\n  //     comp2line = true;\n  //     compTempPos = calcPosition(id);\n  //     elMap.set(compTempPos, \"clicked\");\n  //     elRef.current.style.backgroundColor = blue;\n  //   }\n  // }\n\n  // function compFunc(elRef){\n  //   console.log(\"computer's turn\");\n  //   console.log(elMap);\n  //   compBoxFlag = false;\n  //   var comp1line = false;\n  //   var comp0line = false;\n\n  //   if(compBoxFlag == false){\n  //     // check box completion\n  //     console.log(\"check box completion\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(compBoxFlag == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             compCheckVerticalBoxes(compTempId1, elRef);\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             compCheckHorizontalBoxes(compTempId2, elRef);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if(compBoxFlag == false && comp1line == false && comp0line == false){\n  //     // check 0 line clicked\n  //     console.log(\"check 0 line clicked\")\n  //     for(var i=1; i<=props.gridSize+1; ++i){\n  //       for(var j=1; j<=props.gridSize; ++j){\n  //         var compTempId1 = \"h-\"+[i]+\"-\"+[j];\n  //         var compTempId2 = \"v-\"+[j]+\"-\"+[i];\n  //         while(comp0line == false){\n  //           if(elMap.get(calcPosition(compTempId1))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId1);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //           if(elMap.get(calcPosition(compTempId2))!=\"clicked\"){\n  //             comp0line = true;\n  //             compTempPos = calcPosition(compTempId2);\n  //             elMap.set(compTempPos, \"clicked\");\n  //             elRef.current.style.backgroundColor = blue;\n  //           }\n  //         }  \n  //       }\n  //     }\n  //   }\n  // }\n  \n  const playerColorToastId = useRef(null);\n  useEffect(() => {\n    var playerColor = assignedColor==\"#c5183b\"?\"Red\":\"Blue\";\n    playerColorToastId.current = toast(\"You are \"+playerColor, {\n      className: css({\n        background: \"#c5183b !important\",\n      }),\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined,\n    });  \n  }, []);\n\n  function notTurnFunc(){\n    toast(\"It's not your turn\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined,\n    }); \n  }\n\n  function sendMessage(tempMessage, playerRole){\n    if(tempMessage==\"\"){\n        return;\n    }\n    // const tempMessageArr = [...messageArr];\n    // console.log(tempMessageArr);\n    // tempMessageArr.push(tempMessage);\n    // setMessageArr(tempMessageArr);\n    // console.log(tempMessageArr);\n    socket.emit(\"send-message\", {roomId: finalRoomId, tempMessage: tempMessage, playerRole: playerRole});\n  }\n\n  socket.off(\"receive-message\");\n  socket.on(\"receive-message\", (tempMessage, playerRole)=>{\n      console.log(\"message received\");\n\n      const tempMessageArr = [...messageArr];\n      tempMessageArr.push({sender: playerRole, message: tempMessage});\n      console.log(tempMessageArr);\n      setMessageArr(tempMessageArr);\n    })\n\n    useEffect(()=>{\n      if(playerColorToastId.current!=null && showChat){\n        toast.dismiss(playerColorToastId.current);\n      }\n      if(showChat){\n        // console.log(\"here\");\n        // setLastSeen(messageArr.length);\n        // var tempLastSeen = messageArr.length;\n        // var tempUnreadCount = messageArr.length-tempLastSeen;\n        setUnreadCount(tempUnreadCount);\n      }\n      var tempUnreadCount = messageArr.length-lastSeen;\n      setUnreadCount(tempUnreadCount);\n    }, [showChat])\n\n    useEffect(()=>{\n      if(showChat){\n        setUnreadCount(0);\n        setLastSeen(messageArr.length);\n      }\n      else{\n        console.log(\"closed\")\n        var tempUnreadCount = messageArr.length-lastSeen;\n        setUnreadCount(tempUnreadCount);\n      }\n    }, [messageArr.length])\n\n\n  return (\n    <>\n    {/* {JSON.stringify(showChat)}\n    {console.log(showChat)} */}\n    <Header gridSize={props.gridSize}/>\n      <div className=\"center-container\">\n        <div className={!gameOver?\"show-grid\":\"hide-grid\"}>\n          <Grid \n            gridSize={props.gridSize}\n            func={elementCheck}  \n            turn={turn} \n            map={elMap} \n            boxMap={boxMap} \n            vsComp={props.vsComp} \n            tempColor={tempColor}\n            tempId={tempId}\n            assignedColor={assignedColor}\n            notTurnFunc = {notTurnFunc}\n          />\n        </div>\n\n        <div className={!gameOver?\"hide-game-over\":\"show-game-over\"}>\n          <GameOver redScore={redScore} blueScore={blueScore} gridSize={props.gridSize} boxMap={boxMap} vsComp={props.vsComp}/>\n        </div>\n        {/* {console.log(turn)} */}\n        <div className={!gameOver?\"score-container\":\"hide-score-container\"}>\n          <h2 className=\"score\" id={turn==red?\"turn-score-red\":\"score-red\"}>Red: {redScore}</h2>\n          <h2 className=\"score\" id={turn==blue?\"turn-score-blue\":\"score-blue\"}>Blue: {blueScore}</h2>\n        </div>\n      </div>\n    {!props.vsComp&&<div className={assignedColor==red?\"chat-button-container-red\":\"chat-button-container-blue\"}>\n      <div className=\"chat-button\" onClick={()=>{\n        setShowChat(!showChat);\n      }\n      }>\n        <div className=\"unread-count-container\" style={{visibility: unreadCount==0?\"hidden\":\"visible\"}}>\n          {unreadCount}\n        </div>\n      </div>\n    </div>}\n    {!props.vsComp&&\n      <Chat sendMessage={sendMessage} messageArr={messageArr} chatColor={assignedColor} roomId={finalRoomId} playerRole={props.playerRole} showChat={showChat}/>\n    }\n    <ToastContainer />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}