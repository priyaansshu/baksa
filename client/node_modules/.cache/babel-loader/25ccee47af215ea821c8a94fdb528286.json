{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport \"../style.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState(\"\"); // var chatColor = props.chatColor==\"#c5183b\"?\"rgba(195, 24, 58, 0.5)\":\"rgba(59, 146, 155, 0.5)\";\n\n  var chatColor = props.chatColor == \"#c5183b\" ? \"#c5183b\" : \"#3b919b\";\n  const anchorRef = useRef();\n  useEffect(() => {\n    anchorRef.current.scrollIntoView({\n      behaviour: 'smooth'\n    });\n  }, [props.messageArr]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-outer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-role-container\",\n        style: {\n          color: props.chatColor\n        },\n        children: [\"Chat as \", chatColor == \"#c5183b\" ? \"Red\" : \"Blue\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main-container\",\n        children: [props.messageArr.map((msg, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chat-message-text\",\n              style: {\n                color: msg.sender == 1 ? \"#c5183b\" : \"#3b919b\"\n              },\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: anchorDiv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat-input\",\n          placeholder: \"Type a message...\",\n          values: message,\n          onKeyPress: e => {\n            if (e.key === \"Enter\") {\n              props.sendMessage(e.target.value, props.playerRole);\n              e.target.value = \"\";\n            }\n          },\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat-send-button\",\n          onClick: () => {\n            props.sendMessage(message, props.playerRole);\n            setMessage(\"\");\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"dXs+qlRTep/U7X7TWGHrpO/2sYM=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Chat.js"],"names":["React","useState","useEffect","useRef","io","socket","Chat","props","message","setMessage","chatColor","anchorRef","current","scrollIntoView","behaviour","messageArr","color","map","msg","index","sender","anchorDiv","e","key","sendMessage","target","value","playerRole"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport \"../style.css\";\nimport {io} from \"socket.io-client\";\n\nconst socket = io('http://localhost:4000');\n\nexport default function Chat(props) {\n    const [message, setMessage]= useState(\"\");\n    // var chatColor = props.chatColor==\"#c5183b\"?\"rgba(195, 24, 58, 0.5)\":\"rgba(59, 146, 155, 0.5)\";\n    var chatColor = props.chatColor==\"#c5183b\"?\"#c5183b\":\"#3b919b\";\n    const anchorRef = useRef();\n\n    useEffect(()=>{\n        anchorRef.current.scrollIntoView({behaviour: 'smooth'});\n    }, [props.messageArr])\n\n    return (\n    <>\n        <div className=\"chat-outer-container\">\n            <div className=\"chat-role-container\" style={{color: props.chatColor}}>\n                Chat as {chatColor==\"#c5183b\"?\"Red\":\"Blue\"}\n            </div>\n            <div className=\"chat-main-container\">\n                {props.messageArr.map((msg, index)=>{\n                    return(\n                        <div \n                            className=\"chat-message-container\" \n                            key={index}\n                        >\n                                <p \n                                    className=\"chat-message-text\"\n                                    style={{color: msg.sender==1?\"#c5183b\":\"#3b919b\"}}\n                                >\n                                        {msg.message}\n                                </p>\n                        </div>\n                    )\n                })}\n                <div ref={anchorDiv}></div>\n            </div>\n            <div className=\"chat-input-container\">\n                <input \n                    type=\"text\" \n                    className=\"chat-input\"\n                    placeholder=\"Type a message...\"\n                    values={message}\n                    onKeyPress={(e)=>{\n                        if(e.key===\"Enter\"){\n                            props.sendMessage(e.target.value, props.playerRole);\n                            e.target.value=\"\";\n                        }\n                    }}\n                    onChange={(e)=>{\n                        setMessage(e.target.value);\n                    }}\n                />\n                <button\n                    className=\"chat-send-button\"\n                    onClick={()=>{\n                        props.sendMessage(message, props.playerRole);\n                        setMessage(\"\");\n                    }\n                    }\n                >\n                    Send\n                </button>\n            </div>\n        </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}