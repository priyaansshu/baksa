{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/Room.js\";\nimport React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nimport { io } from \"socket.io-client\";\nimport Game from \"./Game\";\nimport Header from './Components/Header';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nexport default function (props) {\n  const [roomId, setRoomId] = useState(\"\");\n  const [shared, setShared] = useState(false);\n  const [joined, setJoined] = useState(false);\n  const [roomFull, setRoomFull] = useState(false);\n  const [playerRole, setPlayerRole] = useState(); // playerRole=1 if he created the room, else 2 if he joined one\n\n  const [roomCode, setRoomCode] = useState();\n  const [roomDoesNotExist, setRoomDoesNotExist] = useState(false);\n  var finalRoomCode = generateRandomString(6);\n  socket.on(\"start-game\", () => {\n    setJoined(true);\n  });\n  socket.off(\"room-full\").on(\"room-full\", () => {\n    toast(\"Room is full\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n    console.log(\"room is full\");\n  });\n  socket.off('room-does-not-exist').on(\"room-does-not-exist\", () => {\n    setRoomDoesNotExist(true);\n  });\n  useEffect(() => {\n    if (roomDoesNotExist) {\n      console.log(\"here\");\n      toast(\"Room does not exist\", {\n        position: \"top-right\",\n        autoClose: 1000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n      console.log(\"Room does not exist\");\n      setRoomDoesNotExist(false);\n    }\n  }, [roomDoesNotExist]);\n\n  function idCopied() {\n    toast(\"Room ID copied to clipboard\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined\n    });\n  }\n\n  const generateRandomString = myLength => {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const randomArray = Array.from({\n      length: myLength\n    }, (v, k) => chars[Math.floor(Math.random() * chars.length)]);\n    const randomString = randomArray.join(\"\");\n    return randomString;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      gridSize: props.gridSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), joined ? /*#__PURE__*/_jsxDEV(Game, {\n      gridSize: props.gridSize,\n      roomId: finalRoomCode,\n      socketId: socket.id,\n      playerRole: playerRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : !shared ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-room\",\n          onClick: () => {\n            idCopied();\n            setShared(true);\n            var tempRoomCode = generateRandomString(6);\n            setRoomCode(tempRoomCode); // console.log(tempRoomCode);\n\n            socket.emit(\"room-created\", tempRoomCode);\n            setPlayerRole(1);\n            navigator.clipboard.writeText(tempRoomCode);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-room-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"room-input\",\n          type: \"text\",\n          style: roomId !== \"\" ? {\n            marginRight: \"10px\"\n          } : {\n            marginRight: \"0px\"\n          },\n          onChange: e => {\n            setRoomId(e.target.value);\n          },\n          onKeyPress: e => {\n            if (e.key === \"Enter\") {\n              setPlayerRole(2);\n              socket.emit(\"joined-room\", roomId);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), roomId !== \"\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"join-room\",\n          onClick: () => {\n            setPlayerRole(2);\n            socket.emit(\"joined-room\", roomId);\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this) : console.log(\"Enter Room Id\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), !roomFull ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-id-statement\",\n        children: \"Share Room ID with a friend or enter a Room ID to start the game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-full-statement\",\n        children: \"Room is already full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-main-container waiting-room-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-icon-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-id-container\",\n        onClick: () => {\n          idCopied();\n          navigator.clipboard.writeText(roomCode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-id-statement\",\n        children: \"Waiting for the other player to join the room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Room.js"],"names":["React","useEffect","useState","io","Game","Header","ToastContainer","toast","socket","props","roomId","setRoomId","shared","setShared","joined","setJoined","roomFull","setRoomFull","playerRole","setPlayerRole","roomCode","setRoomCode","roomDoesNotExist","setRoomDoesNotExist","finalRoomCode","generateRandomString","on","off","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","console","log","idCopied","myLength","chars","randomArray","Array","from","length","v","k","Math","floor","random","randomString","join","gridSize","id","tempRoomCode","emit","navigator","clipboard","writeText","marginRight","e","target","value","key"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport \"./style.css\"\nimport {io} from \"socket.io-client\"\nimport Game from \"./Game\"\nimport Header from './Components/Header';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst socket = io('http://localhost:4000');\n\nexport default function (props) {\n    const [roomId, setRoomId] = useState(\"\");\n    const [shared, setShared] = useState(false);\n    const [joined, setJoined] = useState(false)\n    const [roomFull, setRoomFull] = useState(false);\n    const [playerRole, setPlayerRole] = useState(); // playerRole=1 if he created the room, else 2 if he joined one\n    const [roomCode, setRoomCode] = useState();\n    const [roomDoesNotExist, setRoomDoesNotExist] = useState(false);\n    var finalRoomCode = generateRandomString(6);\n    \n    socket.on(\"start-game\", ()=>{\n        setJoined(true);\n    })\n    socket.off(\"room-full\").on(\"room-full\", ()=>{\n        toast(\"Room is full\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });\n        console.log(\"room is full\")\n    })\n    socket.off('room-does-not-exist').on(\"room-does-not-exist\", ()=>{\n        setRoomDoesNotExist(true);\n    })\n\n    useEffect(()=>{ \n        if(roomDoesNotExist){\n            console.log(\"here\");\n            toast(\"Room does not exist\", {\n                position: \"top-right\",\n                autoClose: 1000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: true,\n                progress: undefined,\n            });\n            console.log(\"Room does not exist\");\n            setRoomDoesNotExist(false);\n        }\n    }, [roomDoesNotExist])\n\n    function idCopied (){\n        toast(\"Room ID copied to clipboard\", {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: undefined,\n        });  \n    } \n\n    const generateRandomString = (myLength) => {\n        const chars =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        const randomArray = Array.from(\n          { length: myLength },\n          (v, k) => chars[Math.floor(Math.random() * chars.length)]\n        );\n      \n        const randomString = randomArray.join(\"\");\n        return randomString;\n      };\n\n    return (\n        <>\n        <Header gridSize={props.gridSize}/>\n        {joined?\n        <Game gridSize={props.gridSize} roomId={finalRoomCode} socketId={socket.id} playerRole={playerRole}/>:\n        !shared?\n        <div className=\"rooms-main-container\">\n            <div className=\"create-room-container\">\n                <button \n                    className=\"create-room\" \n                    onClick={()=>{\n                        idCopied();\n                        setShared(true);\n                        var tempRoomCode = generateRandomString(6);\n                        setRoomCode(tempRoomCode);\n                        // console.log(tempRoomCode);\n                        socket.emit(\"room-created\", tempRoomCode);\n                        setPlayerRole(1)\n                        navigator.clipboard.writeText(tempRoomCode)\n                        }\n                    }>    \n                </button>\n            </div>\n            <div className=\"join-room-container\">\n                <input \n                    className=\"room-input\" \n                    type=\"text\" \n                    style={roomId!==\"\"?{marginRight: \"10px\"}:{marginRight:\"0px\"}}\n                    onChange={(e)=>{\n                        setRoomId(e.target.value);\n                    }} \n                    onKeyPress={(e)=>{\n                        if(e.key===\"Enter\"){\n                            setPlayerRole(2)\n                            socket.emit(\"joined-room\", roomId);\n                        }\n                    }}\n                />\n                {roomId!==\"\"?\n                    <button className=\"join-room\"   \n                        onClick={()=>{\n                            setPlayerRole(2);\n                            socket.emit(\"joined-room\", roomId)\n                        }}>\n                    Join\n                    </button>\n                :console.log(\"Enter Room Id\")\n                }\n            </div>\n            {!roomFull?\n                <p className=\"room-id-statement\">Share Room ID with a friend or enter a Room ID to start the game</p>\n            :\n                <p className=\"room-full-statement\">Room is already full</p>\n            }\n        </div>:\n        <div className=\"rooms-main-container waiting-room-container\">\n            <div className=\"waiting-icon-container\">\n            </div>\n            <div className=\"room-id-container\" onClick={()=>{\n                idCopied();\n                navigator.clipboard.writeText(roomCode);\n                }\n            }>\n                <span>{roomCode}</span>\n            </div>\n            <p className=\"room-id-statement\">Waiting for the other player to join the room</p>\n        </div>}\n        <ToastContainer/>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}