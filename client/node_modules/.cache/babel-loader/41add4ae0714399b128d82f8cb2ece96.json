{"ast":null,"code":"import React,{useState}from'react';import Dot from\"./Dot\";import\"../style.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Container(props){var grid=[];var dotCount,horizontalCount,verticalCount;var keyCountHorizontal=0,keyCountVertical=0,boxCount=1;var i;var rowCount=Math.floor(props.row/2)+1;var elPerRow=props.gridSize==4?9:17;(function createBoard(){if(props.row%2==0){for(i=0;i<elPerRow;++i){dotCount=keyCountHorizontal/2+1;horizontalCount=Math.ceil((keyCountHorizontal+1)/2);grid.push(/*#__PURE__*/_jsx(Dot,{elementName:i%2==0?\"dot\":\"horizontal-bar\",elementId:i%2==0?\"d-\"+rowCount+\"-\"+dotCount:\"h-\"+rowCount+\"-\"+horizontalCount,func:props.func,turn:props.turn,map:props.map,boxMap:props.boxMap,gridSize:props.gridSize,vsComp:props.vsComp// compFunc={props.compFunc}\n},keyCountHorizontal++));}}else{for(i=0;i<elPerRow;++i){verticalCount=keyCountVertical/2+1;grid.push(/*#__PURE__*/_jsx(Dot,{elementName:i%2==0?\"vertical-bar\":\"box\",elementId:i%2==0?\"v-\"+rowCount+\"-\"+verticalCount:\"b-\"+rowCount+\"-\"+boxCount++,func:props.func,turn:props.turn,map:props.map,boxMap:props.boxMap,gridSize:props.gridSize,vsComp:props.vsComp// compFunc={props.compFunc}\n},keyCountVertical++));}}})();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:props.containerName,id:props.containerId,children:grid})});}","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/Components/Container.js"],"names":["React","useState","Dot","Container","props","grid","dotCount","horizontalCount","verticalCount","keyCountHorizontal","keyCountVertical","boxCount","i","rowCount","Math","floor","row","elPerRow","gridSize","createBoard","ceil","push","func","turn","map","boxMap","vsComp","containerName","containerId"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,cAAP,C,gGAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACrC,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIC,CAAAA,QAAJ,CAAcC,eAAd,CAA+BC,aAA/B,CACA,GAAIC,CAAAA,kBAAkB,CAAG,CAAzB,CAA4BC,gBAAgB,CAAG,CAA/C,CAAkDC,QAAQ,CAAG,CAA7D,CACA,GAAIC,CAAAA,CAAJ,CACA,GAAIC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWX,KAAK,CAACY,GAAN,CAAU,CAArB,EAAwB,CAAvC,CACA,GAAIC,CAAAA,QAAQ,CAAGb,KAAK,CAACc,QAAN,EAAgB,CAAhB,CAAkB,CAAlB,CAAoB,EAAnC,CACA,CAAC,QAASC,CAAAA,WAAT,EAAsB,CACnB,GAAGf,KAAK,CAACY,GAAN,CAAU,CAAV,EAAa,CAAhB,CAAkB,CACd,IAAIJ,CAAC,CAAC,CAAN,CAASA,CAAC,CAACK,QAAX,CAAqB,EAAEL,CAAvB,CAAyB,CACrBN,QAAQ,CAAIG,kBAAkB,CAAC,CAAnB,CAAuB,CAAnC,CACAF,eAAe,CAAGO,IAAI,CAACM,IAAL,CAAU,CAACX,kBAAkB,CAAC,CAApB,EAAuB,CAAjC,CAAlB,CACAJ,IAAI,CAACgB,IAAL,cAAU,KAAC,GAAD,EAEM,WAAW,CAAET,CAAC,CAAC,CAAF,EAAK,CAAL,CAAO,KAAP,CAAa,gBAFhC,CAGM,SAAS,CAAEA,CAAC,CAAC,CAAF,EAAK,CAAL,CAAO,KAAKC,QAAL,CAAc,GAAd,CAAkBP,QAAzB,CAAkC,KAAKO,QAAL,CAAc,GAAd,CAAkBN,eAHrE,CAIM,IAAI,CAAEH,KAAK,CAACkB,IAJlB,CAKM,IAAI,CAAElB,KAAK,CAACmB,IALlB,CAMM,GAAG,CAAEnB,KAAK,CAACoB,GANjB,CAOM,MAAM,CAAEpB,KAAK,CAACqB,MAPpB,CAQM,QAAQ,CAAErB,KAAK,CAACc,QARtB,CASM,MAAM,CAAEd,KAAK,CAACsB,MACd;AAVN,EACWjB,kBAAkB,EAD7B,CAAV,EAYH,CACJ,CAjBD,IAkBI,CACA,IAAIG,CAAC,CAAC,CAAN,CAASA,CAAC,CAACK,QAAX,CAAqB,EAAEL,CAAvB,CAAyB,CACrBJ,aAAa,CAAIE,gBAAgB,CAAC,CAAjB,CAAqB,CAAtC,CACAL,IAAI,CAACgB,IAAL,cAAU,KAAC,GAAD,EAEM,WAAW,CAAET,CAAC,CAAC,CAAF,EAAK,CAAL,CAAO,cAAP,CAAsB,KAFzC,CAGM,SAAS,CAAEA,CAAC,CAAC,CAAF,EAAK,CAAL,CAAO,KAAKC,QAAL,CAAc,GAAd,CAAkBL,aAAzB,CAAuC,KAAKK,QAAL,CAAc,GAAd,CAAkBF,QAAQ,EAHlF,CAIM,IAAI,CAAEP,KAAK,CAACkB,IAJlB,CAKM,IAAI,CAAElB,KAAK,CAACmB,IALlB,CAMM,GAAG,CAAEnB,KAAK,CAACoB,GANjB,CAOM,MAAM,CAAEpB,KAAK,CAACqB,MAPpB,CAQM,QAAQ,CAAErB,KAAK,CAACc,QARtB,CASM,MAAM,CAAEd,KAAK,CAACsB,MACd;AAVN,EACWhB,gBAAgB,EAD3B,CAAV,EAYH,CACJ,CACJ,CApCD,IAsCA,mBACI,sCACI,YAAK,SAAS,CAAEN,KAAK,CAACuB,aAAtB,CAAqC,EAAE,CAAEvB,KAAK,CAACwB,WAA/C,UAA6DvB,IAA7D,EADJ,EADJ,CAKH","sourcesContent":["import React, {useState} from 'react'\nimport Dot from \"./Dot\";\nimport \"../style.css\";\n\nexport default function Container(props) {\n    var grid = [];\n    var dotCount, horizontalCount, verticalCount;\n    var keyCountHorizontal = 0, keyCountVertical = 0, boxCount = 1;\n    let i;\n    let rowCount = Math.floor(props.row/2)+1;\n    var elPerRow = props.gridSize==4?9:17;\n    (function createBoard(){\n        if(props.row%2==0){\n            for(i=0; i<elPerRow; ++i){\n                dotCount = (keyCountHorizontal/2 + 1);\n                horizontalCount = Math.ceil((keyCountHorizontal+1)/2);\n                grid.push(<Dot \n                                key={keyCountHorizontal++} \n                                elementName={i%2==0?\"dot\":\"horizontal-bar\"}\n                                elementId={i%2==0?\"d-\"+rowCount+\"-\"+dotCount:\"h-\"+rowCount+\"-\"+horizontalCount}\n                                func={props.func}\n                                turn={props.turn}\n                                map={props.map}\n                                boxMap={props.boxMap}\n                                gridSize={props.gridSize}\n                                vsComp={props.vsComp}\n                                // compFunc={props.compFunc}\n                            />)\n            }   \n        }\n        else{\n            for(i=0; i<elPerRow; ++i){\n                verticalCount = (keyCountVertical/2 + 1);\n                grid.push(<Dot\n                                key={keyCountVertical++}\n                                elementName={i%2==0?\"vertical-bar\":\"box\"}\n                                elementId={i%2==0?\"v-\"+rowCount+\"-\"+verticalCount:\"b-\"+rowCount+\"-\"+boxCount++}\n                                func={props.func}\n                                turn={props.turn}\n                                map={props.map}\n                                boxMap={props.boxMap}\n                                gridSize={props.gridSize}\n                                vsComp={props.vsComp}\n                                // compFunc={props.compFunc}\n                            />)\n            }\n        }\n    })()\n    \n    return (\n        <>\n            <div className={props.containerName} id={props.containerId}>{grid}</div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}