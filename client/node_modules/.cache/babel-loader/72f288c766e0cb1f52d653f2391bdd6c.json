{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshumodi/Desktop/Code/React/dot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport react, { useState } from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var i;\n  const [elMap, setMap] = useState(new Map());\n  const [turn, setTurn] = useState(\"#c5183b\");\n  const [flag, setFlag] = useState(true);\n\n  (function initMap() {\n    if (flag) {\n      for (i = 0; i < 65; ++i) {\n        elMap.set(i, \"unclicked\");\n      }\n\n      setFlag(false);\n    }\n  })();\n\n  function elementCheck(id) {\n    console.log(\"Clicked element is \" + id);\n    var part1 = 0,\n        part2 = 0,\n        position = 0;\n\n    if (id.charAt(0) == \"d\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 2;\n    } else if (id.charAt(0) == \"h\") {\n      part1 = 14 * (parseInt(id.charAt(2)) - 1);\n      part2 = 2 * parseInt(id.charAt(4)) - 1;\n    } else {\n      part1 = 14 * parseInt(id.charAt(2)) - 5;\n      part2 = parseInt(id.charAt(4));\n    }\n\n    position = part1 + part2;\n    setMap(elMap.set(position, \"clicked\")); // console.log(elMap);\n\n    colorBars();\n  }\n\n  function colorBars() {\n    setTurn(turn == \"#c5183b\" ? \"#3b919b\" : \"#c5183b\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Dot Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        func: elementCheck,\n        turn: turn,\n        map: elMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"ip7uR6K0EA0GRkYtteGjJbgodv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/priyanshumodi/Desktop/Code/React/dot/src/App.js"],"names":["logo","react","useState","Dot","Grid","App","i","elMap","setMap","Map","turn","setTurn","flag","setFlag","initMap","set","elementCheck","id","console","log","part1","part2","position","charAt","parseInt","colorBars"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport react, {useState} from 'react';\nimport \"./style.css\";\nimport Dot from './Components/Dot';\nimport Grid from './Components/Grid';\n\nfunction App() {\n  var i;\n  const [elMap, setMap] = useState(new Map());\n  const [turn, setTurn] = useState(\"#c5183b\");\n  const [flag, setFlag] = useState(true);\n\n  \n  (function initMap(){\n    if(flag){\n      for(i=0; i<65; ++i){\n        elMap.set(i, \"unclicked\");\n      }\n      setFlag(false);\n    }\n  })()\n\n  function elementCheck(id){\n    console.log(\"Clicked element is \" + id);\n    \n    var part1=0, part2=0, position=0;\n    if(id.charAt(0)==\"d\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-2;\n    }\n    else if(id.charAt(0)==\"h\"){\n      part1 = 14*(parseInt(id.charAt(2))-1);\n      part2 = 2*(parseInt(id.charAt(4)))-1;\n    }\n    else{\n      part1 = 14*(parseInt(id.charAt(2)))-5;\n      part2 = parseInt(id.charAt(4));\n    }\n    position = part1 + part2;\n    setMap(elMap.set(position, \"clicked\"));\n\n    // console.log(elMap);\n    colorBars();\n  }\n  \n  function colorBars(){\n    setTurn(turn==\"#c5183b\"?\"#3b919b\":\"#c5183b\");\n  }\n\n  return (\n    <>\n      <div className=\"center-container\">\n        <h1 className=\"title\">Dot Game</h1>\n        <Grid func={elementCheck} turn={turn} map={elMap}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}